(function (n) { "function" == typeof define && define.amd ? define(["jquery", "moment"], n) : n(jQuery, moment) })(function (n, t) { function r(n, t) { var i = n.split("_"); return 1 == t % 10 && 11 != t % 100 ? i[0] : t % 10 >= 2 && 4 >= t % 10 && (10 > t % 100 || t % 100 >= 20) ? i[1] : i[2] } function i(n, t, i) { var u = { mm: t ? "минута_минуты_минут" : "минуту_минуты_минут", hh: "час_часа_часов", dd: "день_дня_дней", MM: "месяц_месяца_месяцев", yy: "год_года_лет" }; return "m" === i ? t ? "минута" : "минуту" : n + " " + r(u[i], +n) } function u(n, t) { var i = { nominative: "январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь".split("_"), accusative: "января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря".split("_") }, r = /D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/.test(t) ? "accusative" : "nominative"; return i[r][n.month()] } function f(n, t) { var i = { nominative: "янв_фев_мар_апр_май_июнь_июль_авг_сен_окт_ноя_дек".split("_"), accusative: "янв_фев_мар_апр_мая_июня_июля_авг_сен_окт_ноя_дек".split("_") }, r = /D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/.test(t) ? "accusative" : "nominative"; return i[r][n.month()] } function e(n, t) { var i = { nominative: "воскресенье_понедельник_вторник_среда_четверг_пятница_суббота".split("_"), accusative: "воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу".split("_") }, r = /\[ ?[Вв] ?(?:прошлую|следующую)? ?\] ?dddd/.test(t) ? "accusative" : "nominative"; return i[r][n.day()] } (t.defineLocale || t.lang).call(t, "ru", { months: u, monthsShort: f, weekdays: e, weekdaysShort: "вс_пн_вт_ср_чт_пт_сб".split("_"), weekdaysMin: "вс_пн_вт_ср_чт_пт_сб".split("_"), monthsParse: [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[й|я]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i], longDateFormat: { LT: "HH:mm", L: "DD.MM.YYYY", LL: "D MMMM YYYY г.", LLL: "D MMMM YYYY г., LT", LLLL: "dddd, D MMMM YYYY г., LT" }, calendar: { sameDay: "[Сегодня в] LT", nextDay: "[Завтра в] LT", lastDay: "[Вчера в] LT", nextWeek: function () { return 2 === this.day() ? "[Во] dddd [в] LT" : "[В] dddd [в] LT" }, lastWeek: function () { switch (this.day()) { case 0: return "[В прошлое] dddd [в] LT"; case 1: case 2: case 4: return "[В прошлый] dddd [в] LT"; case 3: case 5: case 6: return "[В прошлую] dddd [в] LT" } }, sameElse: "L" }, relativeTime: { future: "через %s", past: "%s назад", s: "несколько секунд", m: i, mm: i, h: "час", hh: i, d: "день", dd: i, M: "месяц", MM: i, y: "год", yy: i }, meridiemParse: /ночи|утра|дня|вечера/i, isPM: function (n) { return /^(дня|вечера)$/.test(n) }, meridiem: function (n) { return 4 > n ? "ночи" : 12 > n ? "утра" : 17 > n ? "дня" : "вечера" }, ordinal: function (n, t) { switch (t) { case "M": case "d": case "DDD": return n + "-й"; case "D": return n + "-го"; case "w": case "W": return n + "-я"; default: return n } }, week: { dow: 1, doy: 7 } }); n.fullCalendar.datepickerLang("ru", "ru", { closeText: "Закрыть", prevText: "&#x3C;Пред", nextText: "След&#x3E;", currentText: "Сегодня", monthNames: ["Январь", "Февраль", "Март", "Апрель", "Май", "Июнь", "Июль", "Август", "Сентябрь", "Октябрь", "Ноябрь", "Декабрь"], monthNamesShort: ["Янв", "Фев", "Мар", "Апр", "Май", "Июн", "Июл", "Авг", "Сен", "Окт", "Ноя", "Дек"], dayNames: ["воскресенье", "понедельник", "вторник", "среда", "четверг", "пятница", "суббота"], dayNamesShort: ["вск", "пнд", "втр", "срд", "чтв", "птн", "сбт"], dayNamesMin: ["Вс", "Пн", "Вт", "Ср", "Чт", "Пт", "Сб"], weekHeader: "Нед", dateFormat: "dd.mm.yy", firstDay: 1, isRTL: !1, showMonthAfterYear: !1, yearSuffix: "" }); n.fullCalendar.lang("ru", { defaultButtonText: { month: "Месяц", week: "Неделя", day: "День", list: "Повестка дня" }, allDayText: "Весь день", eventLimitText: function (n) { return "+ ещё " + n } }) });
//# sourceMappingURL=ru.min.js.map