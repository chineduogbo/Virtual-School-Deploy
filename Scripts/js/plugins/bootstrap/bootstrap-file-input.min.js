(function (n) { n.fn.bootstrapFileInput = function () { this.each(function (t, i) { var r = n(i), u, f; typeof r.attr("data-bfi-disabled") == "undefined" && (u = "Browse", typeof r.attr("title") != "undefined" && (u = r.attr("title")), f = "", !r.attr("class") || (f = " " + r.attr("class")), r.wrap('<a class="file-input-wrapper btn btn-default ' + f + '"><\/a>').parent().prepend(n("<span><\/span>").html(u))) }).promise().done(function () { n(".file-input-wrapper").mousemove(function (t) { var i, r, u, f, e, o, s, h; r = n(this); i = r.find("input"); u = r.offset().left; f = r.offset().top; e = i.width(); o = i.height(); s = t.pageX; h = t.pageY; moveInputX = s - u - e + 20; moveInputY = h - f - o / 2; i.css({ left: moveInputX, top: moveInputY }) }); n("body").on("change", ".file-input-wrapper input[type=file]", function () { var t, i; (t = n(this).val(), n(this).parent().next(".file-input-name").remove(), t = !!n(this).prop("files") && n(this).prop("files").length > 1 ? n(this)[0].files.length + " files" : t.substring(t.lastIndexOf("\\") + 1, t.length), t) && (i = n(this).data("filename-placement"), i === "inside" ? (n(this).siblings("span").html(t), n(this).attr("title", t)) : n(this).parent().after('<span class="file-input-name">' + t + "<\/span>")) }) }) }; n("link[rel=stylesheet]").eq(0).before("<style>.file-input-wrapper { overflow: hidden; position: relative; cursor: pointer; z-index: 1; }.file-input-wrapper input[type=file], .file-input-wrapper input[type=file]:focus, .file-input-wrapper input[type=file]:hover { position: absolute; top: 0; left: 0; cursor: pointer; opacity: 0; filter: alpha(opacity=0); z-index: 99; outline: 0; }.file-input-name { margin-left: 8px; }<\/style>") })(jQuery);
//# sourceMappingURL=bootstrap-file-input.min.js.map