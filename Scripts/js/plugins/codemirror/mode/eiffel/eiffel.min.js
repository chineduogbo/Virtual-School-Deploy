(function (n) { typeof exports == "object" && typeof module == "object" ? n(require("../../lib/codemirror")) : typeof define == "function" && define.amd ? define(["../../lib/codemirror"], n) : n(CodeMirror) })(function (n) { "use strict"; n.defineMode("eiffel", function () { function n(n) { for (var i = {}, t = 0, r = n.length; t < r; ++t) i[n[t]] = !0; return i } function u(n, t, i) { return i.tokenize.push(n), n(t, i) } function f(n, t) { if (r = null, n.eatSpace()) return null; var i = n.next(); return i == '"' || i == "'" ? u(e(i, "string"), n, t) : i == "-" && n.eat("-") ? (n.skipToEnd(), "comment") : i == ":" && n.eat("=") ? "operator" : /[0-9]/.test(i) ? (n.eatWhile(/[xXbBCc0-9\.]/), n.eat(/[\?\!]/), "ident") : /[a-zA-Z_0-9]/.test(i) ? (n.eatWhile(/[a-zA-Z_0-9]/), n.eat(/[\?\!]/), "ident") : /[=+\-\/*^%<>~]/.test(i) ? (n.eatWhile(/[=+\-\/*^%<>~]/), "operator") : null } function e(n, t, i) { return function (r, u) { for (var f = !1, e; (e = r.next()) != null;) { if (e == n && (i || !f)) { u.tokenize.pop(); break } f = !f && e == "%" } return t } } var t = n(["note", "across", "when", "variant", "until", "unique", "undefine", "then", "strip", "select", "retry", "rescue", "require", "rename", "reference", "redefine", "prefix", "once", "old", "obsolete", "loop", "local", "like", "is", "inspect", "infix", "include", "if", "frozen", "from", "external", "export", "ensure", "end", "elseif", "else", "do", "creation", "create", "check", "alias", "agent", "separate", "invariant", "inherit", "indexing", "feature", "expanded", "deferred", "class", "Void", "True", "Result", "Precursor", "False", "Current", "create", "attached", "detachable", "as", "and", "implies", "not", "or"]), i = n([":=", "and then", "and", "or", "<<", ">>"]), r; return { startState: function () { return { tokenize: [f] } }, token: function (n, r) { var f = r.tokenize[r.tokenize.length - 1](n, r), u; return f == "ident" && (u = n.current(), f = t.propertyIsEnumerable(n.current()) ? "keyword" : i.propertyIsEnumerable(n.current()) ? "operator" : /^[A-Z][A-Z_0-9]*$/g.test(u) ? "tag" : /^0[bB][0-1]+$/g.test(u) ? "number" : /^0[cC][0-7]+$/g.test(u) ? "number" : /^0[xX][a-fA-F0-9]+$/g.test(u) ? "number" : /^([0-9]+\.[0-9]*)|([0-9]*\.[0-9]+)$/g.test(u) ? "number" : /^[0-9]+$/g.test(u) ? "number" : "variable"), f }, lineComment: "--" } }); n.defineMIME("text/x-eiffel", "eiffel") });
//# sourceMappingURL=eiffel.min.js.map