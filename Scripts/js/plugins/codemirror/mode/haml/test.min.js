(function () { function n(n) { test.mode(n, t, Array.prototype.slice.call(arguments, 1)) } var t = CodeMirror.getMode({ tabSize: 4, indentUnit: 2 }, "haml"); n("elementName", "[tag %h1] Hey There"); n("oneElementPerLine", "[tag %h1] Hey There %h2"); n("idSelector", "[tag %h1][attribute #test] Hey There"); n("classSelector", "[tag %h1][attribute .hello] Hey There"); n("docType", "[tag !!! XML]"); n("comment", "[comment / Hello WORLD]"); n("notComment", "[tag %h1] This is not a / comment "); n("attributes", '[tag %a]([variable title][operator =][string "test"]){[atom :title] [operator =>] [string "test"]}'); n("htmlCode", "[tag&bracket <][tag h1][tag&bracket >]Title[tag&bracket <\/][tag h1][tag&bracket >]"); n("rubyBlock", "[operator =][variable-2 @item]"); n("selectorRubyBlock", "[tag %a.selector=] [variable-2 @item]"); n("nestedRubyBlock", "[tag %a]", '   [operator =][variable puts] [string "test"]'); n("multilinePlaintext", "[tag %p]", "  Hello,", "  World"); n("multilineRuby", "[tag %p]", "  [comment -# this is a comment]", "     [comment and this is a comment too]", "  Date/Time", "  [operator -] [variable now] [operator =] [tag DateTime][operator .][property now]", "  [tag %strong=] [variable now]", '  [operator -] [keyword if] [variable now] [operator >] [tag DateTime][operator .][property parse]([string "December 31, 2006"])', '     [operator =][string "Happy"]', '     [operator =][string "Belated"]', '     [operator =][string "Birthday"]'); n("multilineComment", "[comment /]", "  [comment Multiline]", "  [comment Comment]"); n("hamlComment", "[comment -# this is a comment]"); n("multilineHamlComment", "[comment -# this is a comment]", "   [comment and this is a comment too]"); n("multilineHTMLComment", "[comment <!--]", "  [comment what a comment]", "  [comment -->]"); n("hamlAfterRubyTag", "[attribute .block]", "  [tag %strong=] [variable now]", "  [attribute .test]", "     [operator =][variable now]", "  [attribute .right]"); n("stretchedRuby", '[operator =] [variable puts] [string "Hello"],', '   [string "World"]'); n("interpolationInHashAttribute", '[tag %div]{[atom :id] [operator =>] [string "#{][variable test][string }_#{][variable ting][string }"]} test'); n("interpolationInHTMLAttribute", '[tag %div]([variable title][operator =][string "#{][variable test][string }_#{][variable ting]()[string }"]) Test') })();
//# sourceMappingURL=test.min.js.map