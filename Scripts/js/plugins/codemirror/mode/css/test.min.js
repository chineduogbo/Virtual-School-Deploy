(function () { function n(n) { test.mode(n, t, Array.prototype.slice.call(arguments, 1)) } var t = CodeMirror.getMode({ indentUnit: 2 }, "css"); n("atMediaUnknownType", "[def @media] [attribute screen] [keyword and] [error foobarhello] { }"); n("atMediaUnknownProperty", "[def @media] [attribute screen] [keyword and] ([error foobarhello]) { }"); n("atMediaMaxWidthNested", "[def @media] [attribute screen] [keyword and] ([property max-width]: [number 25px]) { [tag foo] { } }"); n("tagSelector", "[tag foo] { }"); n("classSelector", "[qualifier .foo-bar_hello] { }"); n("idSelector", "[builtin #foo] { [error #foo] }"); n("tagSelectorUnclosed", "[tag foo] { [property margin]: [number 0] } [tag bar] { }"); n("tagStringNoQuotes", "[tag foo] { [property font-family]: [variable hello] [variable world]; }"); n("tagStringDouble", '[tag foo] { [property font-family]: [string "hello world"]; }'); n("tagStringSingle", "[tag foo] { [property font-family]: [string 'hello world']; }"); n("tagColorKeyword", "[tag foo] {", "  [property color]: [keyword black];", "  [property color]: [keyword navy];", "  [property color]: [keyword yellow];", "}"); n("tagColorHex3", "[tag foo] { [property background]: [atom #fff]; }"); n("tagColorHex6", "[tag foo] { [property background]: [atom #ffffff]; }"); n("tagColorHex4", "[tag foo] { [property background]: [atom&error #ffff]; }"); n("tagColorHexInvalid", "[tag foo] { [property background]: [atom&error #ffg]; }"); n("tagNegativeNumber", "[tag foo] { [property margin]: [number -5px]; }"); n("tagPositiveNumber", "[tag foo] { [property padding]: [number 5px]; }"); n("tagVendor", "[tag foo] { [meta -foo-][property box-sizing]: [meta -foo-][atom border-box]; }"); n("tagBogusProperty", "[tag foo] { [property&error barhelloworld]: [number 0]; }"); n("tagTwoProperties", "[tag foo] { [property margin]: [number 0]; [property padding]: [number 0]; }"); n("tagTwoPropertiesURL", "[tag foo] { [property background]: [atom url]([string //example.com/foo.png]); [property padding]: [number 0]; }"); n("commentSGML", "[comment <!--comment-->]"); n("commentSGML2", "[comment <!--comment]", "[comment -->] [tag div] {}"); n("indent_tagSelector", "[tag strong], [tag em] {", "  [property background]: [atom rgba](", "    [number 255], [number 255], [number 0], [number .2]", "  );", "}"); n("indent_atMedia", "[def @media] {", "  [tag foo] {", "    [property color]:", "      [keyword yellow];", "  }", "}"); n("indent_comma", "[tag foo] {", "  [property font-family]: [variable verdana],", "    [atom sans-serif];", "}"); n("indent_parentheses", "[tag foo]:[variable-3 before] {", "  [property background]: [atom url](", "[string     blahblah]", "[string     etc]", "[string   ]) [keyword !important];", "}"); n("font_face", "[def @font-face] {", "  [property font-family]: [string 'myfont'];", "  [error nonsense]: [string 'abc'];", "  [property src]: [atom url]([string http://blah]),", "    [atom url]([string http://foo]);", "}"); n("empty_url", "[def @import] [tag url]() [tag screen];"); n("parens", "[qualifier .foo] {", "  [property background-image]: [variable fade]([atom #000], [number 20%]);", "  [property border-image]: [variable linear-gradient](", "    [atom to] [atom bottom],", "    [variable fade]([atom #000], [number 20%]) [number 0%],", "    [variable fade]([atom #000], [number 20%]) [number 100%]", "  );", "}") })();
//# sourceMappingURL=test.min.js.map