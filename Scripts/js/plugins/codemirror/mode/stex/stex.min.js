(function (n) { typeof exports == "object" && typeof module == "object" ? n(require("../../lib/codemirror")) : typeof define == "function" && define.amd ? define(["../../lib/codemirror"], n) : n(CodeMirror) })(function (n) { "use strict"; n.defineMode("stex", function () { function f(n, t) { n.cmdState.push(t) } function e(n) { return n.cmdState.length > 0 ? n.cmdState[n.cmdState.length - 1] : null } function s(n) { var t = n.cmdState.pop(); t && t.closeBracket() } function h(n) { for (var i, r = n.cmdState, t = r.length - 1; t >= 0; t--) if (i = r[t], i.name != "DEFAULT") return i; return { styleIdentifier: function () { return null } } } function r(n, t, i) { return function () { this.name = n; this.bracketNo = 0; this.style = t; this.styles = i; this.argument = null; this.styleIdentifier = function () { return this.styles[this.bracketNo - 1] || null }; this.openBracket = function () { return this.bracketNo++, "bracket" }; this.closeBracket = function () { } } } function n(n, t) { n.f = t } function i(i, r) { var s, a, l; if (i.match(/^\\[a-zA-Z@]+/)) return a = i.current().slice(1), s = t[a] || t.DEFAULT, s = new s, f(r, s), n(r, o), s.style; if (i.match(/^\\[$&%#{}_]/) || i.match(/^\\[,;!\/\\]/)) return "tag"; if (i.match("\\[")) return n(r, function (n, t) { return u(n, t, "\\]") }), "keyword"; if (i.match("$$")) return n(r, function (n, t) { return u(n, t, "$$") }), "keyword"; if (i.match("$")) return n(r, function (n, t) { return u(n, t, "$") }), "keyword"; if (l = i.next(), l == "%") return i.eol() || n(r, c), "comment"; if (l == "}" || l == "]") { if (s = e(r), s) s.closeBracket(l), n(r, o); else return "error"; return "bracket" } return l == "{" || l == "[" ? (s = t.DEFAULT, s = new s, f(r, s), "bracket") : /\d/.test(l) ? (i.eatWhile(/[\w.%]/), "atom") : (i.eatWhile(/[\w\-_]/), s = h(r), s.name == "begin" && (s.argument = i.current()), s.styleIdentifier()) } function c(t, r) { return t.skipToEnd(), n(r, i), "comment" } function u(t, r, u) { if (t.eatSpace()) return null; if (t.match(u)) return n(r, i), "keyword"; if (t.match(/^\\[a-zA-Z@]+/)) return "tag"; if (t.match(/^[a-zA-Z]+/)) return "variable-2"; if (t.match(/^\\[$&%#{}_]/) || t.match(/^\\[,;!\/]/) || t.match(/^[\^_&]/)) return "tag"; if (t.match(/^[+\-<>|=,\/@!*:;'"`~#?]/)) return null; if (t.match(/^(\d+\.\d*|\d*\.\d+|\d+)/)) return "number"; var f = t.next(); return f == "{" || f == "}" || f == "[" || f == "]" || f == "(" || f == ")" ? "bracket" : f == "%" ? (t.eol() || t.skipToEnd(), "comment") : "error" } function o(t, r) { var u = t.peek(), f; return u == "{" || u == "[" ? (f = e(r), f.openBracket(u), t.eat(u), n(r, i), "bracket") : /[ \t\r]/.test(u) ? (t.eat(u), null) : (n(r, i), s(r), i(t, r)) } var t = {}; return t.importmodule = r("importmodule", "tag", ["string", "builtin"]), t.documentclass = r("documentclass", "tag", ["", "atom"]), t.usepackage = r("usepackage", "tag", ["atom"]), t.begin = r("begin", "tag", ["atom"]), t.end = r("end", "tag", ["atom"]), t.DEFAULT = function () { this.name = "DEFAULT"; this.style = "tag"; this.styleIdentifier = this.openBracket = this.closeBracket = function () { } }, { startState: function () { return { cmdState: [], f: i } }, copyState: function (n) { return { cmdState: n.cmdState.slice(), f: n.f } }, token: function (n, t) { return t.f(n, t) } } }); n.defineMIME("text/x-stex", "stex"); n.defineMIME("text/x-latex", "stex") });
//# sourceMappingURL=stex.min.js.map