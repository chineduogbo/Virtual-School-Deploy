(function () { function n(n) { test.mode(n, t, Array.prototype.slice.call(arguments, 1)) } var t = CodeMirror.getMode({ tabSize: 4 }, "stex"); n("word", "foo"); n("twoWords", "foo bar"); n("beginEndDocument", "[tag \\begin][bracket {][atom document][bracket }]", "[tag \\end][bracket {][atom document][bracket }]"); n("beginEndEquation", "[tag \\begin][bracket {][atom equation][bracket }]", "  E=mc^2", "[tag \\end][bracket {][atom equation][bracket }]"); n("beginModule", "[tag \\begin][bracket {][atom module][bracket }[[]]]"); n("beginModuleId", "[tag \\begin][bracket {][atom module][bracket }[[]id=bbt-size[bracket ]]]"); n("importModule", "[tag \\importmodule][bracket [[][string b-b-t][bracket ]]{][builtin b-b-t][bracket }]"); n("importModulePath", "[tag \\importmodule][bracket [[][tag \\KWARCslides][bracket {][string dmath/en/cardinality][bracket }]]{][builtin card][bracket }]"); n("psForPDF", "[tag \\PSforPDF][bracket [[][atom 1][bracket ]]{]#1[bracket }]"); n("comment", "[comment % foo]"); n("tagComment", "[tag \\item][comment % bar]"); n("commentTag", " [comment % \\item]"); n("commentLineBreak", "[comment %]", "foo"); n("tagErrorCurly", "[tag \\begin][error }][bracket {]"); n("tagErrorSquare", "[tag \\item][error ]]][bracket {]"); n("commentCurly", "[comment % }]"); n("tagHash", "the [tag \\#] key"); n("tagNumber", "a [tag \\$][atom 5] stetson"); n("tagPercent", "[atom 100][tag \\%] beef"); n("tagAmpersand", "L [tag \\&] N"); n("tagUnderscore", "foo[tag \\_]bar"); n("tagBracketOpen", "[tag \\emph][bracket {][tag \\{][bracket }]"); n("tagBracketClose", "[tag \\emph][bracket {][tag \\}][bracket }]"); n("tagLetterNumber", "section [tag \\S][atom 1]"); n("textTagNumber", "para [tag \\P][atom 2]"); n("thinspace", "x[tag \\,]y"); n("thickspace", "x[tag \\;]y"); n("negativeThinspace", "x[tag \\!]y"); n("periodNotSentence", "J.\\ L.\\ is"); n("periodSentence", "X[tag \\@]. The"); n("italicCorrection", "[bracket {][tag \\em] If[tag \\/][bracket }] I"); n("tagBracket", "[tag \\newcommand][bracket {][tag \\pop][bracket }]"); n("inlineMathTagFollowedByNumber", "[keyword $][tag \\pi][number 2][keyword $]"); n("inlineMath", "[keyword $][number 3][variable-2 x][tag ^][number 2.45]-[tag \\sqrt][bracket {][tag \\$\\alpha][bracket }] = [number 2][keyword $] other text"); n("displayMath", "More [keyword $$]\t[variable-2 S][tag ^][variable-2 n][tag \\sum] [variable-2 i][keyword $$] other text"); n("mathWithComment", "[keyword $][variable-2 x] [comment % $]", "[variable-2 y][keyword $] other text"); n("lineBreakArgument", "[tag \\\\][bracket [[][atom 1cm][bracket ]]]") })();
//# sourceMappingURL=test.min.js.map