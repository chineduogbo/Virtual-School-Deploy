(function (n) { typeof exports == "object" && typeof module == "object" ? n(require("../../lib/codemirror"), require("../xml/xml"), require("../javascript/javascript"), require("../css/css")) : typeof define == "function" && define.amd ? define(["../../lib/codemirror", "../xml/xml", "../javascript/javascript", "../css/css"], n) : n(CodeMirror) })(function (n) { "use strict"; n.defineMode("htmlmixed", function (t, i) { function f(n, t) { var h = t.htmlState.tagName, o = r.token(n, t.htmlState), i, e, f; if (h == "script" && /\btag\b/.test(o) && n.current() == ">") { for (i = n.string.slice(Math.max(0, n.pos - 100), n.pos).match(/\btype\s*=\s*("[^"]+"|'[^']+'|\S+)[^<]*$/i), i = i ? i[1] : "", i && /[\"\']/.test(i.charAt(0)) && (i = i.slice(1, i.length - 1)), e = 0; e < u.length; ++e) if (f = u[e], typeof f.matches == "string" ? i == f.matches : f.matches.test(i)) { f.mode && (t.token = l, t.localMode = f.mode, t.localState = f.mode.startState && f.mode.startState(r.indent(t.htmlState, ""))); break } } else h == "style" && /\btag\b/.test(o) && n.current() == ">" && (t.token = a, t.localMode = s, t.localState = s.startState(r.indent(t.htmlState, ""))); return o } function c(n, t, i) { var r = n.current(), u = r.search(t), f; return u > -1 ? n.backUp(r.length - u) : (f = r.match(/<\/?$/)) && (n.backUp(r.length), n.match(t, !1) || n.match(r)), i } function l(n, t) { return n.match(/^<\/\s*script\s*>/i, !1) ? (t.token = f, t.localState = t.localMode = null, f(n, t)) : c(n, /<\/\s*script\s*>/, t.localMode.token(n, t.localState)) } function a(n, t) { return n.match(/^<\/\s*style\s*>/i, !1) ? (t.token = f, t.localState = t.localMode = null, f(n, t)) : c(n, /<\/\s*style\s*>/, s.token(n, t.localState)) } var r = n.getMode(t, { name: "xml", htmlMode: !0, multilineTagIndentFactor: i.multilineTagIndentFactor, multilineTagIndentPastTag: i.multilineTagIndentPastTag }), s = n.getMode(t, "css"), u = [], h = i && i.scriptTypes, e, o; if (u.push({ matches: /^(?:text|application)\/(?:x-)?(?:java|ecma)script$|^$/i, mode: n.getMode(t, "javascript") }), h) for (e = 0; e < h.length; ++e) o = h[e], u.push({ matches: o.matches, mode: o.mode && n.getMode(t, o.mode) }); return u.push({ matches: /./, mode: n.getMode(t, "text/plain") }), { startState: function () { var n = r.startState(); return { token: f, localMode: null, localState: null, htmlState: n } }, copyState: function (t) { if (t.localState) var i = n.copyState(t.localMode, t.localState); return { token: t.token, localMode: t.localMode, localState: i, htmlState: n.copyState(r, t.htmlState) } }, token: function (n, t) { return t.token(n, t) }, indent: function (t, i) { return !t.localMode || /^\s*<\//.test(i) ? r.indent(t.htmlState, i) : t.localMode.indent ? t.localMode.indent(t.localState, i) : n.Pass }, innerMode: function (n) { return { state: n.localState || n.htmlState, mode: n.localMode || r } } } }, "xml", "javascript", "css"); n.defineMIME("text/html", "htmlmixed") });
//# sourceMappingURL=htmlmixed.min.js.map