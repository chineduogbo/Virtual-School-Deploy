(function (n) { typeof exports == "object" && typeof module == "object" ? n(require("../../lib/codemirror")) : typeof define == "function" && define.amd ? define(["../../lib/codemirror"], n) : n(CodeMirror) })(function (n) { "use strict"; n.defineMode("z80", function () { var n = /^(exx?|(ld|cp|in)([di]r?)?|pop|push|ad[cd]|cpl|daa|dec|inc|neg|sbc|sub|and|bit|[cs]cf|x?or|res|set|r[lr]c?a?|r[lr]d|s[lr]a|srl|djnz|nop|rst|[de]i|halt|im|ot[di]r|out[di]?)\b/i, t = /^(call|j[pr]|ret[in]?)\b/i, i = /^b_?(call|jump)\b/i, r = /^(af?|bc?|c|de?|e|hl?|l|i[xy]?|r|sp)\b/i, u = /^(n?[zc]|p[oe]?|m)\b/i, f = /^([hl][xy]|i[xy][hl]|slia|sll)\b/i, e = /^([\da-f]+h|[0-7]+o|[01]+b|\d+)\b/i; return { startState: function () { return { context: 0 } }, token: function (o, s) { if (o.column() || (s.context = 0), o.eatSpace()) return null; var h; if (o.eatWhile(/\w/)) if (h = o.current(), o.indentation()) { if (s.context == 1 && r.test(h)) return "variable-2"; if (s.context == 2 && u.test(h)) return "variable-3"; if (n.test(h)) return s.context = 1, "keyword"; if (t.test(h)) return s.context = 2, "keyword"; if (i.test(h)) return s.context = 3, "keyword"; if (f.test(h)) return "error" } else return e.test(h) ? "number" : null; else { if (o.eat(";")) return o.skipToEnd(), "comment"; if (o.eat('"')) { while (h = o.next()) { if (h == '"') break; h == "\\" && o.next() } return "string" } if (o.eat("'")) { if (o.match(/\\?.'/)) return "number" } else if (o.eat(".") || o.sol() && o.eat("#")) { if (s.context = 4, o.eatWhile(/\w/)) return "def" } else if (o.eat("$")) { if (o.eatWhile(/[\da-f]/i)) return "number" } else if (o.eat("%")) { if (o.eatWhile(/[01]/)) return "number" } else o.next() } return null } } }); n.defineMIME("text/x-z80", "z80") });
//# sourceMappingURL=z80.min.js.map