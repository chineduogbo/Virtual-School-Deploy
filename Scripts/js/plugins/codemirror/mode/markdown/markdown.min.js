(function (n) { typeof exports == "object" && typeof module == "object" ? n(require("../../lib/codemirror", require("../xml/xml"))) : typeof define == "function" && define.amd ? define(["../../lib/codemirror", "../xml/xml"], n) : n(CodeMirror) })(function (n) { "use strict"; n.defineMode("markdown", function (t, i) { function p(n, t, i) { return t.f = t.inline = i, i(n, t) } function it(n, t, i) { return t.f = t.block = i, i(n, t) } function rt(n) { return n.linkTitle = !1, n.em = !1, n.strong = !1, n.quote = 0, c || n.f != w || (n.f = u, n.block = f), n.trailingSpace = 0, n.trailingSpaceNewLine = !1, n.thisLineHasContent = !1, null } function f(n, t) { var e = n.sol(), o = t.list !== !1, u, f; return (t.list !== !1 && t.indentationDiff >= 0 ? (t.indentationDiff < 4 && (t.indentation -= t.indentationDiff), t.list = null) : t.list !== !1 && t.indentation > 0 ? (t.list = null, t.listDepth = Math.floor(t.indentation / 4)) : t.list !== !1 && (t.list = !1, t.listDepth = 0), u = null, t.indentationDiff >= 4) ? (t.indentation -= 4, n.skipToEnd(), l) : n.eatSpace() ? null : (u = n.match(bt)) ? (t.header = u[0].length <= 6 ? u[0].length : 6, i.highlightFormatting && (t.formatting = "header"), t.f = t.inline, r(t)) : t.prevLineHasContent && (u = n.match(kt)) ? (t.header = u[0].charAt(0) == "=" ? 1 : 2, i.highlightFormatting && (t.formatting = "header"), t.f = t.inline, r(t)) : n.eat(">") ? (t.indentation++, t.quote = e ? 1 : t.quote + 1, i.highlightFormatting && (t.formatting = "quote"), n.eatSpace(), r(t)) : n.peek() === "[" ? p(n, t, ii) : n.match(wt, !0) ? lt : (!t.prevLineHasContent || o) && (n.match(g, !1) || n.match(nt, !1)) ? (f = null, n.match(g, !0) ? f = "ul" : (n.match(nt, !0), f = "ol"), t.indentation += 4, t.list = !0, t.listDepth++, i.taskLists && n.match(tt, !1) && (t.taskList = !0), t.f = t.inline, i.highlightFormatting && (t.formatting = ["list", "list-" + f]), r(t)) : i.fencedCodeBlocks && n.match(/^```([\w+#]*)/, !0) ? (t.localMode = ot(RegExp.$1), t.localMode && (t.localState = t.localMode.startState()), it(n, t, gt), i.highlightFormatting && (t.formatting = "code-block"), t.code = !0, r(t)) : p(n, t, t.inline) } function w(n, t) { var i = e.token(n, t.htmlState); return (c && t.htmlState.tagStart === null && !t.htmlState.context || t.md_inside && n.current().indexOf(">") > -1) && (t.f = u, t.block = f, t.htmlState = null), i } function gt(n, t) { if (n.sol() && n.match(/^```/, !0)) { t.localMode = t.localState = null; t.f = u; t.block = f; i.highlightFormatting && (t.formatting = "code-block"); t.code = !0; var e = r(t); return t.code = !1, e } return t.localMode ? t.localMode.token(n, t.localState) : (n.skipToEnd(), l) } function r(n) { var t = [], r, u; if (n.formatting) for (t.push(s), typeof n.formatting == "string" && (n.formatting = [n.formatting]), r = 0; r < n.formatting.length; r++) t.push(s + "-" + n.formatting[r]), n.formatting[r] === "header" && t.push(s + "-" + n.formatting[r] + "-" + n.header), n.formatting[r] === "quote" && (!i.maxBlockquoteDepth || i.maxBlockquoteDepth >= n.quote ? t.push(s + "-" + n.formatting[r] + "-" + n.quote) : t.push("error")); return n.taskOpen ? (t.push("meta"), t.length ? t.join(" ") : null) : n.taskClosed ? (t.push("property"), t.length ? t.join(" ") : null) : n.linkHref ? (t.push(y), t.length ? t.join(" ") : null) : (n.strong && t.push(pt), n.em && t.push(yt), n.linkText && t.push(d), n.code && t.push(l), n.header && (t.push(k), t.push(k + "-" + n.header)), n.quote && (t.push(a), !i.maxBlockquoteDepth || i.maxBlockquoteDepth >= n.quote ? t.push(a + "-" + n.quote) : t.push(a + "-" + i.maxBlockquoteDepth)), n.list !== !1 && (u = (n.listDepth - 1) % 3, u ? u === 1 ? t.push(ht) : t.push(ct) : t.push(st)), n.trailingSpaceNewLine ? t.push("trailing-space-new-line") : n.trailingSpace && t.push("trailing-space-" + (n.trailingSpace % 2 ? "a" : "b")), t.length ? t.join(" ") : null) } function ni(n, t) { return n.match(dt, !0) ? r(t) : undefined } function u(t, u) { var k = u.text(t, u), d, g, f, s, nt, rt, et, c, o, ot, l, a, p, h; if (typeof k != "undefined") return k; if (u.list) return u.list = null, r(u); if (u.taskList) return d = t.match(tt, !0)[1] !== "x", d ? u.taskOpen = !0 : u.taskClosed = !0, i.highlightFormatting && (u.formatting = "task"), u.taskList = !1, r(u); if (u.taskOpen = !1, u.taskClosed = !1, u.header && t.match(/^#+$/, !0)) return i.highlightFormatting && (u.formatting = "header"), r(u); if (g = t.sol(), f = t.next(), u.escape) return u.escape = !1, r(u); if (f === "\\") return i.highlightFormatting && (u.formatting = "escape"), u.escape = !0, r(u); if (u.linkTitle && (u.linkTitle = !1, s = f, f === "(" && (s = ")"), s = (s + "").replace(/([.?*+^$[\]\\(){}|-])/g, "\\$1"), nt = "^\\s*(?:[^" + s + "\\\\]+|\\\\\\\\|\\\\.)" + s, t.match(new RegExp(nt), !0))) return y; if (f === "`") return rt = u.formatting, i.highlightFormatting && (u.formatting = "code"), h = r(u), et = t.pos, t.eatWhile("`"), c = 1 + t.pos - et, u.code ? c === b ? (u.code = !1, h) : (u.formatting = rt, r(u)) : (b = c, u.code = !0, r(u)); if (u.code) return r(u); if (f === "!" && t.match(/\[[^\]]*\] ?(?:\(|\[)/, !1)) return t.match(/\[[^\]]*\]/), u.inline = u.f = ft, at; if (f === "[" && t.match(/.*\](\(| ?\[)/, !1)) return u.linkText = !0, i.highlightFormatting && (u.formatting = "link"), r(u); if (f === "]" && u.linkText) return i.highlightFormatting && (u.formatting = "link"), o = r(u), u.linkText = !1, u.inline = u.f = ft, o; if (f === "<" && t.match(/^(https?|ftps?):\/\/(?:[^\\>]|\\.)+>/, !1)) return u.f = u.inline = ut, i.highlightFormatting && (u.formatting = "link"), o = r(u), o ? o += " " : o = "", o + v; if (f === "<" && t.match(/^[^> \\]+@(?:[^\\>]|\\.)+>/, !1)) return u.f = u.inline = ut, i.highlightFormatting && (u.formatting = "link"), o = r(u), o ? o += " " : o = "", o + vt; if (f === "<" && t.match(/^\w/, !1)) return t.string.indexOf(">") != -1 && (ot = t.string.substring(1, t.string.indexOf(">")), /markdown\s*=\s*('|"){0,1}1('|"){0,1}/.test(ot) && (u.md_inside = !0)), t.backUp(1), u.htmlState = n.startState(e), it(t, u, w); if (f === "<" && t.match(/^\/\w*?>/)) return u.md_inside = !1, "tag"; if (l = !1, i.underscoresBreakWords || f === "_" && t.peek() !== "_" && t.match(/(\w)/, !1) && (a = t.pos - 2, a >= 0 && (p = t.string.charAt(a), p !== "_" && p.match(/(\w)/, !1) && (l = !0))), f !== "*" && (f !== "_" || l)) { if (f === " " && (t.eat("*") || t.eat("_"))) { if (t.peek() === " ") return r(u); t.backUp(1) } } else if (!g || t.peek() !== " ") { if (u.strong === f && t.eat(f)) return i.highlightFormatting && (u.formatting = "strong"), h = r(u), u.strong = !1, h; if (!u.strong && t.eat(f)) return u.strong = f, i.highlightFormatting && (u.formatting = "strong"), r(u); if (u.em === f) return i.highlightFormatting && (u.formatting = "em"), h = r(u), u.em = !1, h; if (!u.em) return u.em = f, i.highlightFormatting && (u.formatting = "em"), r(u) } return f === " " && (t.match(/ +$/, !1) ? u.trailingSpace++ : u.trailingSpace && (u.trailingSpaceNewLine = !0)), r(u) } function ut(n, t) { var e = n.next(), f; return e === ">" ? (t.f = t.inline = u, i.highlightFormatting && (t.formatting = "link"), f = r(t), f ? f += " " : f = "", f + v) : (n.match(/^[^>]+/, !0), v) } function ft(n, t) { if (n.eatSpace()) return null; var u = n.next(); return u === "(" || u === "[" ? (t.f = t.inline = ti(u === "(" ? ")" : "]"), i.highlightFormatting && (t.formatting = "link-string"), t.linkHref = !0, r(t)) : "error" } function ti(n) { return function (t, f) { var o = t.next(), e; return o === n ? (f.f = f.inline = u, i.highlightFormatting && (f.formatting = "link-string"), e = r(f), f.linkHref = !1, e) : (t.match(fi(n), !0) && t.backUp(1), f.linkHref = !0, r(f)) } } function ii(n, t) { return n.match(/^[^\]]*\]:/, !1) ? (t.f = ri, n.next(), i.highlightFormatting && (t.formatting = "link"), t.linkText = !0, r(t)) : p(n, t, u) } function ri(n, t) { if (n.match(/^\]:/, !0)) { t.f = t.inline = ui; i.highlightFormatting && (t.formatting = "link"); var u = r(t); return t.linkText = !1, u } return n.match(/^[^\]]+/, !0), d } function ui(n, t) { return n.eatSpace() ? null : (n.match(/^[^\s]+/, !0), n.peek() === undefined ? t.linkTitle = !0 : n.match(/^(?:\s+(?:"(?:[^"\\]|\\\\|\\.)+"|'(?:[^'\\]|\\\\|\\.)+'|\((?:[^)\\]|\\\\|\\.)+\)))?/, !0), t.f = t.inline = u, y) } function fi(n) { return h[n] || (n = (n + "").replace(/([.?*+^$[\]\\(){}|-])/g, "\\$1"), h[n] = new RegExp("^(?:[^\\\\]|\\\\.)*?(" + n + ")")), h[n] } var c = n.modes.hasOwnProperty("xml"), e = n.getMode(t, c ? { name: "xml", htmlMode: !0 } : "text/plain"), o = { html: "htmlmixed", js: "javascript", json: "application/json", c: "text/x-csrc", "c++": "text/x-c++src", java: "text/x-java", csharp: "text/x-csharp", "c#": "text/x-csharp", scala: "text/x-scala" }, ot = function () { var i, u = {}, h = {}, c, s = [], f, r, e; for (r in n.modes) n.modes.propertyIsEnumerable(r) && s.push(r); for (i = 0; i < s.length; i++) u[s[i]] = s[i]; f = []; for (r in n.mimeModes) n.mimeModes.propertyIsEnumerable(r) && f.push({ mime: r, mode: n.mimeModes[r] }); for (i = 0; i < f.length; i++) c = f[i].mime, h[c] = f[i].mime; for (e in o) (o[e] in u || o[e] in h) && (u[e] = o[e]); return function (i) { return u[i] ? n.getMode(t, u[i]) : null } }(), h, et; i.highlightFormatting === undefined && (i.highlightFormatting = !1); i.maxBlockquoteDepth === undefined && (i.maxBlockquoteDepth = 0); i.underscoresBreakWords === undefined && (i.underscoresBreakWords = !0); i.fencedCodeBlocks === undefined && (i.fencedCodeBlocks = !1); i.taskLists === undefined && (i.taskLists = !1); var b = 0, k = "header", l = "comment", a = "quote", st = "variable-2", ht = "variable-3", ct = "keyword", lt = "hr", at = "tag", s = "formatting", v = "link", vt = "link", d = "link", y = "string", yt = "em", pt = "strong", wt = /^([*\-=_])(?:\s*\1){2,}\s*$/, g = /^[*\-+]\s+/, nt = /^[0-9]+\.\s+/, tt = /^\[(x| )\](?=\s)/, bt = /^#+/, kt = /^(?:\={1,}|-{1,})$/, dt = /^[^#!\[\]*_\\<>` "'(]+/; return h = [], et = { startState: function () { return { f: f, prevLineHasContent: !1, thisLineHasContent: !1, block: f, htmlState: null, indentation: 0, inline: u, text: ni, escape: !1, formatting: !1, linkText: !1, linkHref: !1, linkTitle: !1, em: !1, strong: !1, header: 0, taskList: !1, list: !1, listDepth: 0, quote: 0, trailingSpace: 0, trailingSpaceNewLine: !1 } }, copyState: function (t) { return { f: t.f, prevLineHasContent: t.prevLineHasContent, thisLineHasContent: t.thisLineHasContent, block: t.block, htmlState: t.htmlState && n.copyState(e, t.htmlState), indentation: t.indentation, localMode: t.localMode, localState: t.localMode ? n.copyState(t.localMode, t.localState) : null, inline: t.inline, text: t.text, escape: !1, formatting: !1, linkTitle: t.linkTitle, em: t.em, strong: t.strong, header: t.header, taskList: t.taskList, list: t.list, listDepth: t.listDepth, quote: t.quote, trailingSpace: t.trailingSpace, trailingSpaceNewLine: t.trailingSpaceNewLine, md_inside: t.md_inside } }, token: function (n, t) { var f, r, i, u, e; if (t.formatting = !1, n.sol()) { if (f = n.match(/^\s*$/, !0) || t.header, t.header = 0, f) return t.prevLineHasContent = !1, rt(t); if (t.prevLineHasContent = t.thisLineHasContent, t.thisLineHasContent = !0, t.escape = !1, t.taskList = !1, t.code = !1, t.trailingSpace = 0, t.trailingSpaceNewLine = !1, t.f = t.block, r = n.match(/^\s*/, !0)[0].replace(/\t/g, "    ").length, i = Math.floor((r - t.indentation) / 4) * 4, i > 4 && (i = 4), u = t.indentation + i, t.indentationDiff = u - t.indentation, t.indentation = u, r > 0) return null } return e = t.f(n, t), n.start == n.pos ? this.token(n, t) : e }, innerMode: function (n) { return n.block == w ? { state: n.htmlState, mode: e } : n.localState ? { state: n.localState, mode: n.localMode } : { state: n, mode: et } }, blankLine: rt, getType: r, fold: "markdown" } }, "xml"); n.defineMIME("text/x-markdown", "markdown") });
//# sourceMappingURL=markdown.min.js.map