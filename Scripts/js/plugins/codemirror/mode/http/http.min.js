(function (n) { typeof exports == "object" && typeof module == "object" ? n(require("../../lib/codemirror")) : typeof define == "function" && define.amd ? define(["../../lib/codemirror"], n) : n(CodeMirror) })(function (n) { "use strict"; n.defineMode("http", function () { function t(t, i) { return t.skipToEnd(), i.cur = n, "error" } function r(n, i) { return n.match(/^HTTP\/\d\.\d/) ? (i.cur = u, "keyword") : n.match(/^[A-Z]+/) && /[ \t]/.test(n.peek()) ? (i.cur = e, "keyword") : t(n, i) } function u(n, i) { var u = n.match(/^\d+/), r; return u ? (i.cur = f, r = Number(u[0]), r >= 100 && r < 200 ? "positive informational" : r >= 200 && r < 300 ? "positive success" : r >= 300 && r < 400 ? "positive redirect" : r >= 400 && r < 500 ? "negative client-error" : r >= 500 && r < 600 ? "negative server-error" : "error") : t(n, i) } function f(t, i) { return t.skipToEnd(), i.cur = n, null } function e(n, t) { return n.eatWhile(/\S/), t.cur = o, "string-2" } function o(i, r) { return i.match(/^HTTP\/\d\.\d$/) ? (r.cur = n, "keyword") : t(i, r) } function n(n) { return n.sol() && !n.eat(/[ \t]/) ? n.match(/^.*?:/) ? "atom" : (n.skipToEnd(), "error") : (n.skipToEnd(), "string") } function i(n) { return n.skipToEnd(), null } return { token: function (t, r) { var u = r.cur; return u != n && u != i && t.eatSpace() ? null : u(t, r) }, blankLine: function (n) { n.cur = i }, startState: function () { return { cur: r } } } }); n.defineMIME("message/http", "http") });
//# sourceMappingURL=http.min.js.map