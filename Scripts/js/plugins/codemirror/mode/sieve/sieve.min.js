(function (n) { typeof exports == "object" && typeof module == "object" ? n(require("../../lib/codemirror")) : typeof define == "function" && define.amd ? define(["../../lib/codemirror"], n) : n(CodeMirror) })(function (n) { "use strict"; n.defineMode("sieve", function (n) { function i(n) { for (var i = {}, r = n.split(" "), t = 0; t < r.length; ++t) i[r[t]] = !0; return i } function t(n, t) { var i = n.next(), e; return i == "/" && n.eat("*") ? (t.tokenize = r, r(n, t)) : i === "#" ? (n.skipToEnd(), "comment") : i == '"' ? (t.tokenize = s(i), t.tokenize(n, t)) : i == "(" ? (t._indent.push("("), t._indent.push("{"), null) : i === "{" ? (t._indent.push("{"), null) : (i == ")" && (t._indent.pop(), t._indent.pop()), i === "}") ? (t._indent.pop(), null) : i == "," ? null : i == ";" ? null : /[{}\(\),;]/.test(i) ? null : /\d/.test(i) ? (n.eatWhile(/[\d]/), n.eat(/[KkMmGg]/), "number") : i == ":" ? (n.eatWhile(/[a-zA-Z_]/), n.eatWhile(/[a-zA-Z0-9_]/), "operator") : (n.eatWhile(/\w/), e = n.current(), e == "text" && n.eat(":")) ? (t.tokenize = o, "string") : u.propertyIsEnumerable(e) ? "keyword" : f.propertyIsEnumerable(e) ? "atom" : null } function o(n, i) { return (i._multiLineString = !0, !n.sol()) ? (n.eatSpace(), n.peek() == "#") ? (n.skipToEnd(), "comment") : (n.skipToEnd(), "string") : (n.next() == "." && n.eol() && (i._multiLineString = !1, i.tokenize = t), "string") } function r(n, i) { for (var u = !1, r; (r = n.next()) != null;) { if (u && r == "/") { i.tokenize = t; break } u = r == "*" } return "comment" } function s(n) { return function (i, r) { for (var u = !1, f; (f = i.next()) != null;) { if (f == n && !u) break; u = !u && f == "\\" } return u || (r.tokenize = t), "string" } } var u = i("if elsif else stop require"), f = i("true false not"), e = n.indentUnit; return { startState: function (n) { return { tokenize: t, baseIndent: n || 0, _indent: [] } }, token: function (n, i) { return n.eatSpace() ? null : (i.tokenize || t)(n, i) }, indent: function (n, t) { var i = n._indent.length; return t && t[0] == "}" && i--, i < 0 && (i = 0), i * e }, electricChars: "}" } }); n.defineMIME("application/sieve", "sieve") });
//# sourceMappingURL=sieve.min.js.map