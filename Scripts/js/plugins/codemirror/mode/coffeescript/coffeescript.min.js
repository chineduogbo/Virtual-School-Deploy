(function (n) { typeof exports == "object" && typeof module == "object" ? n(require("../../lib/codemirror")) : typeof define == "function" && define.amd ? define(["../../lib/codemirror"], n) : n(CodeMirror) })(function (n) { "use strict"; n.defineMode("coffeescript", function (n) { function r(n) { return new RegExp("^((" + n.join(")|(") + "))\\b") } function t(n, t) { var f, k, d, r, u; if (n.sol()) { if (t.scope.align === null && (t.scope.align = !1), f = t.scope.offset, n.eatSpace()) return (k = n.indentation(), k > f && t.scope.type == "coffee") ? "indent" : k < f ? "dedent" : null; f > 0 && e(n, t) } if (n.eatSpace()) return null; if (d = n.peek(), n.match("####")) return n.skipToEnd(), "comment"; if (n.match("###")) return t.tokenize = b, t.tokenize(n, t); if (d === "#") return n.skipToEnd(), "comment"; if (n.match(/^-?[0-9\.]/, !1)) { if (r = !1, n.match(/^-?\d*\.\d+(e[\+\-]?\d+)?/i) && (r = !0), n.match(/^-?\d+\.\d*/) && (r = !0), n.match(/^-?\.\d+/) && (r = !0), r) return n.peek() == "." && n.backUp(1), "number"; if (u = !1, n.match(/^-?0x[0-9a-f]+/i) && (u = !0), n.match(/^-?[1-9]\d*(e[\+\-]?\d+)?/) && (u = !0), n.match(/^-?0(?![\dx])/i) && (u = !0), u) return "number" } if (n.match(y)) return t.tokenize = o(n.current(), !1, "string"), t.tokenize(n, t); if (n.match(p)) { if (n.current() != "/" || n.match(/^.*\//, !1)) return t.tokenize = o(n.current(), !0, "string-2"), t.tokenize(n, t); n.backUp(1) } return n.match(s) || n.match(a) ? "operator" : n.match(h) ? "punctuation" : n.match(w) ? "atom" : n.match(v) ? "keyword" : n.match(c) ? "variable" : n.match(l) ? "property" : (n.next(), i) } function o(r, u, f) { return function (e, o) { while (!e.eol()) if (e.eatWhile(/[^'"\/\\]/), e.eat("\\")) { if (e.next(), u && e.eol()) return f } else { if (e.match(r)) return o.tokenize = t, f; e.eat(/['"\/]/) } return u && (n.mode.singleLineStringErrors ? f = i : o.tokenize = t), f } } function b(n, i) { while (!n.eol()) { if (n.eatWhile(/[^#]/), n.match("###")) { i.tokenize = t; break } n.eatWhile("#") } return "comment" } function f(t, i, r) { var u; r = r || "coffee"; var f = 0, e = !1, o = null; for (u = i.scope; u; u = u.prev) if (u.type === "coffee") { f = u.offset + n.indentUnit; break } r !== "coffee" ? (e = null, o = t.column() + t.current().length) : i.scope.align && (i.scope.align = !1); i.scope = { offset: f, type: r, prev: i.scope, align: e, alignOffset: o } } function e(n, t) { var r, u, i; if (t.scope.prev) { if (t.scope.type === "coffee") { for (r = n.indentation(), u = !1, i = t.scope; i; i = i.prev) if (r === i.offset) { u = !0; break } if (!u) return !0; while (t.scope.prev && t.scope.offset !== r) t.scope = t.scope.prev; return !1 } return t.scope = t.scope.prev, !1 } } function k(n, t) { var s = t.tokenize(n, t), r = n.current(), o; if (r === ".") return s = t.tokenize(n, t), r = n.current(), /^\.[\w$]+$/.test(r) ? "variable" : i; if (r === "return" && (t.dedent += 1), (r !== "->" && r !== "=>" || t.lambda || n.peek()) && s !== "indent" || f(n, t), o = "[({".indexOf(r), o !== -1 && f(n, t, "])}".slice(o, o + 1)), u.exec(r) && f(n, t), r == "then" && e(n, t), s === "dedent" && e(n, t)) return i; if (o = "])}".indexOf(r), o !== -1) { while (t.scope.type == "coffee" && t.scope.prev) t.scope = t.scope.prev; t.scope.type == r && (t.scope = t.scope.prev) } return t.dedent > 0 && n.eol() && t.scope.type == "coffee" && (t.scope.prev && (t.scope = t.scope.prev), t.dedent -= 1), s } var i = "error", s = /^(?:->|=>|\+[+=]?|-[\-=]?|\*[\*=]?|\/[\/=]?|[=!]=|<[><]?=?|>>?=?|%=?|&=?|\|=?|\^=?|\~|!|\?)/, h = /^(?:[()\[\]{},:`=;]|\.\.?\.?)/, c = /^[_A-Za-z$][_A-Za-z$0-9]*/, l = /^(@|this\.)[_A-Za-z$][_A-Za-z$0-9]*/, a = r(["and", "or", "not", "is", "isnt", "in", "instanceof", "typeof"]), u = ["for", "while", "loop", "if", "unless", "else", "switch", "try", "catch", "finally", "class"], v = r(u.concat(["break", "by", "continue", "debugger", "delete", "do", "in", "of", "new", "return", "then", "this", "throw", "when", "until"])); u = r(u); var y = /^('{3}|\"{3}|['\"])/, p = /^(\/{3}|\/)/, w = r(["Infinity", "NaN", "undefined", "null", "true", "false", "on", "off", "yes", "no"]); return { startState: function (n) { return { tokenize: t, scope: { offset: n || 0, type: "coffee", prev: null, align: !1 }, lastToken: null, lambda: !1, dedent: 0 } }, token: function (n, t) { var r = t.scope.align === null && t.scope, i; return r && n.sol() && (r.align = !1), i = k(n, t), r && i && i != "comment" && (r.align = !0), t.lastToken = { style: i, content: n.current() }, n.eol() && n.lambda && (t.lambda = !1), i }, indent: function (n, i) { var r, u, f; if (n.tokenize != t) return 0; if (r = n.scope, u = i && "])}".indexOf(i.charAt(0)) > -1, u) while (r.type == "coffee" && r.prev) r = r.prev; return f = u && r.type === i.charAt(0), r.align ? r.alignOffset - (f ? 1 : 0) : (f ? r.prev : r).offset }, lineComment: "#", fold: "indent" } }); n.defineMIME("text/x-coffeescript", "coffeescript") });
//# sourceMappingURL=coffeescript.min.js.map