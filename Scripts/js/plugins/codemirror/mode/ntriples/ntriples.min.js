(function (n) { typeof exports == "object" && typeof module == "object" ? n(require("../../lib/codemirror")) : typeof define == "function" && define.amd ? define(["../../lib/codemirror"], n) : n(CodeMirror) })(function (n) { "use strict"; n.defineMode("ntriples", function () { function t(t, i) { var r = t.location, u; u = r == n.PRE_SUBJECT && i == "<" ? n.WRITING_SUB_URI : r == n.PRE_SUBJECT && i == "_" ? n.WRITING_BNODE_URI : r == n.PRE_PRED && i == "<" ? n.WRITING_PRED_URI : r == n.PRE_OBJ && i == "<" ? n.WRITING_OBJ_URI : r == n.PRE_OBJ && i == "_" ? n.WRITING_OBJ_BNODE : r == n.PRE_OBJ && i == '"' ? n.WRITING_OBJ_LITERAL : r == n.WRITING_SUB_URI && i == ">" ? n.PRE_PRED : r == n.WRITING_BNODE_URI && i == " " ? n.PRE_PRED : r == n.WRITING_PRED_URI && i == ">" ? n.PRE_OBJ : r == n.WRITING_OBJ_URI && i == ">" ? n.POST_OBJ : r == n.WRITING_OBJ_BNODE && i == " " ? n.POST_OBJ : r == n.WRITING_OBJ_LITERAL && i == '"' ? n.POST_OBJ : r == n.WRITING_LIT_LANG && i == " " ? n.POST_OBJ : r == n.WRITING_LIT_TYPE && i == ">" ? n.POST_OBJ : r == n.WRITING_OBJ_LITERAL && i == "@" ? n.WRITING_LIT_LANG : r == n.WRITING_OBJ_LITERAL && i == "^" ? n.WRITING_LIT_TYPE : i == " " && (r == n.PRE_SUBJECT || r == n.PRE_PRED || r == n.PRE_OBJ || r == n.POST_OBJ) ? r : r == n.POST_OBJ && i == "." ? n.PRE_SUBJECT : n.ERROR; t.location = u } var n = { PRE_SUBJECT: 0, WRITING_SUB_URI: 1, WRITING_BNODE_URI: 2, PRE_PRED: 3, WRITING_PRED_URI: 4, PRE_OBJ: 5, WRITING_OBJ_URI: 6, WRITING_OBJ_BNODE: 7, WRITING_OBJ_LITERAL: 8, WRITING_LIT_LANG: 9, WRITING_LIT_TYPE: 10, POST_OBJ: 11, ERROR: 12 }; return { startState: function () { return { location: n.PRE_SUBJECT, uris: [], anchors: [], bnodes: [], langs: [], types: [] } }, token: function (n, i) { var r = n.next(), u, f, e, o, s; if (r == "<") return (t(i, r), u = "", n.eatWhile(function (n) { return n != "#" && n != ">" ? (u += n, !0) : !1 }), i.uris.push(u), n.match("#", !1)) ? "variable" : (n.next(), t(i, ">"), "variable"); if (r == "#") return f = "", n.eatWhile(function (n) { return n != ">" && n != " " ? (f += n, !0) : !1 }), i.anchors.push(f), "variable-2"; if (r == ">") return t(i, ">"), "variable"; if (r == "_") return t(i, r), e = "", n.eatWhile(function (n) { return n != " " ? (e += n, !0) : !1 }), i.bnodes.push(e), n.next(), t(i, " "), "builtin"; if (r == '"') return t(i, r), n.eatWhile(function (n) { return n != '"' }), n.next(), n.peek() != "@" && n.peek() != "^" && t(i, '"'), "string"; if (r == "@") return t(i, "@"), o = "", n.eatWhile(function (n) { return n != " " ? (o += n, !0) : !1 }), i.langs.push(o), n.next(), t(i, " "), "string-2"; if (r == "^") return n.next(), t(i, "^"), s = "", n.eatWhile(function (n) { return n != ">" ? (s += n, !0) : !1 }), i.types.push(s), n.next(), t(i, ">"), "variable"; r == " " && t(i, r); r == "." && t(i, r) } } }); n.defineMIME("text/n-triples", "ntriples") });
//# sourceMappingURL=ntriples.min.js.map