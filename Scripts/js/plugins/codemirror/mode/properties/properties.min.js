(function (n) { typeof exports == "object" && typeof module == "object" ? n(require("../../lib/codemirror")) : typeof define == "function" && define.amd ? define(["../../lib/codemirror"], n) : n(CodeMirror) })(function (n) { "use strict"; n.defineMode("properties", function () { return { token: function (n, t) { var r = n.sol() || t.afterSection, u = n.eol(), i; if (t.afterSection = !1, r && (t.nextMultiline ? (t.inMultiline = !0, t.nextMultiline = !1) : t.position = "def"), u && !t.nextMultiline && (t.inMultiline = !1, t.position = "def"), r) while (n.eatSpace()); return (i = n.next(), r && (i === "#" || i === "!" || i === ";")) ? (t.position = "comment", n.skipToEnd(), "comment") : r && i === "[" ? (t.afterSection = !0, n.skipTo("]"), n.eat("]"), "header") : i === "=" || i === ":" ? (t.position = "quote", null) : (i === "\\" && t.position === "quote" && n.next() !== "u" && (t.nextMultiline = !0), t.position) }, startState: function () { return { position: "def", nextMultiline: !1, inMultiline: !1, afterSection: !1 } } } }); n.defineMIME("text/x-properties", "properties"); n.defineMIME("text/x-ini", "properties") });
//# sourceMappingURL=properties.min.js.map