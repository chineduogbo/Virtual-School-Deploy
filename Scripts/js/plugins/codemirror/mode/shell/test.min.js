(function () { function n(n) { test.mode(n, t, Array.prototype.slice.call(arguments, 1)) } var t = CodeMirror.getMode({}, "shell"); n("var", "text [def $var] text"); n("varBraces", "text[def ${var}]text"); n("varVar", "text [def $a$b] text"); n("varBracesVarBraces", "text[def ${a}${b}]text"); n("singleQuotedVar", "[string 'text $var text']"); n("singleQuotedVarBraces", "[string 'text ${var} text']"); n("doubleQuotedVar", '[string "text ][def $var][string  text"]'); n("doubleQuotedVarBraces", '[string "text][def ${var}][string text"]'); n("doubleQuotedVarPunct", '[string "text ][def $@][string  text"]'); n("doubleQuotedVarVar", '[string "][def $a$b][string "]'); n("doubleQuotedVarBracesVarBraces", '[string "][def ${a}${b}][string "]'); n("notAString", "text\\'text"); n("escapes", 'outside\\\'\\"\\`\\\\[string "inside\\`\\\'\\"\\\\`\\$notAVar"]outside\\$\\(notASubShell\\)'); n("subshell", "[builtin echo] [quote $(whoami)] s log, stardate [quote `date`]."); n("doubleQuotedSubshell", '[builtin echo] [string "][quote $(whoami)][string \'s log, stardate `date`."]'); n("hashbang", "[meta #!/bin/bash]"); n("comment", "text [comment # Blurb]"); n("numbers", "[number 0] [number 1] [number 2]"); n("keywords", "[keyword while] [atom true]; [keyword do]", "  [builtin sleep] [number 3]", "[keyword done]"); n("options", "[builtin ls] [attribute -l] [attribute --human-readable]"); n("operator", "[def var][operator =]value") })();
//# sourceMappingURL=test.min.js.map