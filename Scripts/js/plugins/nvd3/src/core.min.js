function daysInMonth(n, t) { return new Date(t, n + 1, 0).getDate() } function d3_time_range(n, t, i) { return function (r, u, f) { var e = n(r), o = [], s; if (e < r && t(e), f > 1) while (e < u) s = new Date(+e), i(s) % f == 0 && o.push(s), t(e); else while (e < u) o.push(new Date(+e)), t(e); return o } } var nv = window.nv || {}; if (nv.version = "1.1.15b", nv.dev = !0, window.nv = nv, nv.tooltip = nv.tooltip || {}, nv.utils = nv.utils || {}, nv.models = nv.models || {}, nv.charts = {}, nv.graphs = [], nv.logs = {}, nv.dispatch = d3.dispatch("render_start", "render_end"), nv.dev) { nv.dispatch.on("render_start", function () { nv.logs.startTime = +new Date }); nv.dispatch.on("render_end", function () { nv.logs.endTime = +new Date; nv.logs.totalTime = nv.logs.endTime - nv.logs.startTime; nv.log("total", nv.logs.totalTime) }) } nv.log = function () { if (nv.dev && console.log && console.log.apply) console.log.apply(console, arguments); else if (nv.dev && typeof console.log == "function" && Function.prototype.bind) { var n = Function.prototype.bind.call(console.log, console); n.apply(console, arguments) } return arguments[arguments.length - 1] }; nv.render = function (n) { n = n || 1; nv.render.active = !0; nv.dispatch.render_start(); setTimeout(function () { for (var r, t, i = 0; i < n && (t = nv.render.queue[i]) ; i++) r = t.generate(), typeof t.callback == typeof Function && t.callback(r), nv.graphs.push(r); nv.render.queue.splice(0, i); nv.render.queue.length ? setTimeout(arguments.callee, 0) : (nv.dispatch.render_end(), nv.render.active = !1) }, 0) }; nv.render.active = !1; nv.render.queue = []; nv.addGraph = function (n) { typeof arguments[0] == typeof Function && (n = { generate: arguments[0], callback: arguments[1] }); nv.render.queue.push(n); nv.render.active || nv.render() }; nv.identity = function (n) { return n }; nv.strip = function (n) { return n.replace(/(\s|&)/g, "") }; d3.time.monthEnd = function (n) { return new Date(n.getFullYear(), n.getMonth(), 0) }; d3.time.monthEnds = d3_time_range(d3.time.monthEnd, function (n) { n.setUTCDate(n.getUTCDate() + 1); n.setDate(daysInMonth(n.getMonth() + 1, n.getFullYear())) }, function (n) { return n.getMonth() });
//# sourceMappingURL=core.min.js.map