nv.models.distribution = function () { "use strict"; function n(h) { return h.each(function (n) { var w = e - (i === "x" ? t.left + t.right : t.top + t.bottom), a = i == "x" ? "y" : "x", v = d3.select(this), h, c; f = f || u; var l = v.selectAll("g.nv-distribution").data([n]), y = l.enter().append("g").attr("class", "nvd3 nv-distribution"), b = y.append("g"), p = l.select("g"); l.attr("transform", "translate(" + t.left + "," + t.top + ")"); h = p.selectAll("g.nv-dist").data(function (n) { return n }, function (n) { return n.key }); h.enter().append("g"); h.attr("class", function (n, t) { return "nv-dist nv-series-" + t }).style("stroke", function (n, t) { return s(n, t) }); c = h.selectAll("line.nv-dist" + i).data(function (n) { return n.values }); c.enter().append("line").attr(i + "1", function (n, t) { return f(r(n, t)) }).attr(i + "2", function (n, t) { return f(r(n, t)) }); h.exit().selectAll("line.nv-dist" + i).transition().attr(i + "1", function (n, t) { return u(r(n, t)) }).attr(i + "2", function (n, t) { return u(r(n, t)) }).style("stroke-opacity", 0).remove(); c.attr("class", function (n, t) { return "nv-dist" + i + " nv-dist" + i + "-" + t }).attr(a + "1", 0).attr(a + "2", o); c.transition().attr(i + "1", function (n, t) { return u(r(n, t)) }).attr(i + "2", function (n, t) { return u(r(n, t)) }); f = u.copy() }), n } var t = { top: 0, right: 0, bottom: 0, left: 0 }, e = 400, o = 8, i = "x", r = function (n) { return n[i] }, s = nv.utils.defaultColor(), u = d3.scale.linear(), f; return n.options = nv.utils.optionsFunc.bind(n), n.margin = function (i) { return arguments.length ? (t.top = typeof i.top != "undefined" ? i.top : t.top, t.right = typeof i.right != "undefined" ? i.right : t.right, t.bottom = typeof i.bottom != "undefined" ? i.bottom : t.bottom, t.left = typeof i.left != "undefined" ? i.left : t.left, n) : t }, n.width = function (t) { return arguments.length ? (e = t, n) : e }, n.axis = function (t) { return arguments.length ? (i = t, n) : i }, n.size = function (t) { return arguments.length ? (o = t, n) : o }, n.getData = function (t) { return arguments.length ? (r = d3.functor(t), n) : r }, n.scale = function (t) { return arguments.length ? (u = t, n) : u }, n.color = function (t) { return arguments.length ? (s = nv.utils.getColor(t), n) : s }, n };
//# sourceMappingURL=distribution.min.js.map