nv.models.cumulativeLineChart = function () { "use strict"; function n(ft) { return ft.each(function (ft) { function ci() { d3.select(n.container).style("cursor", "ew-resize") } function li() { u.x = d3.event.x; u.i = Math.round(a.invert(u.x)); fi() } function ai() { d3.select(n.container).style("cursor", "auto"); r.index = u.i; f.stateChange(r) } function fi() { dt.data([u]); var t = n.transitionDuration(); n.transitionDuration(0); n.update(); n.transitionDuration(t) } var wt = d3.select(this).classed("nv-chart-" + ct, !0), ei = this, ht = (nt || parseInt(wt.style("width")) || 960) - t.left - t.right, vt = (k || parseInt(wt.style("height")) || 400) - t.top - t.bottom, kt, oi, ni, ti, si, hi, ii, ri, dt; if (n.update = function () { wt.transition().duration(st).call(n) }, n.container = this, r.disabled = ft.map(function (n) { return !!n.disabled }), !l) { l = {}; for (kt in r) l[kt] = r[kt] instanceof Array ? r[kt].slice(0) : r[kt] } if (oi = d3.behavior.drag().on("dragstart", ci).on("drag", li).on("dragend", ai), ft && ft.length && ft.filter(function (n) { return n.values.length }).length) wt.selectAll(".nv-noData").remove(); else return ni = wt.selectAll(".nv-noData").data([ot]), ni.enter().append("text").attr("class", "nvd3 nv-noData").attr("dy", "-.7em").style("text-anchor", "middle"), ni.attr("x", t.left + ht / 2).attr("y", t.top + vt / 2).text(function (n) { return n }), n; et = i.xScale(); p = i.yScale(); e ? i.yDomain(null) : (ti = ft.filter(function (n) { return !n.disabled }).map(function (n) { var t = d3.extent(n.values, i.y()); return t[0] < -.95 && (t[0] = -.95), [(t[0] - t[1]) / (1 + t[1]), (t[1] - t[0]) / (1 + t[0])] }), si = [d3.min(ti, function (n) { return n[0] }), d3.max(ti, function (n) { return n[1] })], i.yDomain(si)); a.domain([0, ft[0].values.length - 1]).range([0, ht]).clamp(!0); var ft = at(u.i, ft), vi = g ? "none" : "all", bt = wt.selectAll("g.nv-wrap.nv-cumulativeLine").data([ft]), pt = bt.enter().append("g").attr("class", "nvd3 nv-wrap nv-cumulativeLine").append("g"), yt = bt.select("g"); pt.append("g").attr("class", "nv-interactive"); pt.append("g").attr("class", "nv-x nv-axis").style("pointer-events", "none"); pt.append("g").attr("class", "nv-y nv-axis"); pt.append("g").attr("class", "nv-background"); pt.append("g").attr("class", "nv-linesWrap").style("pointer-events", vi); pt.append("g").attr("class", "nv-avgLinesWrap").style("pointer-events", "none"); pt.append("g").attr("class", "nv-legendWrap"); pt.append("g").attr("class", "nv-controlsWrap"); tt && (s.width(ht), yt.select(".nv-legendWrap").datum(ft).call(s), t.top != s.height() && (t.top = s.height(), vt = (k || parseInt(wt.style("height")) || 400) - t.top - t.bottom), yt.select(".nv-legendWrap").attr("transform", "translate(0," + -t.top + ")")); ut && (hi = [{ key: "Re-scale y-axis", disabled: !e }], b.width(140).color(["#444", "#444", "#444"]).rightAlign(!1).margin({ top: 5, right: 0, bottom: 5, left: 20 }), yt.select(".nv-controlsWrap").datum(hi).attr("transform", "translate(0," + -t.top + ")").call(b)); bt.attr("transform", "translate(" + t.left + "," + t.top + ")"); d && yt.select(".nv-y.nv-axis").attr("transform", "translate(" + ht + ",0)"); ii = ft.filter(function (n) { return n.tempDisabled }); bt.select(".tempDisabled").remove(); ii.length && bt.append("text").attr("class", "tempDisabled").attr("x", ht / 2).attr("y", "-.71em").style("text-anchor", "end").text(ii.map(function (n) { return n.key }).join(", ") + " values cannot be calculated for this time period."); g && (h.width(ht).height(vt).margin({ left: t.left, top: t.top }).svgContainer(wt).xScale(et), bt.select(".nv-interactive").call(h)); pt.select(".nv-background").append("rect"); yt.select(".nv-background rect").attr("width", ht).attr("height", vt); i.y(function (n) { return n.display.y }).width(ht).height(vt).color(ft.map(function (n, t) { return n.color || v(n, t) }).filter(function (n, t) { return !ft[t].disabled && !ft[t].tempDisabled })); ri = yt.select(".nv-linesWrap").datum(ft.filter(function (n) { return !n.disabled && !n.tempDisabled })); ri.call(i); ft.forEach(function (n, t) { n.seriesIndex = t }); var yi = ft.filter(function (n) { return !n.disabled && !!w(n) }), ui = yt.select(".nv-avgLinesWrap").selectAll("line").data(yi, function (n) { return n.key }), gt = function (n) { var t = p(w(n)); return t < 0 ? 0 : t > vt ? vt : t }; ui.enter().append("line").style("stroke-width", 2).style("stroke-dasharray", "10,10").style("stroke", function (n) { return i.color()(n, n.seriesIndex) }).attr("x1", 0).attr("x2", ht).attr("y1", gt).attr("y2", gt); ui.style("stroke-opacity", function (n) { var t = p(w(n)); return t < 0 || t > vt ? 0 : 1 }).attr("x1", 0).attr("x2", ht).attr("y1", gt).attr("y2", gt); ui.exit().remove(); dt = ri.selectAll(".nv-indexLine").data([u]); dt.enter().append("rect").attr("class", "nv-indexLine").attr("width", 3).attr("x", -2).attr("fill", "red").attr("fill-opacity", .5).style("pointer-events", "all").call(oi); dt.attr("transform", function (n) { return "translate(" + a(n.i) + ",0)" }).attr("height", vt); it && (c.scale(et).ticks(Math.min(ft[0].values.length, ht / 70)).tickSize(-vt, 0), yt.select(".nv-x.nv-axis").attr("transform", "translate(0," + p.range()[0] + ")"), d3.transition(yt.select(".nv-x.nv-axis")).call(c)); rt && (o.scale(p).ticks(vt / 36).tickSize(-ht, 0), d3.transition(yt.select(".nv-y.nv-axis")).call(o)); yt.select(".nv-background rect").on("click", function () { u.x = d3.mouse(this)[0]; u.i = Math.round(a.invert(u.x)); r.index = u.i; f.stateChange(r); fi() }); i.dispatch.on("elementClick", function (n) { u.i = n.pointIndex; u.x = a(u.i); r.index = u.i; f.stateChange(r); fi() }); b.dispatch.on("legendClick", function (t) { t.disabled = !t.disabled; e = !t.disabled; r.rescaleY = e; f.stateChange(r); n.update() }); s.dispatch.on("stateChange", function (t) { r.disabled = t.disabled; f.stateChange(r); n.update() }); h.dispatch.on("elementMousemove", function (r) { var s, u, e, f, a; if (i.clearHighlights(), f = [], ft.filter(function (n, t) { return n.seriesIndex = t, !n.disabled }).forEach(function (t, o) { u = nv.interactiveBisect(t.values, r.pointXValue, n.x()); i.highlightPoint(o, u, !0); var h = t.values[u]; typeof h != "undefined" && (typeof s == "undefined" && (s = h), typeof e == "undefined" && (e = n.xScale()(n.x()(h, u))), f.push({ key: t.key, value: n.y()(h, u), color: v(t, t.seriesIndex) })) }), f.length > 2) { var p = n.yScale().invert(r.mouseY), w = Math.abs(n.yScale().domain()[0] - n.yScale().domain()[1]), b = .03 * w, l = nv.nearestValueIndex(f.map(function (n) { return n.value }), p, b); l !== null && (f[l].highlight = !0) } a = c.tickFormat()(n.x()(s, u), u); h.tooltip.position({ left: e + t.left, top: r.mouseY + t.top }).chartContainer(ei.parentNode).enabled(y).valueFormatter(function (n) { return o.tickFormat()(n) }).data({ value: a, series: f })(); h.renderGuideLine(e) }); h.dispatch.on("elementMouseout", function () { f.tooltipHide(); i.clearHighlights() }); f.on("tooltipShow", function (n) { y && lt(n, ei.parentNode) }); f.on("changeState", function (t) { typeof t.disabled != "undefined" && (ft.forEach(function (n, i) { n.disabled = t.disabled[i] }), r.disabled = t.disabled); typeof t.index != "undefined" && (u.i = t.index, u.x = a(u.i), r.index = t.index, dt.data([u])); typeof t.rescaleY != "undefined" && (e = t.rescaleY); n.update() }) }), n } function at(n, t) { return t.map(function (t) { var u, r; return t.values ? (u = t.values[n], u == null) ? t : (r = i.y()(u, n), r < -.95 && !ht) ? (t.tempDisabled = !0, t) : (t.tempDisabled = !1, t.values = t.values.map(function (n, t) { return n.display = { y: (i.y()(n, t) - r) / (1 + r) }, n }), t) : t }) } var i = nv.models.line(), c = nv.models.axis(), o = nv.models.axis(), s = nv.models.legend(), b = nv.models.legend(), h = nv.interactiveGuideline(), t = { top: 30, right: 30, bottom: 50, left: 60 }, v = nv.utils.defaultColor(), nt = null, k = null, tt = !0, it = !0, rt = !0, d = !1, y = !0, ut = !0, g = !1, e = !0, ft = function (n, t, i) { return "<h3>" + n + "<\/h3><p>" + i + " at " + t + "<\/p>" }, et, p, ct = i.id(), r = { index: 0, rescaleY: e }, l = null, ot = "No Data Available.", w = function (n) { return n.average }, f = d3.dispatch("tooltipShow", "tooltipHide", "stateChange", "changeState"), st = 250, ht = !1; c.orient("bottom").tickPadding(7); o.orient(d ? "right" : "left"); b.updateState(!1); var a = d3.scale.linear(), u = { i: 0, x: 0 }, lt = function (t, r) { var u = t.pos[0] + (r.offsetLeft || 0), f = t.pos[1] + (r.offsetTop || 0), e = c.tickFormat()(i.x()(t.point, t.pointIndex)), s = o.tickFormat()(i.y()(t.point, t.pointIndex)), h = ft(t.series.key, e, s, t, n); nv.tooltip.show([u, f], h, null, null, r) }; i.dispatch.on("elementMouseover.tooltip", function (n) { n.pos = [n.pos[0] + t.left, n.pos[1] + t.top]; f.tooltipShow(n) }); i.dispatch.on("elementMouseout.tooltip", function (n) { f.tooltipHide(n) }); f.on("tooltipHide", function () { y && nv.tooltip.cleanup() }); return n.dispatch = f, n.lines = i, n.legend = s, n.xAxis = c, n.yAxis = o, n.interactiveLayer = h, d3.rebind(n, i, "defined", "isArea", "x", "y", "xScale", "yScale", "size", "xDomain", "yDomain", "xRange", "yRange", "forceX", "forceY", "interactive", "clipEdge", "clipVoronoi", "useVoronoi", "id"), n.options = nv.utils.optionsFunc.bind(n), n.margin = function (i) { return arguments.length ? (t.top = typeof i.top != "undefined" ? i.top : t.top, t.right = typeof i.right != "undefined" ? i.right : t.right, t.bottom = typeof i.bottom != "undefined" ? i.bottom : t.bottom, t.left = typeof i.left != "undefined" ? i.left : t.left, n) : t }, n.width = function (t) { return arguments.length ? (nt = t, n) : nt }, n.height = function (t) { return arguments.length ? (k = t, n) : k }, n.color = function (t) { return arguments.length ? (v = nv.utils.getColor(t), s.color(v), n) : v }, n.rescaleY = function (t) { return arguments.length ? (e = t, n) : e }, n.showControls = function (t) { return arguments.length ? (ut = t, n) : ut }, n.useInteractiveGuideline = function (t) { return arguments.length ? (g = t, t === !0 && (n.interactive(!1), n.useVoronoi(!1)), n) : g }, n.showLegend = function (t) { return arguments.length ? (tt = t, n) : tt }, n.showXAxis = function (t) { return arguments.length ? (it = t, n) : it }, n.showYAxis = function (t) { return arguments.length ? (rt = t, n) : rt }, n.rightAlignYAxis = function (t) { return arguments.length ? (d = t, o.orient(t ? "right" : "left"), n) : d }, n.tooltips = function (t) { return arguments.length ? (y = t, n) : y }, n.tooltipContent = function (t) { return arguments.length ? (ft = t, n) : ft }, n.state = function (t) { return arguments.length ? (r = t, n) : r }, n.defaultState = function (t) { return arguments.length ? (l = t, n) : l }, n.noData = function (t) { return arguments.length ? (ot = t, n) : ot }, n.average = function (t) { return arguments.length ? (w = t, n) : w }, n.transitionDuration = function (t) { return arguments.length ? (st = t, n) : st }, n.noErrorCheck = function (t) { return arguments.length ? (ht = t, n) : ht }, n };
//# sourceMappingURL=cumulativeLineChart.min.js.map