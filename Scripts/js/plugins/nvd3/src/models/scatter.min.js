nv.models.scatter = function () { "use strict"; function n(kt) { return kt.each(function (n) { function si() { var o, w, h, p; if (!v) return !1; if (o = d3.merge(n.map(function (n, r) { return n.values.map(function (n, e) { var o = u(n, e), s = f(n, e); return [t(o) + Math.random() * 1e-7, i(s) + Math.random() * 1e-7, r, e, n] }).filter(function (n, t) { return ct(n[4], t) }) })), ut === !0) { d && (w = kt.select("defs").selectAll(".nv-point-clips").data([e]).enter(), w.append("clipPath").attr("class", "nv-point-clips").attr("id", "nv-points-clip-" + e), h = kt.select("#nv-points-clip-" + e).selectAll("circle").data(o), h.enter().append("circle").attr("r", vt), h.exit().remove(), h.attr("cx", function (n) { return n[0] }).attr("cy", function (n) { return n[1] }), kt.select(".nv-point-paths").attr("clip-path", "url(#nv-points-clip-" + e + ")")); o.length && (o.push([t.range()[0] - 20, i.range()[0] - 20, null, null]), o.push([t.range()[1] + 20, i.range()[1] + 20, null, null]), o.push([t.range()[0] - 20, i.range()[0] + 20, null, null]), o.push([t.range()[1] + 20, i.range()[1] - 20, null, null])); var b = d3.geom.polygon([[-10, -10], [-10, a + 10], [l + 10, a + 10], [l + 10, -10]]), k = d3.geom.voronoi(o).map(function (n, t) { return { data: b.clip(n), series: o[t][2], point: o[t][3] } }), y = kt.select(".nv-point-paths").selectAll("path").data(k); y.enter().append("path").attr("class", function (n, t) { return "nv-path-" + t }); y.exit().remove(); y.attr("d", function (n) { return n.data.length === 0 ? "M 0 0" : "M" + n.data.join("L") + "Z" }); p = function (e, o) { var s, h; if (c) return 0; (s = n[e.series], typeof s != "undefined") && (h = s.values[e.point], o({ point: h, series: s, pos: [t(u(h, e.point)) + r.left, i(f(h, e.point)) + r.top], seriesIndex: e.series, pointIndex: e.point })) }; y.on("click", function (n) { p(n, s.elementClick) }).on("mouseover", function (n) { p(n, s.elementMouseover) }).on("mouseout", function (n) { p(n, s.elementMouseout) }) } else kt.select(".nv-groups").selectAll(".nv-group").selectAll(".nv-point").on("click", function (e, o) { if (c || !n[e.series]) return 0; var l = n[e.series], h = l.values[o]; s.elementClick({ point: h, series: l, pos: [t(u(h, o)) + r.left, i(f(h, o)) + r.top], seriesIndex: e.series, pointIndex: o }) }).on("mouseover", function (e, o) { if (c || !n[e.series]) return 0; var l = n[e.series], h = l.values[o]; s.elementMouseover({ point: h, series: l, pos: [t(u(h, o)) + r.left, i(f(h, o)) + r.top], seriesIndex: e.series, pointIndex: o }) }).on("mouseout", function (t, i) { if (c || !n[t.series]) return 0; var r = n[t.series], u = r.values[i]; s.elementMouseout({ point: u, series: r, seriesIndex: t.series, pointIndex: i }) }); c = !1 } var ni = l - r.left - r.right, ii = a - r.top - r.bottom, fi = d3.select(this), ti, gt, dt; n.forEach(function (n, t) { n.values.forEach(function (n) { n.series = t }) }); ti = g && nt && it ? [] : d3.merge(n.map(function (n) { return n.values.map(function (n, t) { return { x: u(n, t), y: f(n, t), size: h(n, t) } }) })); t.domain(g || d3.extent(ti.map(function (n) { return n.x }).concat(et))); lt && n[0] ? t.range(tt || [(ni * k + ni) / (2 * n[0].values.length), ni - ni * (1 + k) / (2 * n[0].values.length)]) : t.range(tt || [0, ni]); i.domain(nt || d3.extent(ti.map(function (n) { return n.y }).concat(ot))).range(yt || [ii, 0]); o.domain(it || d3.extent(ti.map(function (n) { return n.size }).concat(st))).range(pt || [16, 256]); (t.domain()[0] === t.domain()[1] || i.domain()[0] === i.domain()[1]) && (rt = !0); t.domain()[0] === t.domain()[1] && (t.domain()[0] ? t.domain([t.domain()[0] - t.domain()[0] * .01, t.domain()[1] + t.domain()[1] * .01]) : t.domain([-1, 1])); i.domain()[0] === i.domain()[1] && (i.domain()[0] ? i.domain([i.domain()[0] - i.domain()[0] * .01, i.domain()[1] + i.domain()[1] * .01]) : i.domain([-1, 1])); isNaN(t.domain()[0]) && t.domain([-1, 1]); isNaN(i.domain()[0]) && i.domain([-1, 1]); y = y || t; p = p || i; wt = wt || o; var kt = fi.selectAll("g.nv-wrap.nv-scatter").data([n]), ri = kt.enter().append("g").attr("class", "nvd3 nv-wrap nv-scatter nv-chart-" + e + (rt ? " nv-single-point" : "")), ei = ri.append("defs"), ui = ri.append("g"), oi = kt.select("g"); ui.append("g").attr("class", "nv-groups"); ui.append("g").attr("class", "nv-point-paths"); kt.attr("transform", "translate(" + r.left + "," + r.top + ")"); ei.append("clipPath").attr("id", "nv-edge-clip-" + e).append("rect"); kt.select("#nv-edge-clip-" + e + " rect").attr("width", ni).attr("height", ii > 0 ? ii : 0); oi.attr("clip-path", at ? "url(#nv-edge-clip-" + e + ")" : ""); c = !0; gt = kt.select(".nv-groups").selectAll(".nv-group").data(function (n) { return n }, function (n) { return n.key }); gt.enter().append("g").style("stroke-opacity", 1e-6).style("fill-opacity", 1e-6); gt.exit().remove(); gt.attr("class", function (n, t) { return "nv-group nv-series-" + t }).classed("hover", function (n) { return n.hover }); gt.transition().style("fill", function (n, t) { return w(n, t) }).style("stroke", function (n, t) { return w(n, t) }).style("stroke-opacity", 1).style("fill-opacity", .5); ft ? (dt = gt.selectAll("circle.nv-point").data(function (n) { return n.values }, ht), dt.enter().append("circle").style("fill", function (n) { return n.color }).style("stroke", function (n) { return n.color }).attr("cx", function (n, t) { return nv.utils.NaNtoZero(y(u(n, t))) }).attr("cy", function (n, t) { return nv.utils.NaNtoZero(p(f(n, t))) }).attr("r", function (n, t) { return Math.sqrt(o(h(n, t)) / Math.PI) }), dt.exit().remove(), gt.exit().selectAll("path.nv-point").transition().attr("cx", function (n, i) { return nv.utils.NaNtoZero(t(u(n, i))) }).attr("cy", function (n, t) { return nv.utils.NaNtoZero(i(f(n, t))) }).remove(), dt.each(function (n, t) { d3.select(this).classed("nv-point", !0).classed("nv-point-" + t, !0).classed("hover", !1) }), dt.transition().attr("cx", function (n, i) { return nv.utils.NaNtoZero(t(u(n, i))) }).attr("cy", function (n, t) { return nv.utils.NaNtoZero(i(f(n, t))) }).attr("r", function (n, t) { return Math.sqrt(o(h(n, t)) / Math.PI) })) : (dt = gt.selectAll("path.nv-point").data(function (n) { return n.values }), dt.enter().append("path").style("fill", function (n) { return n.color }).style("stroke", function (n) { return n.color }).attr("transform", function (n, t) { return "translate(" + y(u(n, t)) + "," + p(f(n, t)) + ")" }).attr("d", d3.svg.symbol().type(b).size(function (n, t) { return o(h(n, t)) })), dt.exit().remove(), gt.exit().selectAll("path.nv-point").transition().attr("transform", function (n, r) { return "translate(" + t(u(n, r)) + "," + i(f(n, r)) + ")" }).remove(), dt.each(function (n, t) { d3.select(this).classed("nv-point", !0).classed("nv-point-" + t, !0).classed("hover", !1) }), dt.transition().attr("transform", function (n, r) { return "translate(" + t(u(n, r)) + "," + i(f(n, r)) + ")" }).attr("d", d3.svg.symbol().type(b).size(function (n, t) { return o(h(n, t)) }))); clearTimeout(bt); bt = setTimeout(si, 300); y = t.copy(); p = i.copy(); wt = o.copy() }), n } var r = { top: 0, right: 0, bottom: 0, left: 0 }, l = 960, a = 500, w = nv.utils.defaultColor(), e = Math.floor(Math.random() * 1e5), t = d3.scale.linear(), i = d3.scale.linear(), o = d3.scale.linear(), u = function (n) { return n.x }, f = function (n) { return n.y }, h = function (n) { return n.size || 1 }, b = function (n) { return n.shape || "circle" }, ft = !0, et = [], ot = [], st = [], v = !0, ht = null, ct = function (n) { return !n.notActive }, lt = !1, k = .1, at = !1, d = !0, vt = function () { return 25 }, g = null, nt = null, tt = null, yt = null, it = null, pt = null, rt = !1, s = d3.dispatch("elementClick", "elementMouseover", "elementMouseout"), ut = !0, y, p, wt, bt, c = !1; n.clearHighlights = function () { d3.selectAll(".nv-chart-" + e + " .nv-point.hover").classed("hover", !1) }; n.highlightPoint = function (n, t, i) { d3.select(".nv-chart-" + e + " .nv-series-" + n + " .nv-point-" + t).classed("hover", i) }; s.on("elementMouseover.point", function (t) { v && n.highlightPoint(t.seriesIndex, t.pointIndex, !0) }); s.on("elementMouseout.point", function (t) { v && n.highlightPoint(t.seriesIndex, t.pointIndex, !1) }); return n.dispatch = s, n.options = nv.utils.optionsFunc.bind(n), n.x = function (t) { return arguments.length ? (u = d3.functor(t), n) : u }, n.y = function (t) { return arguments.length ? (f = d3.functor(t), n) : f }, n.size = function (t) { return arguments.length ? (h = d3.functor(t), n) : h }, n.margin = function (t) { return arguments.length ? (r.top = typeof t.top != "undefined" ? t.top : r.top, r.right = typeof t.right != "undefined" ? t.right : r.right, r.bottom = typeof t.bottom != "undefined" ? t.bottom : r.bottom, r.left = typeof t.left != "undefined" ? t.left : r.left, n) : r }, n.width = function (t) { return arguments.length ? (l = t, n) : l }, n.height = function (t) { return arguments.length ? (a = t, n) : a }, n.xScale = function (i) { return arguments.length ? (t = i, n) : t }, n.yScale = function (t) { return arguments.length ? (i = t, n) : i }, n.zScale = function (t) { return arguments.length ? (o = t, n) : o }, n.xDomain = function (t) { return arguments.length ? (g = t, n) : g }, n.yDomain = function (t) { return arguments.length ? (nt = t, n) : nt }, n.sizeDomain = function (t) { return arguments.length ? (it = t, n) : it }, n.xRange = function (t) { return arguments.length ? (tt = t, n) : tt }, n.yRange = function (t) { return arguments.length ? (yt = t, n) : yt }, n.sizeRange = function (t) { return arguments.length ? (pt = t, n) : pt }, n.forceX = function (t) { return arguments.length ? (et = t, n) : et }, n.forceY = function (t) { return arguments.length ? (ot = t, n) : ot }, n.forceSize = function (t) { return arguments.length ? (st = t, n) : st }, n.interactive = function (t) { return arguments.length ? (v = t, n) : v }, n.pointKey = function (t) { return arguments.length ? (ht = t, n) : ht }, n.pointActive = function (t) { return arguments.length ? (ct = t, n) : ct }, n.padData = function (t) { return arguments.length ? (lt = t, n) : lt }, n.padDataOuter = function (t) { return arguments.length ? (k = t, n) : k }, n.clipEdge = function (t) { return arguments.length ? (at = t, n) : at }, n.clipVoronoi = function (t) { return arguments.length ? (d = t, n) : d }, n.useVoronoi = function (t) { return arguments.length ? (ut = t, ut === !1 && (d = !1), n) : ut }, n.clipRadius = function (t) { return arguments.length ? (vt = t, n) : vt }, n.color = function (t) { return arguments.length ? (w = nv.utils.getColor(t), n) : w }, n.shape = function (t) { return arguments.length ? (b = t, n) : b }, n.onlyCircles = function (t) { return arguments.length ? (ft = t, n) : ft }, n.id = function (t) { return arguments.length ? (e = t, n) : e }, n.singlePoint = function (t) { return arguments.length ? (rt = t, n) : rt }, n };
//# sourceMappingURL=scatter.min.js.map