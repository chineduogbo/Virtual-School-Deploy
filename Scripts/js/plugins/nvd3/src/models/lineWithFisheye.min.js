nv.models.line = function () { "use strict"; function n(p) { return p.each(function (n) { var g = v - i.left - i.right, nt = y - i.top - i.bottom, k, p, d; u = u || t.xScale(); f = f || t.yScale(); l = l || u; a = a || f; var w = d3.select(this).selectAll("g.nv-wrap.nv-line").data([n]), b = w.enter().append("g").attr("class", "nvd3 nv-wrap nv-line"), tt = b.append("defs"), it = b.append("g"), rt = w.select("g"); b.append("g").attr("class", "nv-scatterWrap"); k = w.select(".nv-scatterWrap").datum(n); it.append("g").attr("class", "nv-groups"); t.width(g).height(nt); d3.transition(k).call(t); w.attr("transform", "translate(" + i.left + "," + i.top + ")"); tt.append("clipPath").attr("id", "nv-edge-clip-" + r).append("rect"); w.select("#nv-edge-clip-" + r + " rect").attr("width", g).attr("height", nt); rt.attr("clip-path", c ? "url(#nv-edge-clip-" + r + ")" : ""); k.attr("clip-path", c ? "url(#nv-edge-clip-" + r + ")" : ""); p = w.select(".nv-groups").selectAll(".nv-group").data(function (n) { return n }, function (n) { return n.key }); p.enter().append("g").style("stroke-opacity", 1e-6).style("fill-opacity", 1e-6); d3.transition(p.exit()).style("stroke-opacity", 1e-6).style("fill-opacity", 1e-6).remove(); p.attr("class", function (n, t) { return "nv-group nv-series-" + t }).classed("hover", function (n) { return n.hover }).style("fill", function (n, t) { return e(n, t) }).style("stroke", function (n, t) { return e(n, t) }); d3.transition(p).style("stroke-opacity", 1).style("fill-opacity", .5); d = p.selectAll("path").data(function (n) { return [n.values] }); d.enter().append("path").attr("class", "nv-line").attr("d", d3.svg.line().interpolate(h).x(function (n, t) { return l(o(n, t)) }).y(function (n, t) { return a(s(n, t)) })); d3.transition(p.exit().selectAll("path")).attr("d", d3.svg.line().interpolate(h).x(function (n, t) { return u(o(n, t)) }).y(function (n, t) { return f(s(n, t)) })).remove(); d3.transition(d).attr("d", d3.svg.line().interpolate(h).x(function (n, t) { return u(o(n, t)) }).y(function (n, t) { return f(s(n, t)) })); l = u.copy(); a = f.copy() }), n } var i = { top: 0, right: 0, bottom: 0, left: 0 }, v = 960, y = 500, e = nv.utils.defaultColor(), r = Math.floor(Math.random() * 1e4), o = function (n) { return n.x }, s = function (n) { return n.y }, c = !1, h = "linear", t = nv.models.scatter().id(r).size(16).sizeDomain([16, 256]), u, f, l, a; return n.dispatch = t.dispatch, d3.rebind(n, t, "interactive", "size", "xScale", "yScale", "zScale", "xDomain", "yDomain", "xRange", "yRange", "sizeDomain", "forceX", "forceY", "forceSize", "clipVoronoi", "clipRadius"), n.options = nv.utils.optionsFunc.bind(n), n.margin = function (t) { return arguments.length ? (i = t, n) : i }, n.width = function (t) { return arguments.length ? (v = t, n) : v }, n.height = function (t) { return arguments.length ? (y = t, n) : y }, n.x = function (i) { return arguments.length ? (o = i, t.x(i), n) : o }, n.y = function (i) { return arguments.length ? (s = i, t.y(i), n) : s }, n.clipEdge = function (t) { return arguments.length ? (c = t, n) : c }, n.color = function (i) { return arguments.length ? (e = nv.utils.getColor(i), t.color(e), n) : e }, n.id = function (t) { return arguments.length ? (r = t, n) : r }, n.interpolate = function (t) { return arguments.length ? (h = t, n) : h }, n.defined = function (t) { return arguments.length ? (defined = t, n) : defined }, n };
//# sourceMappingURL=lineWithFisheye.min.js.map