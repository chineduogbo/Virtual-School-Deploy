nv.models.multiBarHorizontalChart = function () { "use strict"; function n(h) { return h.each(function (h) { var ft = d3.select(this), pt = this, ot = (w || parseInt(ft.style("width")) || 960) - t.left - t.right, et = (l || parseInt(ft.style("height")) || 400) - t.top - t.bottom, st, lt, ct, vt, yt; if (n.update = function () { ft.transition().duration(tt).call(n) }, n.container = this, r.disabled = h.map(function (n) { return !!n.disabled }), !e) { e = {}; for (st in r) e[st] = r[st] instanceof Array ? r[st].slice(0) : r[st] } if (h && h.length && h.filter(function (n) { return n.values.length }).length) ft.selectAll(".nv-noData").remove(); else return lt = ft.selectAll(".nv-noData").data([g]), lt.enter().append("text").attr("class", "nvd3 nv-noData").attr("dy", "-.7em").style("text-anchor", "middle"), lt.attr("x", t.left + ot / 2).attr("y", t.top + et / 2).text(function (n) { return n }), n; rt = i.xScale(); p = i.yScale(); var at = ft.selectAll("g.nv-wrap.nv-multiBarHorizontalChart").data([h]), ht = at.enter().append("g").attr("class", "nvd3 nv-wrap nv-multiBarHorizontalChart").append("g"), it = at.select("g"); ht.append("g").attr("class", "nv-x nv-axis"); ht.append("g").attr("class", "nv-y nv-axis").append("g").attr("class", "nv-zeroLine").append("line"); ht.append("g").attr("class", "nv-barsWrap"); ht.append("g").attr("class", "nv-legendWrap"); ht.append("g").attr("class", "nv-controlsWrap"); b && (f.width(ot - nt()), i.barColor() && h.forEach(function (n, t) { n.color = d3.rgb("#ccc").darker(t * 1.5).toString() }), it.select(".nv-legendWrap").datum(h).call(f), t.top != f.height() && (t.top = f.height(), et = (l || parseInt(ft.style("height")) || 400) - t.top - t.bottom), it.select(".nv-legendWrap").attr("transform", "translate(" + nt() + "," + -t.top + ")")); v && (ct = [{ key: "Grouped", disabled: i.stacked() }, { key: "Stacked", disabled: !i.stacked() }], c.width(nt()).color(["#444", "#444", "#444"]), it.select(".nv-controlsWrap").datum(ct).attr("transform", "translate(0," + -t.top + ")").call(c)); at.attr("transform", "translate(" + t.left + "," + t.top + ")"); i.disabled(h.map(function (n) { return n.disabled })).width(ot).height(et).color(h.map(function (n, t) { return n.color || a(n, t) }).filter(function (n, t) { return !h[t].disabled })); vt = it.select(".nv-barsWrap").datum(h.filter(function (n) { return !n.disabled })); vt.transition().call(i); k && (o.scale(rt).ticks(et / 24).tickSize(-ot, 0), it.select(".nv-x.nv-axis").transition().call(o), yt = it.select(".nv-x.nv-axis").selectAll("g"), yt.selectAll("line, text")); d && (s.scale(p).ticks(ot / 100).tickSize(-et, 0), it.select(".nv-y.nv-axis").attr("transform", "translate(0," + et + ")"), it.select(".nv-y.nv-axis").transition().call(s)); it.select(".nv-zeroLine line").attr("x1", p(0)).attr("x2", p(0)).attr("y1", 0).attr("y2", -et); f.dispatch.on("stateChange", function (t) { r = t; u.stateChange(r); n.update() }); c.dispatch.on("legendClick", function (t) { if (t.disabled) { ct = ct.map(function (n) { return n.disabled = !0, n }); t.disabled = !1; switch (t.key) { case "Grouped": i.stacked(!1); break; case "Stacked": i.stacked(!0) } r.stacked = i.stacked(); u.stateChange(r); n.update() } }); u.on("tooltipShow", function (n) { y && ut(n, pt.parentNode) }); u.on("changeState", function (t) { typeof t.disabled != "undefined" && (h.forEach(function (n, i) { n.disabled = t.disabled[i] }), r.disabled = t.disabled); typeof t.stacked != "undefined" && (i.stacked(t.stacked), r.stacked = t.stacked); n.update() }) }), n } var i = nv.models.multiBarHorizontal(), o = nv.models.axis(), s = nv.models.axis(), f = nv.models.legend().height(30), c = nv.models.legend().height(30), t = { top: 30, right: 20, bottom: 50, left: 60 }, w = null, l = null, a = nv.utils.defaultColor(), v = !0, b = !0, k = !0, d = !0, it = !1, y = !0, h = function (n, t, i) { return "<h3>" + n + " - " + t + "<\/h3><p>" + i + "<\/p>" }, rt, p, r = { stacked: it }, e = null, g = "No Data Available.", u = d3.dispatch("tooltipShow", "tooltipHide", "stateChange", "changeState"), nt = function () { return v ? 180 : 0 }, tt = 250, ut; i.stacked(it); o.orient("left").tickPadding(5).highlightZero(!1).showMaxMin(!1).tickFormat(function (n) { return n }); s.orient("bottom").tickFormat(d3.format(",.1f")); c.updateState(!1); ut = function (t, r) { var u = t.pos[0] + (r.offsetLeft || 0), f = t.pos[1] + (r.offsetTop || 0), e = o.tickFormat()(i.x()(t.point, t.pointIndex)), c = s.tickFormat()(i.y()(t.point, t.pointIndex)), l = h(t.series.key, e, c, t, n); nv.tooltip.show([u, f], l, t.value < 0 ? "e" : "w", null, r) }; i.dispatch.on("elementMouseover.tooltip", function (n) { n.pos = [n.pos[0] + t.left, n.pos[1] + t.top]; u.tooltipShow(n) }); i.dispatch.on("elementMouseout.tooltip", function (n) { u.tooltipHide(n) }); u.on("tooltipHide", function () { y && nv.tooltip.cleanup() }); return n.dispatch = u, n.multibar = i, n.legend = f, n.xAxis = o, n.yAxis = s, d3.rebind(n, i, "x", "y", "xDomain", "yDomain", "xRange", "yRange", "forceX", "forceY", "clipEdge", "id", "delay", "showValues", "showBarLabels", "valueFormat", "stacked", "barColor"), n.options = nv.utils.optionsFunc.bind(n), n.margin = function (i) { return arguments.length ? (t.top = typeof i.top != "undefined" ? i.top : t.top, t.right = typeof i.right != "undefined" ? i.right : t.right, t.bottom = typeof i.bottom != "undefined" ? i.bottom : t.bottom, t.left = typeof i.left != "undefined" ? i.left : t.left, n) : t }, n.width = function (t) { return arguments.length ? (w = t, n) : w }, n.height = function (t) { return arguments.length ? (l = t, n) : l }, n.color = function (t) { return arguments.length ? (a = nv.utils.getColor(t), f.color(a), n) : a }, n.showControls = function (t) { return arguments.length ? (v = t, n) : v }, n.showLegend = function (t) { return arguments.length ? (b = t, n) : b }, n.showXAxis = function (t) { return arguments.length ? (k = t, n) : k }, n.showYAxis = function (t) { return arguments.length ? (d = t, n) : d }, n.tooltip = function (t) { return arguments.length ? (h = t, n) : h }, n.tooltips = function (t) { return arguments.length ? (y = t, n) : y }, n.tooltipContent = function (t) { return arguments.length ? (h = t, n) : h }, n.state = function (t) { return arguments.length ? (r = t, n) : r }, n.defaultState = function (t) { return arguments.length ? (e = t, n) : e }, n.noData = function (t) { return arguments.length ? (g = t, n) : g }, n.transitionDuration = function (t) { return arguments.length ? (tt = t, n) : tt }, n };
//# sourceMappingURL=multiBarHorizontalChart.min.js.map