nv.models.multiBarChart = function () { "use strict"; function n(c) { return c.each(function (c) { var ht = d3.select(this), ii = this, ct = (b || parseInt(ht.style("width")) || 960) - t.left - t.right, lt = (a || parseInt(ht.style("height")) || 400) - t.top - t.bottom, at, wt, pt, kt, yt, ti; if (n.update = function () { ht.transition().duration(ft).call(n) }, n.container = this, r.disabled = c.map(function (n) { return !!n.disabled }), !o) { o = {}; for (at in r) o[at] = r[at] instanceof Array ? r[at].slice(0) : r[at] } if (c && c.length && c.filter(function (n) { return n.values.length }).length) ht.selectAll(".nv-noData").remove(); else return wt = ht.selectAll(".nv-noData").data([rt]), wt.enter().append("text").attr("class", "nvd3 nv-noData").attr("dy", "-.7em").style("text-anchor", "middle"), wt.attr("x", t.left + ct / 2).attr("y", t.top + lt / 2).text(function (n) { return n }), n; et = i.xScale(); it = i.yScale(); var bt = ht.selectAll("g.nv-wrap.nv-multiBarWithLegend").data([c]), vt = bt.enter().append("g").attr("class", "nvd3 nv-wrap nv-multiBarWithLegend").append("g"), st = bt.select("g"); if (vt.append("g").attr("class", "nv-x nv-axis"), vt.append("g").attr("class", "nv-y nv-axis"), vt.append("g").attr("class", "nv-barsWrap"), vt.append("g").attr("class", "nv-legendWrap"), vt.append("g").attr("class", "nv-controlsWrap"), k && (f.width(ct - ut()), i.barColor() && c.forEach(function (n, t) { n.color = d3.rgb("#ccc").darker(t * 1.5).toString() }), st.select(".nv-legendWrap").datum(c).call(f), t.top != f.height() && (t.top = f.height(), lt = (a || parseInt(ht.style("height")) || 400) - t.top - t.bottom), st.select(".nv-legendWrap").attr("transform", "translate(" + ut() + "," + -t.top + ")")), y && (pt = [{ key: "Grouped", disabled: i.stacked() }, { key: "Stacked", disabled: !i.stacked() }], l.width(ut()).color(["#444", "#444", "#444"]), st.select(".nv-controlsWrap").datum(pt).attr("transform", "translate(0," + -t.top + ")").call(l)), bt.attr("transform", "translate(" + t.left + "," + t.top + ")"), p && st.select(".nv-y.nv-axis").attr("transform", "translate(" + ct + ",0)"), i.disabled(c.map(function (n) { return n.disabled })).width(ct).height(lt).color(c.map(function (n, t) { return n.color || v(n, t) }).filter(function (n, t) { return !c[t].disabled })), kt = st.select(".nv-barsWrap").datum(c.filter(function (n) { return !n.disabled })), kt.transition().call(i), d) { if (s.scale(et).ticks(ct / 100).tickSize(-lt, 0), st.select(".nv-x.nv-axis").attr("transform", "translate(0," + it.range()[0] + ")"), st.select(".nv-x.nv-axis").transition().call(s), yt = st.select(".nv-x.nv-axis > g").selectAll("g"), yt.selectAll("line, text").style("opacity", 1), tt) { var dt = function (n, t) { return "translate(" + n + "," + t + ")" }, gt = 5, ni = 17; yt.selectAll("text").attr("transform", function (n, t, i) { return dt(0, i % 2 == 0 ? gt : ni) }); ti = d3.selectAll(".nv-x.nv-axis .nv-wrap g g text")[0].length; st.selectAll(".nv-x.nv-axis .nv-axisMaxMin text").attr("transform", function (n, t) { return dt(0, t === 0 || ti % 2 != 0 ? ni : gt) }) } nt && yt.filter(function (n, t) { return t % Math.ceil(c[0].values.length / (ct / 100)) != 0 }).selectAll("text, line").style("opacity", 0); h && yt.selectAll(".tick text").attr("transform", "rotate(" + h + " 0,0)").style("text-anchor", h > 0 ? "start" : "end"); st.select(".nv-x.nv-axis").selectAll("g.nv-axisMaxMin text").style("opacity", 1) } g && (e.scale(it).ticks(lt / 36).tickSize(-ct, 0), st.select(".nv-y.nv-axis").transition().call(e)); f.dispatch.on("stateChange", function (t) { r = t; u.stateChange(r); n.update() }); l.dispatch.on("legendClick", function (t) { if (t.disabled) { pt = pt.map(function (n) { return n.disabled = !0, n }); t.disabled = !1; switch (t.key) { case "Grouped": i.stacked(!1); break; case "Stacked": i.stacked(!0) } r.stacked = i.stacked(); u.stateChange(r); n.update() } }); u.on("tooltipShow", function (n) { w && ot(n, ii.parentNode) }); u.on("changeState", function (t) { typeof t.disabled != "undefined" && (c.forEach(function (n, i) { n.disabled = t.disabled[i] }), r.disabled = t.disabled); typeof t.stacked != "undefined" && (i.stacked(t.stacked), r.stacked = t.stacked); n.update() }) }), n } var i = nv.models.multiBar(), s = nv.models.axis(), e = nv.models.axis(), f = nv.models.legend(), l = nv.models.legend(), t = { top: 30, right: 20, bottom: 50, left: 60 }, b = null, a = null, v = nv.utils.defaultColor(), y = !0, k = !0, d = !0, g = !0, p = !1, nt = !0, tt = !1, h = 0, w = !0, c = function (n, t, i) { return "<h3>" + n + "<\/h3><p>" + i + " on " + t + "<\/p>" }, et, it, r = { stacked: !1 }, o = null, rt = "No Data Available.", u = d3.dispatch("tooltipShow", "tooltipHide", "stateChange", "changeState"), ut = function () { return y ? 180 : 0 }, ft = 250, ot; i.stacked(!1); s.orient("bottom").tickPadding(7).highlightZero(!0).showMaxMin(!1).tickFormat(function (n) { return n }); e.orient(p ? "right" : "left").tickFormat(d3.format(",.1f")); l.updateState(!1); ot = function (t, r) { var u = t.pos[0] + (r.offsetLeft || 0), f = t.pos[1] + (r.offsetTop || 0), o = s.tickFormat()(i.x()(t.point, t.pointIndex)), h = e.tickFormat()(i.y()(t.point, t.pointIndex)), l = c(t.series.key, o, h, t, n); nv.tooltip.show([u, f], l, t.value < 0 ? "n" : "s", null, r) }; i.dispatch.on("elementMouseover.tooltip", function (n) { n.pos = [n.pos[0] + t.left, n.pos[1] + t.top]; u.tooltipShow(n) }); i.dispatch.on("elementMouseout.tooltip", function (n) { u.tooltipHide(n) }); u.on("tooltipHide", function () { w && nv.tooltip.cleanup() }); return n.dispatch = u, n.multibar = i, n.legend = f, n.xAxis = s, n.yAxis = e, d3.rebind(n, i, "x", "y", "xDomain", "yDomain", "xRange", "yRange", "forceX", "forceY", "clipEdge", "id", "stacked", "stackOffset", "delay", "barColor", "groupSpacing"), n.options = nv.utils.optionsFunc.bind(n), n.margin = function (i) { return arguments.length ? (t.top = typeof i.top != "undefined" ? i.top : t.top, t.right = typeof i.right != "undefined" ? i.right : t.right, t.bottom = typeof i.bottom != "undefined" ? i.bottom : t.bottom, t.left = typeof i.left != "undefined" ? i.left : t.left, n) : t }, n.width = function (t) { return arguments.length ? (b = t, n) : b }, n.height = function (t) { return arguments.length ? (a = t, n) : a }, n.color = function (t) { return arguments.length ? (v = nv.utils.getColor(t), f.color(v), n) : v }, n.showControls = function (t) { return arguments.length ? (y = t, n) : y }, n.showLegend = function (t) { return arguments.length ? (k = t, n) : k }, n.showXAxis = function (t) { return arguments.length ? (d = t, n) : d }, n.showYAxis = function (t) { return arguments.length ? (g = t, n) : g }, n.rightAlignYAxis = function (t) { return arguments.length ? (p = t, e.orient(t ? "right" : "left"), n) : p }, n.reduceXTicks = function (t) { return arguments.length ? (nt = t, n) : nt }, n.rotateLabels = function (t) { return arguments.length ? (h = t, n) : h }, n.staggerLabels = function (t) { return arguments.length ? (tt = t, n) : tt }, n.tooltip = function (t) { return arguments.length ? (c = t, n) : c }, n.tooltips = function (t) { return arguments.length ? (w = t, n) : w }, n.tooltipContent = function (t) { return arguments.length ? (c = t, n) : c }, n.state = function (t) { return arguments.length ? (r = t, n) : r }, n.defaultState = function (t) { return arguments.length ? (o = t, n) : o }, n.noData = function (t) { return arguments.length ? (rt = t, n) : rt }, n.transitionDuration = function (t) { return arguments.length ? (ft = t, n) : ft }, n };
//# sourceMappingURL=multiBarChart.min.js.map