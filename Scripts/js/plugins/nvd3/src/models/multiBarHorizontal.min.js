nv.models.multiBarHorizontal = function () { "use strict"; function n(rt) { return rt.each(function (n) { var st = b - f.left - f.right, ct = k - f.top - f.bottom, at = d3.select(this), ot, ut, rt, et; u && (n = d3.layout.stack().offset("zero").values(function (n) { return n.values }).y(i)(n)); n.forEach(function (n, t) { n.values.forEach(function (n) { n.series = t }) }); u && n[0].values.map(function (t, i) { var r = 0, u = 0; n.map(function (n) { var t = n.values[i]; t.size = Math.abs(t.y); t.y < 0 ? (t.y1 = u - t.size, u = u - t.size) : (t.y1 = r, r = r + t.size) }) }); ot = v && y ? [] : n.map(function (n) { return n.values.map(function (n, t) { return { x: e(n, t), y: i(n, t), y0: n.y0, y1: n.y1 } }) }); r.domain(v || d3.merge(ot).map(function (n) { return n.x })).rangeBands(tt || [0, ct], .1); t.domain(y || d3.extent(d3.merge(ot).map(function (n) { return u ? n.y > 0 ? n.y1 + n.y : n.y1 : n.y }).concat(d))); l && !u ? t.range(p || [t.domain()[0] < 0 ? a : 0, st - (t.domain()[1] > 0 ? a : 0)]) : t.range(p || [0, st]); it = it || r; w = w || d3.scale.linear().domain(t.domain()).range([t(0), t(0)]); var ft = d3.select(this).selectAll("g.nv-wrap.nv-multibarHorizontal").data([n]), ht = ft.enter().append("g").attr("class", "nvd3 nv-wrap nv-multibarHorizontal"), vt = ht.append("defs"), lt = ht.append("g"), yt = ft.select("g"); lt.append("g").attr("class", "nv-groups"); ft.attr("transform", "translate(" + f.left + "," + f.top + ")"); ut = ft.select(".nv-groups").selectAll(".nv-group").data(function (n) { return n }, function (n, t) { return t }); ut.enter().append("g").style("stroke-opacity", 1e-6).style("fill-opacity", 1e-6); ut.exit().transition().style("stroke-opacity", 1e-6).style("fill-opacity", 1e-6).remove(); ut.attr("class", function (n, t) { return "nv-group nv-series-" + t }).classed("hover", function (n) { return n.hover }).style("fill", function (n, t) { return c(n, t) }).style("stroke", function (n, t) { return c(n, t) }); ut.transition().style("stroke-opacity", 1).style("fill-opacity", .75); rt = ut.selectAll("g.nv-bar").data(function (n) { return n.values }); rt.exit().remove(); et = rt.enter().append("g").attr("transform", function (t, i, f) { return "translate(" + w(u ? t.y0 : 0) + "," + (u ? 0 : f * r.rangeBand() / n.length + r(e(t, i))) + ")" }); et.append("rect").attr("width", 0).attr("height", r.rangeBand() / (u ? 1 : n.length)); rt.on("mouseover", function (f, o) { d3.select(this).classed("hover", !0); h.elementMouseover({ value: i(f, o), point: f, series: n[f.series], pos: [t(i(f, o) + (u ? f.y0 : 0)), r(e(f, o)) + r.rangeBand() * (u ? n.length / 2 : f.series + .5) / n.length], pointIndex: o, seriesIndex: f.series, e: d3.event }) }).on("mouseout", function (t, r) { d3.select(this).classed("hover", !1); h.elementMouseout({ value: i(t, r), point: t, series: n[t.series], pointIndex: r, seriesIndex: t.series, e: d3.event }) }).on("click", function (f, o) { h.elementClick({ value: i(f, o), point: f, series: n[f.series], pos: [r(e(f, o)) + r.rangeBand() * (u ? n.length / 2 : f.series + .5) / n.length, t(i(f, o) + (u ? f.y0 : 0))], pointIndex: o, seriesIndex: f.series, e: d3.event }); d3.event.stopPropagation() }).on("dblclick", function (f, o) { h.elementDblClick({ value: i(f, o), point: f, series: n[f.series], pos: [r(e(f, o)) + r.rangeBand() * (u ? n.length / 2 : f.series + .5) / n.length, t(i(f, o) + (u ? f.y0 : 0))], pointIndex: o, seriesIndex: f.series, e: d3.event }); d3.event.stopPropagation() }); et.append("text"); l && !u ? (rt.select("text").attr("text-anchor", function (n, t) { return i(n, t) < 0 ? "end" : "start" }).attr("y", r.rangeBand() / (n.length * 2)).attr("dy", ".32em").text(function (n, t) { return nt(i(n, t)) }), rt.transition().select("text").attr("x", function (n, r) { return i(n, r) < 0 ? -4 : t(i(n, r)) - t(0) + 4 })) : rt.selectAll("text").text(""); g && !u ? (et.append("text").classed("nv-bar-label", !0), rt.select("text.nv-bar-label").attr("text-anchor", function (n, t) { return i(n, t) < 0 ? "start" : "end" }).attr("y", r.rangeBand() / (n.length * 2)).attr("dy", ".32em").text(function (n, t) { return e(n, t) }), rt.transition().select("text.nv-bar-label").attr("x", function (n, r) { return i(n, r) < 0 ? t(0) - t(i(n, r)) + 4 : -4 })) : rt.selectAll("text.nv-bar-label").text(""); rt.attr("class", function (n, t) { return i(n, t) < 0 ? "nv-bar negative" : "nv-bar positive" }); s && (o || (o = n.map(function () { return !0 })), rt.style("fill", function (n, t, i) { return d3.rgb(s(n, t)).darker(o.map(function (n, t) { return t }).filter(function (n, t) { return !o[t] })[i]).toString() }).style("stroke", function (n, t, i) { return d3.rgb(s(n, t)).darker(o.map(function (n, t) { return t }).filter(function (n, t) { return !o[t] })[i]).toString() })); u ? rt.transition().attr("transform", function (n, i) { return "translate(" + t(n.y1) + "," + r(e(n, i)) + ")" }).select("rect").attr("width", function (n, r) { return Math.abs(t(i(n, r) + n.y0) - t(n.y0)) }).attr("height", r.rangeBand()) : rt.transition().attr("transform", function (u, f) { return "translate(" + (i(u, f) < 0 ? t(i(u, f)) : t(0)) + "," + (u.series * r.rangeBand() / n.length + r(e(u, f))) + ")" }).select("rect").attr("height", r.rangeBand() / n.length).attr("width", function (n, r) { return Math.max(Math.abs(t(i(n, r)) - t(0)), 1) }); it = r.copy(); w = t.copy() }), n } var f = { top: 0, right: 0, bottom: 0, left: 0 }, b = 960, k = 500, rt = Math.floor(Math.random() * 1e4), r = d3.scale.ordinal(), t = d3.scale.linear(), e = function (n) { return n.x }, i = function (n) { return n.y }, d = [0], c = nv.utils.defaultColor(), s = null, o, u = !1, l = !1, g = !1, a = 60, nt = d3.format(",.2f"), ut = 1200, v, y, tt, p, h = d3.dispatch("chartClick", "elementClick", "elementDblClick", "elementMouseover", "elementMouseout"), it, w; return n.dispatch = h, n.options = nv.utils.optionsFunc.bind(n), n.x = function (t) { return arguments.length ? (e = t, n) : e }, n.y = function (t) { return arguments.length ? (i = t, n) : i }, n.margin = function (t) { return arguments.length ? (f.top = typeof t.top != "undefined" ? t.top : f.top, f.right = typeof t.right != "undefined" ? t.right : f.right, f.bottom = typeof t.bottom != "undefined" ? t.bottom : f.bottom, f.left = typeof t.left != "undefined" ? t.left : f.left, n) : f }, n.width = function (t) { return arguments.length ? (b = t, n) : b }, n.height = function (t) { return arguments.length ? (k = t, n) : k }, n.xScale = function (t) { return arguments.length ? (r = t, n) : r }, n.yScale = function (i) { return arguments.length ? (t = i, n) : t }, n.xDomain = function (t) { return arguments.length ? (v = t, n) : v }, n.yDomain = function (t) { return arguments.length ? (y = t, n) : y }, n.xRange = function (t) { return arguments.length ? (tt = t, n) : tt }, n.yRange = function (t) { return arguments.length ? (p = t, n) : p }, n.forceY = function (t) { return arguments.length ? (d = t, n) : d }, n.stacked = function (t) { return arguments.length ? (u = t, n) : u }, n.color = function (t) { return arguments.length ? (c = nv.utils.getColor(t), n) : c }, n.barColor = function (t) { return arguments.length ? (s = nv.utils.getColor(t), n) : s }, n.disabled = function (t) { return arguments.length ? (o = t, n) : o }, n.id = function (t) { return arguments.length ? (rt = t, n) : rt }, n.delay = function (t) { return arguments.length ? (ut = t, n) : ut }, n.showValues = function (t) { return arguments.length ? (l = t, n) : l }, n.showBarLabels = function (t) { return arguments.length ? (g = t, n) : g }, n.valueFormat = function (t) { return arguments.length ? (nt = t, n) : nt }, n.valuePadding = function (t) { return arguments.length ? (a = t, n) : a }, n };
//# sourceMappingURL=multiBarHorizontal.min.js.map