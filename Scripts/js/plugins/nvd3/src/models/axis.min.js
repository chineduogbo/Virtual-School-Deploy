nv.models.axis = function () { "use strict"; function t(p) { return p.each(function (t) { var ft = d3.select(this), b = ft.selectAll("g.nv-wrap.nv-axis").data([t]), et = b.enter().append("g").attr("class", "nvd3 nv-wrap nv-axis"), ot = et.append("g"), g = b.select("g"), k, w, rt, ut, nt, p, d; h !== null ? i.ticks(h) : (i.orient() == "top" || i.orient() == "bottom") && i.ticks(Math.abs(n.range()[1] - n.range()[0]) / 100); g.transition().call(i); o = o || i.scale(); k = i.tickFormat(); k == null && (k = o.tickFormat()); w = g.selectAll("text.nv-axislabel").data([c || null]); w.exit().remove(); switch (i.orient()) { case "top": w.enter().append("text").attr("class", "nv-axislabel"); nt = n.range().length == 2 ? n.range()[1] : n.range()[n.range().length - 1] + (n.range()[1] - n.range()[0]); w.attr("text-anchor", "middle").attr("y", 0).attr("x", nt / 2); e && (p = b.selectAll("g.nv-axisMaxMin").data(n.domain()), p.enter().append("g").attr("class", "nv-axisMaxMin").append("text"), p.exit().remove(), p.attr("transform", function (t) { return "translate(" + n(t) + ",0)" }).select("text").attr("dy", "-0.5em").attr("y", -i.tickPadding()).attr("text-anchor", "middle").text(function (n) { var t = k(n); return ("" + t).match("NaN") ? "" : t }), p.transition().attr("transform", function (t, i) { return "translate(" + n.range()[i] + ",0)" })); break; case "bottom": var ut = 36, tt = 30, it = g.selectAll("g").select("text"); f % 360 && (it.each(function () { var n = this.getBBox().width; n > tt && (tt = n) }), rt = Math.abs(Math.sin(f * Math.PI / 180)), ut = (rt ? rt * tt : tt) + 30, it.attr("transform", function () { return "rotate(" + f + " 0,0)" }).style("text-anchor", f % 360 > 0 ? "start" : "end")); w.enter().append("text").attr("class", "nv-axislabel"); nt = n.range().length == 2 ? n.range()[1] : n.range()[n.range().length - 1] + (n.range()[1] - n.range()[0]); w.attr("text-anchor", "middle").attr("y", ut).attr("x", nt / 2); e && (p = b.selectAll("g.nv-axisMaxMin").data([n.domain()[0], n.domain()[n.domain().length - 1]]), p.enter().append("g").attr("class", "nv-axisMaxMin").append("text"), p.exit().remove(), p.attr("transform", function (t) { return "translate(" + (n(t) + (v ? n.rangeBand() / 2 : 0)) + ",0)" }).select("text").attr("dy", ".71em").attr("y", i.tickPadding()).attr("transform", function () { return "rotate(" + f + " 0,0)" }).style("text-anchor", f ? f % 360 > 0 ? "start" : "end" : "middle").text(function (n) { var t = k(n); return ("" + t).match("NaN") ? "" : t }), p.transition().attr("transform", function (t) { return "translate(" + (n(t) + (v ? n.rangeBand() / 2 : 0)) + ",0)" })); a && it.attr("transform", function (n, t) { return "translate(0," + (t % 2 == 0 ? "0" : "12") + ")" }); break; case "right": w.enter().append("text").attr("class", "nv-axislabel"); w.style("text-anchor", u ? "middle" : "begin").attr("transform", u ? "rotate(90)" : "").attr("y", u ? -Math.max(r.right, s) + 12 : -10).attr("x", u ? n.range()[0] / 2 : i.tickPadding()); e && (p = b.selectAll("g.nv-axisMaxMin").data(n.domain()), p.enter().append("g").attr("class", "nv-axisMaxMin").append("text").style("opacity", 0), p.exit().remove(), p.attr("transform", function (t) { return "translate(0," + n(t) + ")" }).select("text").attr("dy", ".32em").attr("y", 0).attr("x", i.tickPadding()).style("text-anchor", "start").text(function (n) { var t = k(n); return ("" + t).match("NaN") ? "" : t }), p.transition().attr("transform", function (t, i) { return "translate(0," + n.range()[i] + ")" }).select("text").style("opacity", 1)); break; case "left": w.enter().append("text").attr("class", "nv-axislabel"); w.style("text-anchor", u ? "middle" : "end").attr("transform", u ? "rotate(-90)" : "").attr("y", u ? -Math.max(r.left, s) + y : -10).attr("x", u ? -n.range()[0] / 2 : -i.tickPadding()); e && (p = b.selectAll("g.nv-axisMaxMin").data(n.domain()), p.enter().append("g").attr("class", "nv-axisMaxMin").append("text").style("opacity", 0), p.exit().remove(), p.attr("transform", function (n) { return "translate(0," + o(n) + ")" }).select("text").attr("dy", ".32em").attr("y", 0).attr("x", -i.tickPadding()).attr("text-anchor", "end").text(function (n) { var t = k(n); return ("" + t).match("NaN") ? "" : t }), p.transition().attr("transform", function (t, i) { return "translate(0," + n.range()[i] + ")" }).select("text").style("opacity", 1)) } w.text(function (n) { return n }); e && (i.orient() === "left" || i.orient() === "right") && (g.selectAll("g").each(function (t) { d3.select(this).select("text").attr("opacity", 1); (n(t) < n.range()[1] + 10 || n(t) > n.range()[0] - 10) && ((t > 1e-10 || t < -1e-10) && d3.select(this).attr("opacity", 0), d3.select(this).select("text").attr("opacity", 0)) }), n.domain()[0] == n.domain()[1] && n.domain()[0] == 0 && b.selectAll("g.nv-axisMaxMin").style("opacity", function (n, t) { return t ? 0 : 1 })); e && (i.orient() === "top" || i.orient() === "bottom") && (d = [], b.selectAll("g.nv-axisMaxMin").each(function (t, i) { try { i ? d.push(n(t) - this.getBBox().width - 4) : d.push(n(t) + this.getBBox().width + 4) } catch (r) { i ? d.push(n(t) - 4) : d.push(n(t) + 4) } }), g.selectAll("g").each(function (t) { (n(t) < d[0] || n(t) > d[1]) && (t > 1e-10 || t < -1e-10 ? d3.select(this).remove() : d3.select(this).select("text").remove()) })); l && g.selectAll(".tick").filter(function (n) { return !parseFloat(Math.round(n.__data__ * 1e5) / 1e6) && n.__data__ !== undefined }).classed("zero", !0); o = n.copy() }), t } var i = d3.svg.axis(), r = { top: 0, right: 0, bottom: 0, left: 0 }, s = 75, p = 60, n = d3.scale.linear(), c = null, e = !0, l = !0, f = 0, u = !0, a = !1, v = !1, h = null, y = 12, o; return i.scale(n).orient("bottom").tickFormat(function (n) { return n }), t.axis = i, d3.rebind(t, i, "orient", "tickValues", "tickSubdivide", "tickSize", "tickPadding", "tickFormat"), d3.rebind(t, n, "domain", "range", "rangeBand", "rangeBands"), t.options = nv.utils.optionsFunc.bind(t), t.margin = function (n) { return arguments.length ? (r.top = typeof n.top != "undefined" ? n.top : r.top, r.right = typeof n.right != "undefined" ? n.right : r.right, r.bottom = typeof n.bottom != "undefined" ? n.bottom : r.bottom, r.left = typeof n.left != "undefined" ? n.left : r.left, t) : r }, t.width = function (n) { return arguments.length ? (s = n, t) : s }, t.ticks = function (n) { return arguments.length ? (h = n, t) : h }, t.height = function (n) { return arguments.length ? (p = n, t) : p }, t.axisLabel = function (n) { return arguments.length ? (c = n, t) : c }, t.showMaxMin = function (n) { return arguments.length ? (e = n, t) : e }, t.highlightZero = function (n) { return arguments.length ? (l = n, t) : l }, t.scale = function (r) { return arguments.length ? (n = r, i.scale(n), v = typeof n.rangeBands == "function", d3.rebind(t, n, "domain", "range", "rangeBand", "rangeBands"), t) : n }, t.rotateYLabel = function (n) { return arguments.length ? (u = n, t) : u }, t.rotateLabels = function (n) { return arguments.length ? (f = n, t) : f }, t.staggerLabels = function (n) { return arguments.length ? (a = n, t) : a }, t.axisLabelDistance = function (n) { return arguments.length ? (y = n, t) : y }, t };
//# sourceMappingURL=axis.min.js.map