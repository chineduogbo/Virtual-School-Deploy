nv.models.bullet = function () { "use strict"; function n(r) { return r.each(function (n, r) { var ht = s - t.left - t.right, b = h - t.top - t.bottom, vt = d3.select(this), ut = u.call(this, n, r).slice().sort(d3.descending), tt = f.call(this, n, r).slice().sort(d3.descending), k = e.call(this, n, r).slice().sort(d3.descending), ct = v.call(this, n, r).slice(), lt = y.call(this, n, r).slice(), at = p.call(this, n, r).slice(), a = d3.scale.linear().domain(d3.extent(d3.merge([o, ut]))).range(l ? [ht, 0] : [0, ht]), ft = this.__chart__ || d3.scale.linear().domain([0, Infinity]).range(a.range()), nt; this.__chart__ = a; var d = d3.min(ut), w = d3.max(ut), st = ut[1], et = vt.selectAll("g.nv-wrap.nv-bullet").data([n]), yt = et.enter().append("g").attr("class", "nvd3 nv-wrap nv-bullet"), it = yt.append("g"), g = et.select("g"); it.append("rect").attr("class", "nv-range nv-rangeMax"); it.append("rect").attr("class", "nv-range nv-rangeAvg"); it.append("rect").attr("class", "nv-range nv-rangeMin"); it.append("rect").attr("class", "nv-measure"); it.append("path").attr("class", "nv-markerTriangle"); et.attr("transform", "translate(" + t.left + "," + t.top + ")"); var pt = function (n) { return Math.abs(ft(n) - ft(0)) }, ot = function (n) { return Math.abs(a(n) - a(0)) }, wt = function (n) { return n < 0 ? ft(n) : ft(0) }, rt = function (n) { return n < 0 ? a(n) : a(0) }; g.select("rect.nv-rangeMax").attr("height", b).attr("width", ot(w > 0 ? w : d)).attr("x", rt(w > 0 ? w : d)).datum(w > 0 ? w : d); g.select("rect.nv-rangeAvg").attr("height", b).attr("width", ot(st)).attr("x", rt(st)).datum(st); g.select("rect.nv-rangeMin").attr("height", b).attr("width", ot(w)).attr("x", rt(w)).attr("width", ot(w > 0 ? d : w)).attr("x", rt(w > 0 ? d : w)).datum(w > 0 ? d : w); g.select("rect.nv-measure").style("fill", c).attr("height", b / 3).attr("y", b / 3).attr("width", k < 0 ? a(0) - a(k[0]) : a(k[0]) - a(0)).attr("x", rt(k)).on("mouseover", function () { i.elementMouseover({ value: k[0], label: at[0] || "Current", pos: [a(k[0]), b / 2] }) }).on("mouseout", function () { i.elementMouseout({ value: k[0], label: at[0] || "Current" }) }); if (nt = b / 6, tt[0]) g.selectAll("path.nv-markerTriangle").attr("transform", function () { return "translate(" + a(tt[0]) + "," + b / 2 + ")" }).attr("d", "M0," + nt + "L" + nt + "," + -nt + " " + -nt + "," + -nt + "Z").on("mouseover", function () { i.elementMouseover({ value: tt[0], label: lt[0] || "Previous", pos: [a(tt[0]), b / 2] }) }).on("mouseout", function () { i.elementMouseout({ value: tt[0], label: lt[0] || "Previous" }) }); else g.selectAll("path.nv-markerTriangle").remove(); et.selectAll(".nv-range").on("mouseover", function (n, t) { var r = ct[t] || (t ? t == 1 ? "Mean" : "Minimum" : "Maximum"); i.elementMouseover({ value: n, label: r, pos: [a(n), b / 2] }) }).on("mouseout", function (n, t) { var r = ct[t] || (t ? t == 1 ? "Mean" : "Minimum" : "Maximum"); i.elementMouseout({ value: n, label: r }) }) }), n } var t = { top: 0, right: 0, bottom: 0, left: 0 }, r = "left", l = !1, u = function (n) { return n.ranges }, f = function (n) { return n.markers }, e = function (n) { return n.measures }, v = function (n) { return n.rangeLabels ? n.rangeLabels : [] }, y = function (n) { return n.markerLabels ? n.markerLabels : [] }, p = function (n) { return n.measureLabels ? n.measureLabels : [] }, o = [0], s = 380, h = 30, a = null, c = nv.utils.getColor(["#1f77b4"]), i = d3.dispatch("elementMouseover", "elementMouseout"); return n.dispatch = i, n.options = nv.utils.optionsFunc.bind(n), n.orient = function (t) { return arguments.length ? (r = t, l = r == "right" || r == "bottom", n) : r }, n.ranges = function (t) { return arguments.length ? (u = t, n) : u }, n.markers = function (t) { return arguments.length ? (f = t, n) : f }, n.measures = function (t) { return arguments.length ? (e = t, n) : e }, n.forceX = function (t) { return arguments.length ? (o = t, n) : o }, n.width = function (t) { return arguments.length ? (s = t, n) : s }, n.height = function (t) { return arguments.length ? (h = t, n) : h }, n.margin = function (i) { return arguments.length ? (t.top = typeof i.top != "undefined" ? i.top : t.top, t.right = typeof i.right != "undefined" ? i.right : t.right, t.bottom = typeof i.bottom != "undefined" ? i.bottom : t.bottom, t.left = typeof i.left != "undefined" ? i.left : t.left, n) : t }, n.tickFormat = function (t) { return arguments.length ? (a = t, n) : a }, n.color = function (t) { return arguments.length ? (c = nv.utils.getColor(t), n) : c }, n };
//# sourceMappingURL=bullet.min.js.map