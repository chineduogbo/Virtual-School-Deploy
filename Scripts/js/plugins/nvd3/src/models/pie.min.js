nv.models.pie = function () { "use strict"; function n(nt) { return nt.each(function (n) { function gt(n) { n.endAngle = isNaN(n.endAngle) ? 0 : n.endAngle; n.startAngle = isNaN(n.startAngle) ? 0 : n.startAngle; h || (n.innerRadius = 0); var t = d3.interpolate(this._current, n); return this._current = t(0), function (n) { return nt(t(n)) } } var ot = a - t.left - t.right, st = v - t.top - t.bottom, tt = Math.min(ot, st) / 2, rt = tt - tt / 5, ct = d3.select(this), ut = ct.selectAll(".nv-wrap.nv-pie").data(n), kt = ut.enter().append("g").attr("class", "nvd3 nv-wrap nv-pie nv-chart-" + r), lt = kt.append("g"), at = ut.select("g"), nt, yt, dt, it; lt.append("g").attr("class", "nv-pie"); lt.append("g").attr("class", "nv-pieLabels"); ut.attr("transform", "translate(" + t.left + "," + t.top + ")"); at.select(".nv-pie").attr("transform", "translate(" + ot / 2 + "," + st / 2 + ")"); at.select(".nv-pieLabels").attr("transform", "translate(" + ot / 2 + "," + st / 2 + ")"); ct.on("click", function (n, t) { e.chartClick({ data: n, index: t, pos: d3.event, id: r }) }); nt = d3.svg.arc().outerRadius(rt); c && nt.startAngle(c); l && nt.endAngle(l); h && nt.innerRadius(tt * g); var vt = d3.layout.pie().sort(null).value(function (n) { return n.disabled ? 0 : i(n) }), ft = ut.select(".nv-pie").selectAll(".nv-slice").data(vt), et = ut.select(".nv-pieLabels").selectAll(".nv-label").data(vt); if (ft.exit().remove(), et.exit().remove(), yt = ft.enter().append("g").attr("class", "nv-slice").on("mouseover", function (n, t) { d3.select(this).classed("hover", !0); e.elementMouseover({ label: u(n.data), value: i(n.data), point: n.data, pointIndex: t, pos: [d3.event.pageX, d3.event.pageY], id: r }) }).on("mouseout", function (n, t) { d3.select(this).classed("hover", !1); e.elementMouseout({ label: u(n.data), value: i(n.data), point: n.data, index: t, id: r }) }).on("click", function (n, t) { e.elementClick({ label: u(n.data), value: i(n.data), point: n.data, index: t, pos: d3.event, id: r }); d3.event.stopPropagation() }).on("dblclick", function (n, t) { e.elementDblClick({ label: u(n.data), value: i(n.data), point: n.data, index: t, pos: d3.event, id: r }); d3.event.stopPropagation() }), ft.attr("fill", function (n, t) { return s(n, t) }).attr("stroke", function (n, t) { return s(n, t) }), dt = yt.append("path").each(function (n) { this._current = n }), ft.select("path").transition().attr("d", nt).attrTween("d", gt), p) { it = d3.svg.arc().innerRadius(0); w && (it = nt); b && (it = d3.svg.arc().outerRadius(nt.outerRadius())); et.enter().append("g").classed("nv-label", !0).each(function (n) { var t = d3.select(this); t.attr("transform", function (n) { if (f) { n.outerRadius = rt + 10; n.innerRadius = rt + 15; var t = (n.startAngle + n.endAngle) / 2 * (180 / Math.PI); return (n.startAngle + n.endAngle) / 2 < Math.PI ? t -= 90 : t += 90, "translate(" + it.centroid(n) + ") rotate(" + t + ")" } return n.outerRadius = tt + 10, n.innerRadius = tt + 15, "translate(" + it.centroid(n) + ")" }); t.append("rect").style("stroke", "#fff").style("fill", "#fff").attr("rx", 3).attr("ry", 3); t.append("text").style("text-anchor", f ? (n.startAngle + n.endAngle) / 2 < Math.PI ? "start" : "end" : "middle").style("fill", "#000") }); var pt = {}, ht = 14, wt = 140, bt = function (n) { return Math.floor(n[0] / wt) * wt + "," + Math.floor(n[1] / ht) * ht }; et.transition().attr("transform", function (n) { var i, t, r; return f ? (n.outerRadius = rt + 10, n.innerRadius = rt + 15, i = (n.startAngle + n.endAngle) / 2 * (180 / Math.PI), (n.startAngle + n.endAngle) / 2 < Math.PI ? i -= 90 : i += 90, "translate(" + it.centroid(n) + ") rotate(" + i + ")") : (n.outerRadius = tt + 10, n.innerRadius = tt + 15, t = it.centroid(n), n.value && (r = bt(t), pt[r] && (t[1] -= ht), pt[bt(t)] = !0), "translate(" + t + ")") }); et.select(".nv-label text").style("text-anchor", f ? (d.startAngle + d.endAngle) / 2 < Math.PI ? "start" : "end" : "middle").text(function (n) { var t = (n.endAngle - n.startAngle) / (2 * Math.PI), r = { key: u(n.data), value: i(n.data), percent: y(t) }; return n.value && t > k ? r[o] : "" }) } }), n } var t = { top: 0, right: 0, bottom: 0, left: 0 }, a = 500, v = 500, u = function (n) { return n.x }, i = function (n) { return n.y }, nt = function (n) { return n.description }, r = Math.floor(Math.random() * 1e4), s = nv.utils.defaultColor(), tt = d3.format(",.2f"), y = d3.format("%"), p = !0, w = !0, b = !1, o = "key", k = .02, h = !1, f = !1, c = !1, l = !1, g = .5, e = d3.dispatch("chartClick", "elementClick", "elementDblClick", "elementMouseover", "elementMouseout"); return n.dispatch = e, n.options = nv.utils.optionsFunc.bind(n), n.margin = function (i) { return arguments.length ? (t.top = typeof i.top != "undefined" ? i.top : t.top, t.right = typeof i.right != "undefined" ? i.right : t.right, t.bottom = typeof i.bottom != "undefined" ? i.bottom : t.bottom, t.left = typeof i.left != "undefined" ? i.left : t.left, n) : t }, n.width = function (t) { return arguments.length ? (a = t, n) : a }, n.height = function (t) { return arguments.length ? (v = t, n) : v }, n.values = function () { return nv.log("pie.values() is no longer supported."), n }, n.x = function (t) { return arguments.length ? (u = t, n) : u }, n.y = function (t) { return arguments.length ? (i = d3.functor(t), n) : i }, n.description = function (t) { return arguments.length ? (nt = t, n) : nt }, n.showLabels = function (t) { return arguments.length ? (p = t, n) : p }, n.labelSunbeamLayout = function (t) { return arguments.length ? (f = t, n) : f }, n.donutLabelsOutside = function (t) { return arguments.length ? (b = t, n) : b }, n.pieLabelsOutside = function (t) { return arguments.length ? (w = t, n) : w }, n.labelType = function (t) { return arguments.length ? (o = t, o = o || "key", n) : o }, n.donut = function (t) { return arguments.length ? (h = t, n) : h }, n.donutRatio = function (t) { return arguments.length ? (g = t, n) : g }, n.startAngle = function (t) { return arguments.length ? (c = t, n) : c }, n.endAngle = function (t) { return arguments.length ? (l = t, n) : l }, n.id = function (t) { return arguments.length ? (r = t, n) : r }, n.color = function (t) { return arguments.length ? (s = nv.utils.getColor(t), n) : s }, n.valueFormat = function (t) { return arguments.length ? (tt = t, n) : tt }, n.labelFormat = function (t) { return arguments.length ? (y = t, n) : y }, n.labelThreshold = function (t) { return arguments.length ? (k = t, n) : k }, n };
//# sourceMappingURL=pie.min.js.map