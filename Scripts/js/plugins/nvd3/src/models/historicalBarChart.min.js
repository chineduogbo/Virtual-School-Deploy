nv.models.historicalBarChart = function () { "use strict"; function n(b) { return b.each(function (it) { var rt = d3.select(this), at = this, ft = (v || parseInt(rt.style("width")) || 960) - t.left - t.right, et = (c || parseInt(rt.style("height")) || 400) - t.top - t.bottom, ot, ct, lt; if (n.update = function () { rt.transition().duration(g).call(n) }, n.container = this, i.disabled = it.map(function (n) { return !!n.disabled }), !o) { o = {}; for (ot in i) o[ot] = i[ot] instanceof Array ? i[ot].slice(0) : i[ot] } if (it && it.length && it.filter(function (n) { return n.values.length }).length) rt.selectAll(".nv-noData").remove(); else return ct = rt.selectAll(".nv-noData").data([d]), ct.enter().append("text").attr("class", "nvd3 nv-noData").attr("dy", "-.7em").style("text-anchor", "middle"), ct.attr("x", t.left + ft / 2).attr("y", t.top + et / 2).text(function (n) { return n }), n; nt = r.xScale(); k = r.yScale(); var st = rt.selectAll("g.nv-wrap.nv-historicalBarChart").data([it]), ht = st.enter().append("g").attr("class", "nvd3 nv-wrap nv-historicalBarChart").append("g"), ut = st.select("g"); ht.append("g").attr("class", "nv-x nv-axis"); ht.append("g").attr("class", "nv-y nv-axis"); ht.append("g").attr("class", "nv-barsWrap"); ht.append("g").attr("class", "nv-legendWrap"); y && (u.width(ft), ut.select(".nv-legendWrap").datum(it).call(u), t.top != u.height() && (t.top = u.height(), et = (c || parseInt(rt.style("height")) || 400) - t.top - t.bottom), st.select(".nv-legendWrap").attr("transform", "translate(0," + -t.top + ")")); st.attr("transform", "translate(" + t.left + "," + t.top + ")"); l && ut.select(".nv-y.nv-axis").attr("transform", "translate(" + ft + ",0)"); r.width(ft).height(et).color(it.map(function (n, t) { return n.color || h(n, t) }).filter(function (n, t) { return !it[t].disabled })); lt = ut.select(".nv-barsWrap").datum(it.filter(function (n) { return !n.disabled })); lt.transition().call(r); p && (s.scale(nt).tickSize(-et, 0), ut.select(".nv-x.nv-axis").attr("transform", "translate(0," + k.range()[0] + ")"), ut.select(".nv-x.nv-axis").transition().call(s)); w && (e.scale(k).ticks(et / 36).tickSize(-ft, 0), ut.select(".nv-y.nv-axis").transition().call(e)); u.dispatch.on("legendClick", function (t) { t.disabled = !t.disabled; it.filter(function (n) { return !n.disabled }).length || it.map(function (n) { return n.disabled = !1, st.selectAll(".nv-series").classed("disabled", !1), n }); i.disabled = it.map(function (n) { return !!n.disabled }); f.stateChange(i); b.transition().call(n) }); u.dispatch.on("legendDblclick", function (t) { it.forEach(function (n) { n.disabled = !0 }); t.disabled = !1; i.disabled = it.map(function (n) { return !!n.disabled }); f.stateChange(i); n.update() }); f.on("tooltipShow", function (n) { a && tt(n, at.parentNode) }); f.on("changeState", function (t) { typeof t.disabled != "undefined" && (it.forEach(function (n, i) { n.disabled = t.disabled[i] }), i.disabled = t.disabled); n.update() }) }), n } var r = nv.models.historicalBar(), s = nv.models.axis(), e = nv.models.axis(), u = nv.models.legend(), t = { top: 30, right: 90, bottom: 50, left: 90 }, h = nv.utils.defaultColor(), v = null, c = null, y = !1, p = !0, w = !0, l = !1, a = !0, b = function (n, t, i) { return "<h3>" + n + "<\/h3><p>" + i + " at " + t + "<\/p>" }, nt, k, i = {}, o = null, d = "No Data Available.", f = d3.dispatch("tooltipShow", "tooltipHide", "stateChange", "changeState"), g = 250, tt; s.orient("bottom").tickPadding(7); e.orient(l ? "right" : "left"); tt = function (t, i) { var f, u, o; i && (f = d3.select(i).select("svg"), u = f.node() ? f.attr("viewBox") : null, u && (u = u.split(" "), o = parseInt(f.style("width")) / u[2], t.pos[0] = t.pos[0] * o, t.pos[1] = t.pos[1] * o)); var h = t.pos[0] + (i.offsetLeft || 0), c = t.pos[1] + (i.offsetTop || 0), l = s.tickFormat()(r.x()(t.point, t.pointIndex)), a = e.tickFormat()(r.y()(t.point, t.pointIndex)), v = b(t.series.key, l, a, t, n); nv.tooltip.show([h, c], v, null, null, i) }; r.dispatch.on("elementMouseover.tooltip", function (n) { n.pos = [n.pos[0] + t.left, n.pos[1] + t.top]; f.tooltipShow(n) }); r.dispatch.on("elementMouseout.tooltip", function (n) { f.tooltipHide(n) }); f.on("tooltipHide", function () { a && nv.tooltip.cleanup() }); return n.dispatch = f, n.bars = r, n.legend = u, n.xAxis = s, n.yAxis = e, d3.rebind(n, r, "defined", "isArea", "x", "y", "size", "xScale", "yScale", "xDomain", "yDomain", "xRange", "yRange", "forceX", "forceY", "interactive", "clipEdge", "clipVoronoi", "id", "interpolate", "highlightPoint", "clearHighlights", "interactive"), n.options = nv.utils.optionsFunc.bind(n), n.margin = function (i) { return arguments.length ? (t.top = typeof i.top != "undefined" ? i.top : t.top, t.right = typeof i.right != "undefined" ? i.right : t.right, t.bottom = typeof i.bottom != "undefined" ? i.bottom : t.bottom, t.left = typeof i.left != "undefined" ? i.left : t.left, n) : t }, n.width = function (t) { return arguments.length ? (v = t, n) : v }, n.height = function (t) { return arguments.length ? (c = t, n) : c }, n.color = function (t) { return arguments.length ? (h = nv.utils.getColor(t), u.color(h), n) : h }, n.showLegend = function (t) { return arguments.length ? (y = t, n) : y }, n.showXAxis = function (t) { return arguments.length ? (p = t, n) : p }, n.showYAxis = function (t) { return arguments.length ? (w = t, n) : w }, n.rightAlignYAxis = function (t) { return arguments.length ? (l = t, e.orient(t ? "right" : "left"), n) : l }, n.tooltips = function (t) { return arguments.length ? (a = t, n) : a }, n.tooltipContent = function (t) { return arguments.length ? (b = t, n) : b }, n.state = function (t) { return arguments.length ? (i = t, n) : i }, n.defaultState = function (t) { return arguments.length ? (o = t, n) : o }, n.noData = function (t) { return arguments.length ? (d = t, n) : d }, n.transitionDuration = function (t) { return arguments.length ? (g = t, n) : g }, n };
//# sourceMappingURL=historicalBarChart.min.js.map