nv.models.discreteBar = function () { "use strict"; function n(g) { return g.each(function (n) { var ft = a - u.left - u.right, ut = v - u.top - u.bottom, et = d3.select(this), it, nt, g, rt; n.forEach(function (n, t) { n.values.forEach(function (n) { n.series = t }) }); it = c && e ? [] : n.map(function (n) { return n.values.map(function (n, t) { return { x: f(n, t), y: r(n, t), y0: n.y0 } }) }); i.domain(c || d3.merge(it).map(function (n) { return n.x })).rangeBands(w || [0, ft], .1); t.domain(e || d3.extent(d3.merge(it).map(function (n) { return n.y }).concat(y))); h ? t.range(l || [ut - (t.domain()[0] < 0 ? 12 : 0), t.domain()[1] > 0 ? 12 : 0]) : t.range(l || [ut, 0]); k = k || i; d = d || t.copy().range([t(0), t(0)]); var tt = et.selectAll("g.nv-wrap.nv-discretebar").data([n]), ot = tt.enter().append("g").attr("class", "nvd3 nv-wrap nv-discretebar"), st = ot.append("g"), ht = tt.select("g"); st.append("g").attr("class", "nv-groups"); tt.attr("transform", "translate(" + u.left + "," + u.top + ")"); nt = tt.select(".nv-groups").selectAll(".nv-group").data(function (n) { return n }, function (n) { return n.key }); nt.enter().append("g").style("stroke-opacity", 1e-6).style("fill-opacity", 1e-6); nt.exit().transition().style("stroke-opacity", 1e-6).style("fill-opacity", 1e-6).remove(); nt.attr("class", function (n, t) { return "nv-group nv-series-" + t }).classed("hover", function (n) { return n.hover }); nt.transition().style("stroke-opacity", 1).style("fill-opacity", .75); g = nt.selectAll("g.nv-bar").data(function (n) { return n.values }); g.exit().remove(); rt = g.enter().append("g").attr("transform", function (n, r) { return "translate(" + (i(f(n, r)) + i.rangeBand() * .05) + ", " + t(0) + ")" }).on("mouseover", function (u, e) { d3.select(this).classed("hover", !0); o.elementMouseover({ value: r(u, e), point: u, series: n[u.series], pos: [i(f(u, e)) + i.rangeBand() * (u.series + .5) / n.length, t(r(u, e))], pointIndex: e, seriesIndex: u.series, e: d3.event }) }).on("mouseout", function (t, i) { d3.select(this).classed("hover", !1); o.elementMouseout({ value: r(t, i), point: t, series: n[t.series], pointIndex: i, seriesIndex: t.series, e: d3.event }) }).on("click", function (u, e) { o.elementClick({ value: r(u, e), point: u, series: n[u.series], pos: [i(f(u, e)) + i.rangeBand() * (u.series + .5) / n.length, t(r(u, e))], pointIndex: e, seriesIndex: u.series, e: d3.event }); d3.event.stopPropagation() }).on("dblclick", function (u, e) { o.elementDblClick({ value: r(u, e), point: u, series: n[u.series], pos: [i(f(u, e)) + i.rangeBand() * (u.series + .5) / n.length, t(r(u, e))], pointIndex: e, seriesIndex: u.series, e: d3.event }); d3.event.stopPropagation() }); rt.append("rect").attr("height", 0).attr("width", i.rangeBand() * .9 / n.length); h ? (rt.append("text").attr("text-anchor", "middle"), g.select("text").text(function (n, t) { return p(r(n, t)) }).transition().attr("x", i.rangeBand() * .9 / 2).attr("y", function (n, i) { return r(n, i) < 0 ? t(r(n, i)) - t(0) + 12 : -4 })) : g.selectAll("text").remove(); g.attr("class", function (n, t) { return r(n, t) < 0 ? "nv-bar negative" : "nv-bar positive" }).style("fill", function (n, t) { return n.color || s(n, t) }).style("stroke", function (n, t) { return n.color || s(n, t) }).select("rect").attr("class", b).transition().attr("width", i.rangeBand() * .9 / n.length); g.transition().attr("transform", function (n, u) { var e = i(f(n, u)) + i.rangeBand() * .05, o = r(n, u) < 0 ? t(0) : t(0) - t(r(n, u)) < 1 ? t(0) - 1 : t(r(n, u)); return "translate(" + e + ", " + o + ")" }).select("rect").attr("height", function (n, i) { return Math.max(Math.abs(t(r(n, i)) - t(e && e[0] || 0)) || 1) }); k = i.copy(); d = t.copy() }), n } var u = { top: 0, right: 0, bottom: 0, left: 0 }, a = 960, v = 500, g = Math.floor(Math.random() * 1e4), i = d3.scale.ordinal(), t = d3.scale.linear(), f = function (n) { return n.x }, r = function (n) { return n.y }, y = [0], s = nv.utils.defaultColor(), h = !1, p = d3.format(",.2f"), c, e, w, l, o = d3.dispatch("chartClick", "elementClick", "elementDblClick", "elementMouseover", "elementMouseout"), b = "discreteBar", k, d; return n.dispatch = o, n.options = nv.utils.optionsFunc.bind(n), n.x = function (t) { return arguments.length ? (f = t, n) : f }, n.y = function (t) { return arguments.length ? (r = t, n) : r }, n.margin = function (t) { return arguments.length ? (u.top = typeof t.top != "undefined" ? t.top : u.top, u.right = typeof t.right != "undefined" ? t.right : u.right, u.bottom = typeof t.bottom != "undefined" ? t.bottom : u.bottom, u.left = typeof t.left != "undefined" ? t.left : u.left, n) : u }, n.width = function (t) { return arguments.length ? (a = t, n) : a }, n.height = function (t) { return arguments.length ? (v = t, n) : v }, n.xScale = function (t) { return arguments.length ? (i = t, n) : i }, n.yScale = function (i) { return arguments.length ? (t = i, n) : t }, n.xDomain = function (t) { return arguments.length ? (c = t, n) : c }, n.yDomain = function (t) { return arguments.length ? (e = t, n) : e }, n.xRange = function (t) { return arguments.length ? (w = t, n) : w }, n.yRange = function (t) { return arguments.length ? (l = t, n) : l }, n.forceY = function (t) { return arguments.length ? (y = t, n) : y }, n.color = function (t) { return arguments.length ? (s = nv.utils.getColor(t), n) : s }, n.id = function (t) { return arguments.length ? (g = t, n) : g }, n.showValues = function (t) { return arguments.length ? (h = t, n) : h }, n.valueFormat = function (t) { return arguments.length ? (p = t, n) : p }, n.rectClass = function (t) { return arguments.length ? (b = t, n) : b }, n };
//# sourceMappingURL=discreteBar.min.js.map