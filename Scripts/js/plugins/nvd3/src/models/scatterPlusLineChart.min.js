nv.models.scatterPlusLineChart = function () { "use strict"; function n(tt) { return tt.each(function (tt) { function fi() { if (y) return it.select(".nv-point-paths").style("pointer-events", "all"), !1; it.select(".nv-point-paths").style("pointer-events", "none"); var n = d3.mouse(this); r.distortion(a).focus(n[0]); u.distortion(a).focus(n[1]); it.select(".nv-scatterWrap").datum(tt.filter(function (n) { return !n.disabled })).call(i); d && it.select(".nv-x.nv-axis").call(o); g && it.select(".nv-y.nv-axis").call(f); it.select(".nv-distributionX").datum(tt.filter(function (n) { return !n.disabled })).call(l); it.select(".nv-distributionY").datum(tt.filter(function (n) { return !n.disabled })).call(h) } var kt = d3.select(this), ii = this, rt = (ut || parseInt(kt.style("width")) || 960) - t.left - t.right, wt = (k || parseInt(kt.style("height")) || 400) - t.top - t.bottom, dt, gt, ni, ti, ui; if (n.update = function () { kt.transition().duration(ct).call(n) }, n.container = this, e.disabled = tt.map(function (n) { return !!n.disabled }), !p) { p = {}; for (dt in e) p[dt] = e[dt] instanceof Array ? e[dt].slice(0) : e[dt] } if (tt && tt.length && tt.filter(function (n) { return n.values.length }).length) kt.selectAll(".nv-noData").remove(); else return gt = kt.selectAll(".nv-noData").data([ht]), gt.enter().append("text").attr("class", "nvd3 nv-noData").attr("dy", "-.7em").style("text-anchor", "middle"), gt.attr("x", t.left + rt / 2).attr("y", t.top + wt / 2).text(function (n) { return n }), n; r = i.xScale(); u = i.yScale(); lt = lt || r; at = at || u; var bt = kt.selectAll("g.nv-wrap.nv-scatterChart").data([tt]), ri = bt.enter().append("g").attr("class", "nvd3 nv-wrap nv-scatterChart nv-chart-" + i.id()), pt = ri.append("g"), it = bt.select("g"); if (pt.append("rect").attr("class", "nvd3 nv-background").style("pointer-events", "none"), pt.append("g").attr("class", "nv-x nv-axis"), pt.append("g").attr("class", "nv-y nv-axis"), pt.append("g").attr("class", "nv-scatterWrap"), pt.append("g").attr("class", "nv-regressionLinesWrap"), pt.append("g").attr("class", "nv-distWrap"), pt.append("g").attr("class", "nv-legendWrap"), pt.append("g").attr("class", "nv-controlsWrap"), bt.attr("transform", "translate(" + t.left + "," + t.top + ")"), b && it.select(".nv-y.nv-axis").attr("transform", "translate(" + rt + ",0)"), ot && (c.width(rt / 2), bt.select(".nv-legendWrap").datum(tt).call(c), t.top != c.height() && (t.top = c.height(), wt = (k || parseInt(kt.style("height")) || 400) - t.top - t.bottom), bt.select(".nv-legendWrap").attr("transform", "translate(" + rt / 2 + "," + -t.top + ")")), st && (w.width(180).color(["#444"]), it.select(".nv-controlsWrap").datum(yt).attr("transform", "translate(0," + -t.top + ")").call(w)), i.width(rt).height(wt).color(tt.map(function (n, t) { return n.color || s(n, t) }).filter(function (n, t) { return !tt[t].disabled })), bt.select(".nv-scatterWrap").datum(tt.filter(function (n) { return !n.disabled })).call(i), bt.select(".nv-regressionLinesWrap").attr("clip-path", "url(#nv-edge-clip-" + i.id() + ")"), ni = bt.select(".nv-regressionLinesWrap").selectAll(".nv-regLines").data(function (n) { return n }), ni.enter().append("g").attr("class", "nv-regLines"), ti = ni.selectAll(".nv-regLine").data(function (n) { return [n] }), ui = ti.enter().append("line").attr("class", "nv-regLine").style("stroke-opacity", 0), ti.transition().attr("x1", r.range()[0]).attr("x2", r.range()[1]).attr("y1", function (n) { return u(r.domain()[0] * n.slope + n.intercept) }).attr("y2", function (n) { return u(r.domain()[1] * n.slope + n.intercept) }).style("stroke", function (n, t, i) { return s(n, i) }).style("stroke-opacity", function (n) { return n.disabled || typeof n.slope == "undefined" || typeof n.intercept == "undefined" ? 0 : 1 }), d && (o.scale(r).ticks(o.ticks() ? o.ticks() : rt / 100).tickSize(-wt, 0), it.select(".nv-x.nv-axis").attr("transform", "translate(0," + u.range()[0] + ")").call(o)), g && (f.scale(u).ticks(f.ticks() ? f.ticks() : wt / 36).tickSize(-rt, 0), it.select(".nv-y.nv-axis").call(f)), ft && (l.getData(i.x()).scale(r).width(rt).color(tt.map(function (n, t) { return n.color || s(n, t) }).filter(function (n, t) { return !tt[t].disabled })), pt.select(".nv-distWrap").append("g").attr("class", "nv-distributionX"), it.select(".nv-distributionX").attr("transform", "translate(0," + u.range()[0] + ")").datum(tt.filter(function (n) { return !n.disabled })).call(l)), et && (h.getData(i.y()).scale(u).width(wt).color(tt.map(function (n, t) { return n.color || s(n, t) }).filter(function (n, t) { return !tt[t].disabled })), pt.select(".nv-distWrap").append("g").attr("class", "nv-distributionY"), it.select(".nv-distributionY").attr("transform", "translate(" + (b ? rt : -h.size()) + ",0)").datum(tt.filter(function (n) { return !n.disabled })).call(h)), d3.fisheye) { it.select(".nv-background").attr("width", rt).attr("height", wt); it.select(".nv-background").on("mousemove", fi); it.select(".nv-background").on("click", function () { y = !y }); i.dispatch.on("elementClick.freezeFisheye", function () { y = !y }) } w.dispatch.on("legendClick", function (t) { t.disabled = !t.disabled; a = t.disabled ? 0 : 2.5; it.select(".nv-background").style("pointer-events", t.disabled ? "none" : "all"); it.select(".nv-point-paths").style("pointer-events", t.disabled ? "all" : "none"); t.disabled ? (r.distortion(a).focus(0), u.distortion(a).focus(0), it.select(".nv-scatterWrap").call(i), it.select(".nv-x.nv-axis").call(o), it.select(".nv-y.nv-axis").call(f)) : y = !1; n.update() }); c.dispatch.on("stateChange", function (t) { e = t; v.stateChange(e); n.update() }); i.dispatch.on("elementMouseover.tooltip", function (n) { d3.select(".nv-chart-" + i.id() + " .nv-series-" + n.seriesIndex + " .nv-distx-" + n.pointIndex).attr("y1", n.pos[1] - wt); d3.select(".nv-chart-" + i.id() + " .nv-series-" + n.seriesIndex + " .nv-disty-" + n.pointIndex).attr("x2", n.pos[0] + l.size()); n.pos = [n.pos[0] + t.left, n.pos[1] + t.top]; v.tooltipShow(n) }); v.on("tooltipShow", function (n) { nt && vt(n, ii.parentNode) }); v.on("changeState", function (t) { typeof t.disabled != "undefined" && (tt.forEach(function (n, i) { n.disabled = t.disabled[i] }), e.disabled = t.disabled); n.update() }); lt = r.copy(); at = u.copy() }), n } var i = nv.models.scatter(), o = nv.models.axis(), f = nv.models.axis(), c = nv.models.legend(), w = nv.models.legend(), l = nv.models.distribution(), h = nv.models.distribution(), t = { top: 30, right: 20, bottom: 50, left: 75 }, ut = null, k = null, s = nv.utils.defaultColor(), r = d3.fisheye ? d3.fisheye.scale(d3.scale.linear).distortion(0) : i.xScale(), u = d3.fisheye ? d3.fisheye.scale(d3.scale.linear).distortion(0) : i.yScale(), ft = !1, et = !1, ot = !0, d = !0, g = !0, b = !1, st = !!d3.fisheye, a = 0, y = !1, nt = !0, tt = function (n, t) { return "<strong>" + t + "<\/strong>" }, it = function (n, t, i) { return "<strong>" + i + "<\/strong>" }, rt = function (n, t, i, r) { return "<h3>" + n + "<\/h3><p>" + r + "<\/p>" }, e = {}, p = null, v = d3.dispatch("tooltipShow", "tooltipHide", "stateChange", "changeState"), ht = "No Data Available.", ct = 250, lt, at, vt, yt; i.xScale(r).yScale(u); o.orient("bottom").tickPadding(10); f.orient(b ? "right" : "left").tickPadding(10); l.axis("x"); h.axis("y"); w.updateState(!1); vt = function (e, s) { var l = e.pos[0] + (s.offsetLeft || 0), a = e.pos[1] + (s.offsetTop || 0), v = e.pos[0] + (s.offsetLeft || 0), y = u.range()[0] + t.top + (s.offsetTop || 0), p = r.range()[0] + t.left + (s.offsetLeft || 0), w = e.pos[1] + (s.offsetTop || 0), h = o.tickFormat()(i.x()(e.point, e.pointIndex)), c = f.tickFormat()(i.y()(e.point, e.pointIndex)); tt != null && nv.tooltip.show([v, y], tt(e.series.key, h, c, e, n), "n", 1, s, "x-nvtooltip"); it != null && nv.tooltip.show([p, w], it(e.series.key, h, c, e, n), "e", 1, s, "y-nvtooltip"); rt != null && nv.tooltip.show([l, a], rt(e.series.key, h, c, e.point.tooltip, e, n), e.value < 0 ? "n" : "s", null, s) }; yt = [{ key: "Magnify", disabled: !0 }]; i.dispatch.on("elementMouseout.tooltip", function (n) { v.tooltipHide(n); d3.select(".nv-chart-" + i.id() + " .nv-series-" + n.seriesIndex + " .nv-distx-" + n.pointIndex).attr("y1", 0); d3.select(".nv-chart-" + i.id() + " .nv-series-" + n.seriesIndex + " .nv-disty-" + n.pointIndex).attr("x2", h.size()) }); v.on("tooltipHide", function () { nt && nv.tooltip.cleanup() }); return n.dispatch = v, n.scatter = i, n.legend = c, n.controls = w, n.xAxis = o, n.yAxis = f, n.distX = l, n.distY = h, d3.rebind(n, i, "id", "interactive", "pointActive", "x", "y", "shape", "size", "xScale", "yScale", "zScale", "xDomain", "yDomain", "xRange", "yRange", "sizeDomain", "sizeRange", "forceX", "forceY", "forceSize", "clipVoronoi", "clipRadius", "useVoronoi"), n.options = nv.utils.optionsFunc.bind(n), n.margin = function (i) { return arguments.length ? (t.top = typeof i.top != "undefined" ? i.top : t.top, t.right = typeof i.right != "undefined" ? i.right : t.right, t.bottom = typeof i.bottom != "undefined" ? i.bottom : t.bottom, t.left = typeof i.left != "undefined" ? i.left : t.left, n) : t }, n.width = function (t) { return arguments.length ? (ut = t, n) : ut }, n.height = function (t) { return arguments.length ? (k = t, n) : k }, n.color = function (t) { return arguments.length ? (s = nv.utils.getColor(t), c.color(s), l.color(s), h.color(s), n) : s }, n.showDistX = function (t) { return arguments.length ? (ft = t, n) : ft }, n.showDistY = function (t) { return arguments.length ? (et = t, n) : et }, n.showControls = function (t) { return arguments.length ? (st = t, n) : st }, n.showLegend = function (t) { return arguments.length ? (ot = t, n) : ot }, n.showXAxis = function (t) { return arguments.length ? (d = t, n) : d }, n.showYAxis = function (t) { return arguments.length ? (g = t, n) : g }, n.rightAlignYAxis = function (t) { return arguments.length ? (b = t, f.orient(t ? "right" : "left"), n) : b }, n.fisheye = function (t) { return arguments.length ? (a = t, n) : a }, n.tooltips = function (t) { return arguments.length ? (nt = t, n) : nt }, n.tooltipContent = function (t) { return arguments.length ? (rt = t, n) : rt }, n.tooltipXContent = function (t) { return arguments.length ? (tt = t, n) : tt }, n.tooltipYContent = function (t) { return arguments.length ? (it = t, n) : it }, n.state = function (t) { return arguments.length ? (e = t, n) : e }, n.defaultState = function (t) { return arguments.length ? (p = t, n) : p }, n.noData = function (t) { return arguments.length ? (ht = t, n) : ht }, n.transitionDuration = function (t) { return arguments.length ? (ct = t, n) : ct }, n };
//# sourceMappingURL=scatterPlusLineChart.min.js.map