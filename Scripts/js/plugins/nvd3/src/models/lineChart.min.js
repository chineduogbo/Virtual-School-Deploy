nv.models.lineChart = function () { "use strict"; function n(d) { return d.each(function (d) { var ut = d3.select(this), at = this, ft = (y || parseInt(ut.style("width")) || 960) - t.left - t.right, et = (a || parseInt(ut.style("height")) || 400) - t.top - t.bottom, ht, lt, vt; if (n.update = function () { ut.transition().duration(it).call(n) }, n.container = this, r.disabled = d.map(function (n) { return !!n.disabled }), !h) { h = {}; for (ht in r) h[ht] = r[ht] instanceof Array ? r[ht].slice(0) : r[ht] } if (d && d.length && d.filter(function (n) { return n.values.length }).length) ut.selectAll(".nv-noData").remove(); else return lt = ut.selectAll(".nv-noData").data([tt]), lt.enter().append("text").attr("class", "nvd3 nv-noData").attr("dy", "-.7em").style("text-anchor", "middle"), lt.attr("x", t.left + ft / 2).attr("y", t.top + et / 2).text(function (n) { return n }), n; g = i.xScale(); nt = i.yScale(); var ct = ut.selectAll("g.nv-wrap.nv-lineChart").data([d]), st = ct.enter().append("g").attr("class", "nvd3 nv-wrap nv-lineChart").append("g"), ot = ct.select("g"); st.append("rect").style("opacity", 0); st.append("g").attr("class", "nv-x nv-axis"); st.append("g").attr("class", "nv-y nv-axis"); st.append("g").attr("class", "nv-linesWrap"); st.append("g").attr("class", "nv-legendWrap"); st.append("g").attr("class", "nv-interactive"); ot.select("rect").attr("width", ft).attr("height", et > 0 ? et : 0); p && (e.width(ft), ot.select(".nv-legendWrap").datum(d).call(e), t.top != e.height() && (t.top = e.height(), et = (a || parseInt(ut.style("height")) || 400) - t.top - t.bottom), ct.select(".nv-legendWrap").attr("transform", "translate(0," + -t.top + ")")); ct.attr("transform", "translate(" + t.left + "," + t.top + ")"); v && ot.select(".nv-y.nv-axis").attr("transform", "translate(" + ft + ",0)"); k && (o.width(ft).height(et).margin({ left: t.left, top: t.top }).svgContainer(ut).xScale(g), ct.select(".nv-interactive").call(o)); i.width(ft).height(et).color(d.map(function (n, t) { return n.color || c(n, t) }).filter(function (n, t) { return !d[t].disabled })); vt = ot.select(".nv-linesWrap").datum(d.filter(function (n) { return !n.disabled })); vt.transition().call(i); w && (s.scale(g).ticks(ft / 100).tickSize(-et, 0), ot.select(".nv-x.nv-axis").attr("transform", "translate(0," + nt.range()[0] + ")"), ot.select(".nv-x.nv-axis").transition().call(s)); b && (f.scale(nt).ticks(et / 36).tickSize(-ft, 0), ot.select(".nv-y.nv-axis").transition().call(f)); e.dispatch.on("stateChange", function (t) { r = t; u.stateChange(r); n.update() }); o.dispatch.on("elementMousemove", function (r) { var a, u, h, e, y; if (i.clearHighlights(), e = [], d.filter(function (n, t) { return n.seriesIndex = t, !n.disabled }).forEach(function (t, f) { u = nv.interactiveBisect(t.values, r.pointXValue, n.x()); i.highlightPoint(f, u, !0); var o = t.values[u]; typeof o != "undefined" && (typeof a == "undefined" && (a = o), typeof h == "undefined" && (h = n.xScale()(n.x()(o, u))), e.push({ key: t.key, value: n.y()(o, u), color: c(t, t.seriesIndex) })) }), e.length > 2) { var p = n.yScale().invert(r.mouseY), w = Math.abs(n.yScale().domain()[0] - n.yScale().domain()[1]), b = .03 * w, v = nv.nearestValueIndex(e.map(function (n) { return n.value }), p, b); v !== null && (e[v].highlight = !0) } y = s.tickFormat()(n.x()(a, u)); o.tooltip.position({ left: h + t.left, top: r.mouseY + t.top }).chartContainer(at.parentNode).enabled(l).valueFormatter(function (n) { return f.tickFormat()(n) }).data({ value: y, series: e })(); o.renderGuideLine(h) }); o.dispatch.on("elementMouseout", function () { u.tooltipHide(); i.clearHighlights() }); u.on("tooltipShow", function (n) { l && rt(n, at.parentNode) }); u.on("changeState", function (t) { typeof t.disabled != "undefined" && d.length === t.disabled.length && (d.forEach(function (n, i) { n.disabled = t.disabled[i] }), r.disabled = t.disabled); n.update() }) }), n } var i = nv.models.line(), s = nv.models.axis(), f = nv.models.axis(), e = nv.models.legend(), o = nv.interactiveGuideline(), t = { top: 30, right: 20, bottom: 50, left: 60 }, c = nv.utils.defaultColor(), y = null, a = null, p = !0, w = !0, b = !0, v = !1, k = !1, l = !0, d = function (n, t, i) { return "<h3>" + n + "<\/h3><p>" + i + " at " + t + "<\/p>" }, g, nt, r = {}, h = null, tt = "No Data Available.", u = d3.dispatch("tooltipShow", "tooltipHide", "stateChange", "changeState"), it = 250, rt; s.orient("bottom").tickPadding(7); f.orient(v ? "right" : "left"); rt = function (t, r) { var u = t.pos[0] + (r.offsetLeft || 0), e = t.pos[1] + (r.offsetTop || 0), o = s.tickFormat()(i.x()(t.point, t.pointIndex)), h = f.tickFormat()(i.y()(t.point, t.pointIndex)), c = d(t.series.key, o, h, t, n); nv.tooltip.show([u, e], c, null, null, r) }; i.dispatch.on("elementMouseover.tooltip", function (n) { n.pos = [n.pos[0] + t.left, n.pos[1] + t.top]; u.tooltipShow(n) }); i.dispatch.on("elementMouseout.tooltip", function (n) { u.tooltipHide(n) }); u.on("tooltipHide", function () { l && nv.tooltip.cleanup() }); return n.dispatch = u, n.lines = i, n.legend = e, n.xAxis = s, n.yAxis = f, n.interactiveLayer = o, d3.rebind(n, i, "defined", "isArea", "x", "y", "size", "xScale", "yScale", "xDomain", "yDomain", "xRange", "yRange", "forceX", "forceY", "interactive", "clipEdge", "clipVoronoi", "useVoronoi", "id", "interpolate"), n.options = nv.utils.optionsFunc.bind(n), n.margin = function (i) { return arguments.length ? (t.top = typeof i.top != "undefined" ? i.top : t.top, t.right = typeof i.right != "undefined" ? i.right : t.right, t.bottom = typeof i.bottom != "undefined" ? i.bottom : t.bottom, t.left = typeof i.left != "undefined" ? i.left : t.left, n) : t }, n.width = function (t) { return arguments.length ? (y = t, n) : y }, n.height = function (t) { return arguments.length ? (a = t, n) : a }, n.color = function (t) { return arguments.length ? (c = nv.utils.getColor(t), e.color(c), n) : c }, n.showLegend = function (t) { return arguments.length ? (p = t, n) : p }, n.showXAxis = function (t) { return arguments.length ? (w = t, n) : w }, n.showYAxis = function (t) { return arguments.length ? (b = t, n) : b }, n.rightAlignYAxis = function (t) { return arguments.length ? (v = t, f.orient(t ? "right" : "left"), n) : v }, n.useInteractiveGuideline = function (t) { return arguments.length ? (k = t, t === !0 && (n.interactive(!1), n.useVoronoi(!1)), n) : k }, n.tooltips = function (t) { return arguments.length ? (l = t, n) : l }, n.tooltipContent = function (t) { return arguments.length ? (d = t, n) : d }, n.state = function (t) { return arguments.length ? (r = t, n) : r }, n.defaultState = function (t) { return arguments.length ? (h = t, n) : h }, n.noData = function (t) { return arguments.length ? (tt = t, n) : tt }, n.transitionDuration = function (t) { return arguments.length ? (it = t, n) : it }, n };
//# sourceMappingURL=lineChart.min.js.map