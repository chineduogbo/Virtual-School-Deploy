nv.models.chartName = function () { "use strict"; function t(u) { return u.each(function (t) { var s = i - n.left - n.right, h = r - n.top - n.bottom, f = d3.select(this), u = f.selectAll("g.nv-wrap.nv-chartName").data([t]), e = u.enter().append("g").attr("class", "nvd3 nv-wrap nv-chartName"), o = e.append("g"), c = u.select("g"); o.append("g").attr("class", "nv-mainWrap"); u.attr("transform", "translate(" + n.left + "," + n.top + ")") }), t } var n = { top: 30, right: 10, bottom: 10, left: 10 }, i = 960, r = 500, u = nv.utils.getColor(d3.scale.category20c().range()), f = d3.dispatch("stateChange", "changeState"); return t.dispatch = f, t.options = nv.utils.optionsFunc.bind(t), t.margin = function (i) { return arguments.length ? (n.top = typeof i.top != "undefined" ? i.top : n.top, n.right = typeof i.right != "undefined" ? i.right : n.right, n.bottom = typeof i.bottom != "undefined" ? i.bottom : n.bottom, n.left = typeof i.left != "undefined" ? i.left : n.left, t) : n }, t.width = function (n) { return arguments.length ? (i = n, t) : i }, t.height = function (n) { return arguments.length ? (r = n, t) : r }, t.color = function (n) { return arguments.length ? (u = nv.utils.getColor(n), t) : u }, t };
//# sourceMappingURL=boilerplate.min.js.map