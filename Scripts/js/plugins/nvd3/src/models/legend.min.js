nv.models.legend = function () { "use strict"; function t(l) { return l.each(function (t) { var et = r - n.left - n.right, ot = d3.select(this), nt = ot.selectAll("g.nv-legend").data([t]), st = nt.enter().append("g").attr("class", "nvd3 nv-legend").append("g"), d = nt.select("g"), a, tt, v, y, it, b, rt; if (nt.attr("transform", "translate(" + n.left + "," + n.top + ")"), a = d.selectAll(".nv-series").data(function (n) { return n }), tt = a.enter().append("g").attr("class", "nv-series").on("mouseover", function (n, t) { i.legendMouseover(n, t) }).on("mouseout", function (n, t) { i.legendMouseout(n, t) }).on("click", function (n, r) { i.legendClick(n, r); e && (c ? (t.forEach(function (n) { n.disabled = !0 }), n.disabled = !1) : (n.disabled = !n.disabled, t.every(function (n) { return n.disabled }) && t.forEach(function (n) { n.disabled = !1 })), i.stateChange({ disabled: t.map(function (n) { return !!n.disabled }) })) }).on("dblclick", function (n, r) { i.legendDblclick(n, r); e && (t.forEach(function (n) { n.disabled = !0 }), n.disabled = !1, i.stateChange({ disabled: t.map(function (n) { return !!n.disabled }) })) }), tt.append("circle").style("stroke-width", 2).attr("class", "nv-legend-symbol").attr("r", 5), tt.append("text").attr("text-anchor", "start").attr("class", "nv-legend-text").attr("dy", ".32em").attr("dx", "8"), a.classed("disabled", function (n) { return n.disabled }), a.exit().remove(), a.select("circle").style("fill", function (n, t) { return n.color || f(n, t) }).style("stroke", function (n, t) { return n.color || f(n, t) }), a.select("text").text(o), s) { v = []; a.each(function () { var t = d3.select(this).select("text"), n; try { if (n = t.node().getComputedTextLength(), n <= 0) throw Error(); } catch (i) { n = nv.utils.calcApproxTextWidth(t) } v.push(n + 28) }); for (var l = 0, w = 0, p = []; w < et && l < v.length;) p[l] = v[l], w += v[l++]; for (l === 0 && (l = 1) ; w > et && l > 1;) { for (p = [], l--, y = 0; y < v.length; y++) v[y] > (p[y % l] || 0) && (p[y % l] = v[y]); w = p.reduce(function (n, t) { return n + t }) } for (it = [], b = 0, rt = 0; b < l; b++) it[b] = rt, rt += p[b]; a.attr("transform", function (n, t) { return "translate(" + it[t % l] + "," + (5 + Math.floor(t / l) * 20) + ")" }); h ? d.attr("transform", "translate(" + (r - n.right - w) + "," + n.top + ")") : d.attr("transform", "translate(0," + n.top + ")"); u = n.top + n.bottom + Math.ceil(v.length / l) * 20 } else { var ut = 5, k = 5, ft = 0, g; a.attr("transform", function () { var t = d3.select(this).select("text").node().getComputedTextLength() + 28; return g = k, r < n.left + n.right + g + t && (k = g = 5, ut += 20), k += t, k > ft && (ft = k), "translate(" + g + "," + ut + ")" }); d.attr("transform", "translate(" + (r - n.right - ft) + "," + n.top + ")"); u = n.top + n.bottom + ut + 15 } }), t } var n = { top: 5, right: 0, bottom: 5, left: 0 }, r = 400, u = 20, o = function (n) { return n.key }, f = nv.utils.defaultColor(), s = !0, h = !0, e = !0, c = !1, i = d3.dispatch("legendClick", "legendDblclick", "legendMouseover", "legendMouseout", "stateChange"); return t.dispatch = i, t.options = nv.utils.optionsFunc.bind(t), t.margin = function (i) { return arguments.length ? (n.top = typeof i.top != "undefined" ? i.top : n.top, n.right = typeof i.right != "undefined" ? i.right : n.right, n.bottom = typeof i.bottom != "undefined" ? i.bottom : n.bottom, n.left = typeof i.left != "undefined" ? i.left : n.left, t) : n }, t.width = function (n) { return arguments.length ? (r = n, t) : r }, t.height = function (n) { return arguments.length ? (u = n, t) : u }, t.key = function (n) { return arguments.length ? (o = n, t) : o }, t.color = function (n) { return arguments.length ? (f = nv.utils.getColor(n), t) : f }, t.align = function (n) { return arguments.length ? (s = n, t) : s }, t.rightAlign = function (n) { return arguments.length ? (h = n, t) : h }, t.updateState = function (n) { return arguments.length ? (e = n, t) : e }, t.radioButtonMode = function (n) { return arguments.length ? (c = n, t) : c }, t };
//# sourceMappingURL=legend.min.js.map