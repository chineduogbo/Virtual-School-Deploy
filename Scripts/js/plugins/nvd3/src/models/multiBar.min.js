nv.models.multiBar = function () { "use strict"; function n(ft) { return ft.each(function (n) { var ht = b - f.left - f.right, ct = k - f.top - f.bottom, at = d3.select(this), st, et, ft, wt; o && n.length && (o = [{ values: n[0].values.map(function (n) { return { x: n.x, y: 0, series: n.series, size: .01 } }) }]); r && (n = d3.layout.stack().offset(nt).values(function (n) { return n.values }).y(u)(!n.length && o ? o : n)); n.forEach(function (n, t) { n.values.forEach(function (n) { n.series = t }) }); r && n[0].values.map(function (t, i) { var r = 0, u = 0; n.map(function (n) { var t = n.values[i]; t.size = Math.abs(t.y); t.y < 0 ? (t.y1 = u, u = u - t.size) : (t.y1 = t.size + r, r = r + t.size) }) }); st = p && w ? [] : n.map(function (n) { return n.values.map(function (n, t) { return { x: e(n, t), y: u(n, t), y0: n.y0, y1: n.y1 } }) }); t.domain(p || d3.merge(st).map(function (n) { return n.x })).rangeBands(tt || [0, ht], rt); i.domain(w || d3.extent(d3.merge(st).map(function (n) { return r ? n.y > 0 ? n.y1 : n.y1 + n.y : n.y }).concat(d))).range(it || [ct, 0]); t.domain()[0] === t.domain()[1] && (t.domain()[0] ? t.domain([t.domain()[0] - t.domain()[0] * .01, t.domain()[1] + t.domain()[1] * .01]) : t.domain([-1, 1])); i.domain()[0] === i.domain()[1] && (i.domain()[0] ? i.domain([i.domain()[0] + i.domain()[0] * .01, i.domain()[1] - i.domain()[1] * .01]) : i.domain([-1, 1])); ut = ut || t; c = c || i; var ot = at.selectAll("g.nv-wrap.nv-multibar").data([n]), lt = ot.enter().append("g").attr("class", "nvd3 nv-wrap nv-multibar"), vt = lt.append("defs"), yt = lt.append("g"), pt = ot.select("g"); yt.append("g").attr("class", "nv-groups"); ot.attr("transform", "translate(" + f.left + "," + f.top + ")"); vt.append("clipPath").attr("id", "nv-edge-clip-" + l).append("rect"); ot.select("#nv-edge-clip-" + l + " rect").attr("width", ht).attr("height", ct); pt.attr("clip-path", g ? "url(#nv-edge-clip-" + l + ")" : ""); et = ot.select(".nv-groups").selectAll(".nv-group").data(function (n) { return n }, function (n, t) { return t }); et.enter().append("g").style("stroke-opacity", 1e-6).style("fill-opacity", 1e-6); et.exit().transition().selectAll("rect.nv-bar").delay(function (t, i) { return i * v / n[0].values.length }).attr("y", function (n) { return r ? c(n.y0) : c(0) }).attr("height", 0).remove(); et.attr("class", function (n, t) { return "nv-group nv-series-" + t }).classed("hover", function (n) { return n.hover }).style("fill", function (n, t) { return h(n, t) }).style("stroke", function (n, t) { return h(n, t) }); et.transition().style("stroke-opacity", 1).style("fill-opacity", .75); ft = et.selectAll("rect.nv-bar").data(function (t) { return o && !n.length ? o.values : t.values }); ft.exit().remove(); wt = ft.enter().append("rect").attr("class", function (n, t) { return u(n, t) < 0 ? "nv-bar negative" : "nv-bar positive" }).attr("x", function (i, u, f) { return r ? 0 : f * t.rangeBand() / n.length }).attr("y", function (n) { return c(r ? n.y0 : 0) }).attr("height", 0).attr("width", t.rangeBand() / (r ? 1 : n.length)).attr("transform", function (n, i) { return "translate(" + t(e(n, i)) + ",0)" }); ft.style("fill", function (n, t, i) { return h(n, i, t) }).style("stroke", function (n, t, i) { return h(n, i, t) }).on("mouseover", function (f, o) { d3.select(this).classed("hover", !0); y.elementMouseover({ value: u(f, o), point: f, series: n[f.series], pos: [t(e(f, o)) + t.rangeBand() * (r ? n.length / 2 : f.series + .5) / n.length, i(u(f, o) + (r ? f.y0 : 0))], pointIndex: o, seriesIndex: f.series, e: d3.event }) }).on("mouseout", function (t, i) { d3.select(this).classed("hover", !1); y.elementMouseout({ value: u(t, i), point: t, series: n[t.series], pointIndex: i, seriesIndex: t.series, e: d3.event }) }).on("click", function (f, o) { y.elementClick({ value: u(f, o), point: f, series: n[f.series], pos: [t(e(f, o)) + t.rangeBand() * (r ? n.length / 2 : f.series + .5) / n.length, i(u(f, o) + (r ? f.y0 : 0))], pointIndex: o, seriesIndex: f.series, e: d3.event }); d3.event.stopPropagation() }).on("dblclick", function (f, o) { y.elementDblClick({ value: u(f, o), point: f, series: n[f.series], pos: [t(e(f, o)) + t.rangeBand() * (r ? n.length / 2 : f.series + .5) / n.length, i(u(f, o) + (r ? f.y0 : 0))], pointIndex: o, seriesIndex: f.series, e: d3.event }); d3.event.stopPropagation() }); ft.attr("class", function (n, t) { return u(n, t) < 0 ? "nv-bar negative" : "nv-bar positive" }).transition().attr("transform", function (n, i) { return "translate(" + t(e(n, i)) + ",0)" }); a && (s || (s = n.map(function () { return !0 })), ft.style("fill", function (n, t, i) { return d3.rgb(a(n, t)).darker(s.map(function (n, t) { return t }).filter(function (n, t) { return !s[t] })[i]).toString() }).style("stroke", function (n, t, i) { return d3.rgb(a(n, t)).darker(s.map(function (n, t) { return t }).filter(function (n, t) { return !s[t] })[i]).toString() })); r ? ft.transition().delay(function (t, i) { return i * v / n[0].values.length }).attr("y", function (n) { return i(r ? n.y1 : 0) }).attr("height", function (n) { return Math.max(Math.abs(i(n.y + (r ? n.y0 : 0)) - i(r ? n.y0 : 0)), 1) }).attr("x", function (i) { return r ? 0 : i.series * t.rangeBand() / n.length }).attr("width", t.rangeBand() / (r ? 1 : n.length)) : ft.transition().delay(function (t, i) { return i * v / n[0].values.length }).attr("x", function (i) { return i.series * t.rangeBand() / n.length }).attr("width", t.rangeBand() / n.length).attr("y", function (n, t) { return u(n, t) < 0 ? i(0) : i(0) - i(u(n, t)) < 1 ? i(0) - 1 : i(u(n, t)) || 0 }).attr("height", function (n, t) { return Math.max(Math.abs(i(u(n, t)) - i(0)), 1) || 0 }); ut = t.copy(); c = i.copy() }), n } var f = { top: 0, right: 0, bottom: 0, left: 0 }, b = 960, k = 500, t = d3.scale.ordinal(), i = d3.scale.linear(), l = Math.floor(Math.random() * 1e4), e = function (n) { return n.x }, u = function (n) { return n.y }, d = [0], g = !0, r = !1, nt = "zero", h = nv.utils.defaultColor(), o = !1, a = null, s, v = 1200, p, w, tt, it, rt = .1, y = d3.dispatch("chartClick", "elementClick", "elementDblClick", "elementMouseover", "elementMouseout"), ut, c; return n.dispatch = y, n.options = nv.utils.optionsFunc.bind(n), n.x = function (t) { return arguments.length ? (e = t, n) : e }, n.y = function (t) { return arguments.length ? (u = t, n) : u }, n.margin = function (t) { return arguments.length ? (f.top = typeof t.top != "undefined" ? t.top : f.top, f.right = typeof t.right != "undefined" ? t.right : f.right, f.bottom = typeof t.bottom != "undefined" ? t.bottom : f.bottom, f.left = typeof t.left != "undefined" ? t.left : f.left, n) : f }, n.width = function (t) { return arguments.length ? (b = t, n) : b }, n.height = function (t) { return arguments.length ? (k = t, n) : k }, n.xScale = function (i) { return arguments.length ? (t = i, n) : t }, n.yScale = function (t) { return arguments.length ? (i = t, n) : i }, n.xDomain = function (t) { return arguments.length ? (p = t, n) : p }, n.yDomain = function (t) { return arguments.length ? (w = t, n) : w }, n.xRange = function (t) { return arguments.length ? (tt = t, n) : tt }, n.yRange = function (t) { return arguments.length ? (it = t, n) : it }, n.forceY = function (t) { return arguments.length ? (d = t, n) : d }, n.stacked = function (t) { return arguments.length ? (r = t, n) : r }, n.stackOffset = function (t) { return arguments.length ? (nt = t, n) : nt }, n.clipEdge = function (t) { return arguments.length ? (g = t, n) : g }, n.color = function (t) { return arguments.length ? (h = nv.utils.getColor(t), n) : h }, n.barColor = function (t) { return arguments.length ? (a = nv.utils.getColor(t), n) : a }, n.disabled = function (t) { return arguments.length ? (s = t, n) : s }, n.id = function (t) { return arguments.length ? (l = t, n) : l }, n.hideable = function (t) { return arguments.length ? (o = t, n) : o }, n.delay = function (t) { return arguments.length ? (v = t, n) : v }, n.groupSpacing = function (t) { return arguments.length ? (rt = t, n) : rt }, n };
//# sourceMappingURL=multiBar.min.js.map