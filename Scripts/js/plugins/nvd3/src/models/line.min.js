nv.models.line = function () { "use strict"; function n(w) { return w.each(function (n) { var tt = v - i.left - i.right, k = y - i.top - i.bottom, ut = d3.select(this), d, w, g, nt; c = t.xScale(); r = t.yScale(); l = l || c; s = s || r; var b = ut.selectAll("g.nv-wrap.nv-line").data([n]), it = b.enter().append("g").attr("class", "nvd3 nv-wrap nv-line"), ft = it.append("defs"), rt = it.append("g"), et = b.select("g"); rt.append("g").attr("class", "nv-groups"); rt.append("g").attr("class", "nv-scatterWrap"); b.attr("transform", "translate(" + i.left + "," + i.top + ")"); t.width(tt).height(k); d = b.select(".nv-scatterWrap"); d.transition().call(t); ft.append("clipPath").attr("id", "nv-edge-clip-" + t.id()).append("rect"); b.select("#nv-edge-clip-" + t.id() + " rect").attr("width", tt).attr("height", k > 0 ? k : 0); et.attr("clip-path", a ? "url(#nv-edge-clip-" + t.id() + ")" : ""); d.attr("clip-path", a ? "url(#nv-edge-clip-" + t.id() + ")" : ""); w = b.select(".nv-groups").selectAll(".nv-group").data(function (n) { return n }, function (n) { return n.key }); w.enter().append("g").style("stroke-opacity", 1e-6).style("fill-opacity", 1e-6); w.exit().remove(); w.attr("class", function (n, t) { return "nv-group nv-series-" + t }).classed("hover", function (n) { return n.hover }).style("fill", function (n, t) { return h(n, t) }).style("stroke", function (n, t) { return h(n, t) }); w.transition().style("stroke-opacity", 1).style("fill-opacity", .5); g = w.selectAll("path.nv-area").data(function (n) { return p(n) ? [n] : [] }); g.enter().append("path").attr("class", "nv-area").attr("d", function (n) { return d3.svg.area().interpolate(o).defined(e).x(function (n, t) { return nv.utils.NaNtoZero(l(f(n, t))) }).y0(function (n, t) { return nv.utils.NaNtoZero(s(u(n, t))) }).y1(function () { return s(r.domain()[0] <= 0 ? r.domain()[1] >= 0 ? 0 : r.domain()[1] : r.domain()[0]) }).apply(this, [n.values]) }); w.exit().selectAll("path.nv-area").remove(); g.transition().attr("d", function (n) { return d3.svg.area().interpolate(o).defined(e).x(function (n, t) { return nv.utils.NaNtoZero(c(f(n, t))) }).y0(function (n, t) { return nv.utils.NaNtoZero(r(u(n, t))) }).y1(function () { return r(r.domain()[0] <= 0 ? r.domain()[1] >= 0 ? 0 : r.domain()[1] : r.domain()[0]) }).apply(this, [n.values]) }); nt = w.selectAll("path.nv-line").data(function (n) { return [n.values] }); nt.enter().append("path").attr("class", "nv-line").attr("d", d3.svg.line().interpolate(o).defined(e).x(function (n, t) { return nv.utils.NaNtoZero(l(f(n, t))) }).y(function (n, t) { return nv.utils.NaNtoZero(s(u(n, t))) })); nt.transition().attr("d", d3.svg.line().interpolate(o).defined(e).x(function (n, t) { return nv.utils.NaNtoZero(c(f(n, t))) }).y(function (n, t) { return nv.utils.NaNtoZero(r(u(n, t))) })); l = c.copy(); s = r.copy() }), n } var t = nv.models.scatter(), i = { top: 0, right: 0, bottom: 0, left: 0 }, v = 960, y = 500, h = nv.utils.defaultColor(), f = function (n) { return n.x }, u = function (n) { return n.y }, e = function (n, t) { return !isNaN(u(n, t)) && u(n, t) !== null }, p = function (n) { return n.area }, a = !1, c, r, o = "linear", l, s; return t.size(16).sizeDomain([16, 256]), n.dispatch = t.dispatch, n.scatter = t, d3.rebind(n, t, "id", "interactive", "size", "xScale", "yScale", "zScale", "xDomain", "yDomain", "xRange", "yRange", "sizeDomain", "forceX", "forceY", "forceSize", "clipVoronoi", "useVoronoi", "clipRadius", "padData", "highlightPoint", "clearHighlights"), n.options = nv.utils.optionsFunc.bind(n), n.margin = function (t) { return arguments.length ? (i.top = typeof t.top != "undefined" ? t.top : i.top, i.right = typeof t.right != "undefined" ? t.right : i.right, i.bottom = typeof t.bottom != "undefined" ? t.bottom : i.bottom, i.left = typeof t.left != "undefined" ? t.left : i.left, n) : i }, n.width = function (t) { return arguments.length ? (v = t, n) : v }, n.height = function (t) { return arguments.length ? (y = t, n) : y }, n.x = function (i) { return arguments.length ? (f = i, t.x(i), n) : f }, n.y = function (i) { return arguments.length ? (u = i, t.y(i), n) : u }, n.clipEdge = function (t) { return arguments.length ? (a = t, n) : a }, n.color = function (i) { return arguments.length ? (h = nv.utils.getColor(i), t.color(h), n) : h }, n.interpolate = function (t) { return arguments.length ? (o = t, n) : o }, n.defined = function (t) { return arguments.length ? (e = t, n) : e }, n.isArea = function (t) { return arguments.length ? (p = d3.functor(t), n) : p }, n };
//# sourceMappingURL=line.min.js.map