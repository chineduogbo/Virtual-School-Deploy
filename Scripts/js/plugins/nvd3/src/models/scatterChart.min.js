nv.models.scatterChart = function () { "use strict"; function n(ut) { return ut.each(function (ut) { function oi() { if (w) return ft.select(".nv-point-paths").style("pointer-events", "all"), !1; ft.select(".nv-point-paths").style("pointer-events", "none"); var n = d3.mouse(this); u.distortion(y).focus(n[0]); r.distortion(y).focus(n[1]); ft.select(".nv-scatterWrap").call(i); nt && ft.select(".nv-x.nv-axis").call(e); tt && ft.select(".nv-y.nv-axis").call(f); ft.select(".nv-distributionX").datum(ut.filter(function (n) { return !n.disabled })).call(l); ft.select(".nv-distributionY").datum(ut.filter(function (n) { return !n.disabled })).call(s) } var dt = d3.select(this), fi = this, et = (ot || parseInt(dt.style("width")) || 960) - t.left - t.right, kt = (g || parseInt(dt.style("height")) || 400) - t.top - t.bottom, ni, ti, ii, ri, ui; if (n.update = function () { dt.transition().duration(at).call(n) }, n.container = this, o.disabled = ut.map(function (n) { return !!n.disabled }), !b) { b = {}; for (ni in o) b[ni] = o[ni] instanceof Array ? o[ni].slice(0) : o[ni] } if (ut && ut.length && ut.filter(function (n) { return n.values.length }).length) dt.selectAll(".nv-noData").remove(); else return ti = dt.selectAll(".nv-noData").data([lt]), ti.enter().append("text").attr("class", "nvd3 nv-noData").attr("dy", "-.7em").style("text-anchor", "middle"), ti.attr("x", t.left + et / 2).attr("y", t.top + kt / 2).text(function (n) { return n }), n; vt = vt || u; yt = yt || r; var gt = dt.selectAll("g.nv-wrap.nv-scatterChart").data([ut]), ei = gt.enter().append("g").attr("class", "nvd3 nv-wrap nv-scatterChart nv-chart-" + i.id()), bt = ei.append("g"), ft = gt.select("g"); if (bt.append("rect").attr("class", "nvd3 nv-background"), bt.append("g").attr("class", "nv-x nv-axis"), bt.append("g").attr("class", "nv-y nv-axis"), bt.append("g").attr("class", "nv-scatterWrap"), bt.append("g").attr("class", "nv-distWrap"), bt.append("g").attr("class", "nv-legendWrap"), bt.append("g").attr("class", "nv-controlsWrap"), ct && (ii = it ? et / 2 : et, c.width(ii), gt.select(".nv-legendWrap").datum(ut).call(c), t.top != c.height() && (t.top = c.height(), kt = (g || parseInt(dt.style("height")) || 400) - t.top - t.bottom), gt.select(".nv-legendWrap").attr("transform", "translate(" + (et - ii) + "," + -t.top + ")")), it && (k.width(180).color(["#444"]), ft.select(".nv-controlsWrap").datum(wt).attr("transform", "translate(0," + -t.top + ")").call(k)), gt.attr("transform", "translate(" + t.left + "," + t.top + ")"), d && ft.select(".nv-y.nv-axis").attr("transform", "translate(" + et + ",0)"), i.width(et).height(kt).color(ut.map(function (n, t) { return n.color || h(n, t) }).filter(function (n, t) { return !ut[t].disabled })), a !== 0 && i.xDomain(null), v !== 0 && i.yDomain(null), gt.select(".nv-scatterWrap").datum(ut.filter(function (n) { return !n.disabled })).call(i), a !== 0 && (ri = u.domain()[1] - u.domain()[0], i.xDomain([u.domain()[0] - a * ri, u.domain()[1] + a * ri])), v !== 0 && (ui = r.domain()[1] - r.domain()[0], i.yDomain([r.domain()[0] - v * ui, r.domain()[1] + v * ui])), (v !== 0 || a !== 0) && gt.select(".nv-scatterWrap").datum(ut.filter(function (n) { return !n.disabled })).call(i), nt && (e.scale(u).ticks(e.ticks() && e.ticks().length ? e.ticks() : et / 100).tickSize(-kt, 0), ft.select(".nv-x.nv-axis").attr("transform", "translate(0," + r.range()[0] + ")").call(e)), tt && (f.scale(r).ticks(f.ticks() && f.ticks().length ? f.ticks() : kt / 36).tickSize(-et, 0), ft.select(".nv-y.nv-axis").call(f)), st && (l.getData(i.x()).scale(u).width(et).color(ut.map(function (n, t) { return n.color || h(n, t) }).filter(function (n, t) { return !ut[t].disabled })), bt.select(".nv-distWrap").append("g").attr("class", "nv-distributionX"), ft.select(".nv-distributionX").attr("transform", "translate(0," + r.range()[0] + ")").datum(ut.filter(function (n) { return !n.disabled })).call(l)), ht && (s.getData(i.y()).scale(r).width(kt).color(ut.map(function (n, t) { return n.color || h(n, t) }).filter(function (n, t) { return !ut[t].disabled })), bt.select(".nv-distWrap").append("g").attr("class", "nv-distributionY"), ft.select(".nv-distributionY").attr("transform", "translate(" + (d ? et : -s.size()) + ",0)").datum(ut.filter(function (n) { return !n.disabled })).call(s)), d3.fisheye) { ft.select(".nv-background").attr("width", et).attr("height", kt); ft.select(".nv-background").on("mousemove", oi); ft.select(".nv-background").on("click", function () { w = !w }); i.dispatch.on("elementClick.freezeFisheye", function () { w = !w }) } k.dispatch.on("legendClick", function (t) { t.disabled = !t.disabled; y = t.disabled ? 0 : 2.5; ft.select(".nv-background").style("pointer-events", t.disabled ? "none" : "all"); ft.select(".nv-point-paths").style("pointer-events", t.disabled ? "all" : "none"); t.disabled ? (u.distortion(y).focus(0), r.distortion(y).focus(0), ft.select(".nv-scatterWrap").call(i), ft.select(".nv-x.nv-axis").call(e), ft.select(".nv-y.nv-axis").call(f)) : w = !1; n.update() }); c.dispatch.on("stateChange", function (t) { o.disabled = t.disabled; p.stateChange(o); n.update() }); i.dispatch.on("elementMouseover.tooltip", function (n) { d3.select(".nv-chart-" + i.id() + " .nv-series-" + n.seriesIndex + " .nv-distx-" + n.pointIndex).attr("y1", function () { return n.pos[1] - kt }); d3.select(".nv-chart-" + i.id() + " .nv-series-" + n.seriesIndex + " .nv-disty-" + n.pointIndex).attr("x2", n.pos[0] + l.size()); n.pos = [n.pos[0] + t.left, n.pos[1] + t.top]; p.tooltipShow(n) }); p.on("tooltipShow", function (n) { rt && pt(n, fi.parentNode) }); p.on("changeState", function (t) { typeof t.disabled != "undefined" && (ut.forEach(function (n, i) { n.disabled = t.disabled[i] }), o.disabled = t.disabled); n.update() }); vt = u.copy(); yt = r.copy() }), n } var i = nv.models.scatter(), e = nv.models.axis(), f = nv.models.axis(), c = nv.models.legend(), k = nv.models.legend(), l = nv.models.distribution(), s = nv.models.distribution(), t = { top: 30, right: 20, bottom: 50, left: 75 }, ot = null, g = null, h = nv.utils.defaultColor(), u = d3.fisheye ? d3.fisheye.scale(d3.scale.linear).distortion(0) : i.xScale(), r = d3.fisheye ? d3.fisheye.scale(d3.scale.linear).distortion(0) : i.yScale(), a = 0, v = 0, st = !1, ht = !1, ct = !0, nt = !0, tt = !0, d = !1, it = !!d3.fisheye, y = 0, w = !1, rt = !0, ut = function (n, t) { return "<strong>" + t + "<\/strong>" }, ft = function (n, t, i) { return "<strong>" + i + "<\/strong>" }, et = null, o = {}, b = null, p = d3.dispatch("tooltipShow", "tooltipHide", "stateChange", "changeState"), lt = "No Data Available.", at = 250, vt, yt, pt, wt; i.xScale(u).yScale(r); e.orient("bottom").tickPadding(10); f.orient(d ? "right" : "left").tickPadding(10); l.axis("x"); s.axis("y"); k.updateState(!1); pt = function (o, s) { var l = o.pos[0] + (s.offsetLeft || 0), a = o.pos[1] + (s.offsetTop || 0), v = o.pos[0] + (s.offsetLeft || 0), y = r.range()[0] + t.top + (s.offsetTop || 0), p = u.range()[0] + t.left + (s.offsetLeft || 0), w = o.pos[1] + (s.offsetTop || 0), h = e.tickFormat()(i.x()(o.point, o.pointIndex)), c = f.tickFormat()(i.y()(o.point, o.pointIndex)); ut != null && nv.tooltip.show([v, y], ut(o.series.key, h, c, o, n), "n", 1, s, "x-nvtooltip"); ft != null && nv.tooltip.show([p, w], ft(o.series.key, h, c, o, n), "e", 1, s, "y-nvtooltip"); et != null && nv.tooltip.show([l, a], et(o.series.key, h, c, o, n), o.value < 0 ? "n" : "s", null, s) }; wt = [{ key: "Magnify", disabled: !0 }]; i.dispatch.on("elementMouseout.tooltip", function (n) { p.tooltipHide(n); d3.select(".nv-chart-" + i.id() + " .nv-series-" + n.seriesIndex + " .nv-distx-" + n.pointIndex).attr("y1", 0); d3.select(".nv-chart-" + i.id() + " .nv-series-" + n.seriesIndex + " .nv-disty-" + n.pointIndex).attr("x2", s.size()) }); p.on("tooltipHide", function () { rt && nv.tooltip.cleanup() }); return n.dispatch = p, n.scatter = i, n.legend = c, n.controls = k, n.xAxis = e, n.yAxis = f, n.distX = l, n.distY = s, d3.rebind(n, i, "id", "interactive", "pointActive", "x", "y", "shape", "size", "xScale", "yScale", "zScale", "xDomain", "yDomain", "xRange", "yRange", "sizeDomain", "sizeRange", "forceX", "forceY", "forceSize", "clipVoronoi", "clipRadius", "useVoronoi"), n.options = nv.utils.optionsFunc.bind(n), n.margin = function (i) { return arguments.length ? (t.top = typeof i.top != "undefined" ? i.top : t.top, t.right = typeof i.right != "undefined" ? i.right : t.right, t.bottom = typeof i.bottom != "undefined" ? i.bottom : t.bottom, t.left = typeof i.left != "undefined" ? i.left : t.left, n) : t }, n.width = function (t) { return arguments.length ? (ot = t, n) : ot }, n.height = function (t) { return arguments.length ? (g = t, n) : g }, n.color = function (t) { return arguments.length ? (h = nv.utils.getColor(t), c.color(h), l.color(h), s.color(h), n) : h }, n.showDistX = function (t) { return arguments.length ? (st = t, n) : st }, n.showDistY = function (t) { return arguments.length ? (ht = t, n) : ht }, n.showControls = function (t) { return arguments.length ? (it = t, n) : it }, n.showLegend = function (t) { return arguments.length ? (ct = t, n) : ct }, n.showXAxis = function (t) { return arguments.length ? (nt = t, n) : nt }, n.showYAxis = function (t) { return arguments.length ? (tt = t, n) : tt }, n.rightAlignYAxis = function (t) { return arguments.length ? (d = t, f.orient(t ? "right" : "left"), n) : d }, n.fisheye = function (t) { return arguments.length ? (y = t, n) : y }, n.xPadding = function (t) { return arguments.length ? (a = t, n) : a }, n.yPadding = function (t) { return arguments.length ? (v = t, n) : v }, n.tooltips = function (t) { return arguments.length ? (rt = t, n) : rt }, n.tooltipContent = function (t) { return arguments.length ? (et = t, n) : et }, n.tooltipXContent = function (t) { return arguments.length ? (ut = t, n) : ut }, n.tooltipYContent = function (t) { return arguments.length ? (ft = t, n) : ft }, n.state = function (t) { return arguments.length ? (o = t, n) : o }, n.defaultState = function (t) { return arguments.length ? (b = t, n) : b }, n.noData = function (t) { return arguments.length ? (lt = t, n) : lt }, n.transitionDuration = function (t) { return arguments.length ? (at = t, n) : at }, n };
//# sourceMappingURL=scatterChart.min.js.map