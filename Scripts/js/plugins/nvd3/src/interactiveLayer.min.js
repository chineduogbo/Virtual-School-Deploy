nv.interactiveGuideline = function () { "use strict"; function n(c) { c.each(function (c) { function l() { var o = d3.mouse(this), r = o[0], u = o[1], c = !0, l = !1, f; if (h && (r = d3.event.offsetX, u = d3.event.offsetY, d3.event.target.tagName !== "svg" && (c = !1), d3.event.target.className.baseVal.match("nv-legend") && (l = !0)), c && (r -= t.left, u -= t.top), r < 0 || u < 0 || r > p || u > a || d3.event.relatedTarget && d3.event.relatedTarget.ownerSVGElement === undefined || l) { if (h && d3.event.relatedTarget && d3.event.relatedTarget.ownerSVGElement === undefined && d3.event.relatedTarget.className.match(s.nvPointerEventsClass)) return; i.elementMouseout({ mouseX: r, mouseY: u }); n.renderGuideLine(null); return } f = e.invert(r); i.elementMousemove({ mouseX: r, mouseY: u, pointXValue: f }); d3.event.type === "dblclick" && i.elementDblclick({ mouseX: r, mouseY: u, pointXValue: f }) } var y = d3.select(this), p = u || 960, a = f || 400, v = y.selectAll("g.nv-wrap.nv-interactiveLineLayer").data([c]), w = v.enter().append("g").attr("class", " nv-wrap nv-interactiveLineLayer"); if (w.append("g").attr("class", "nv-interactiveGuideLine"), r) { r.on("mousemove", l, !0).on("mouseout", l, !0).on("dblclick", l); n.renderGuideLine = function (n) { if (o) { var t = v.select(".nv-interactiveGuideLine").selectAll("line").data(n != null ? [nv.utils.NaNtoZero(n)] : [], String); t.enter().append("line").attr("class", "nv-guideline").attr("x1", function (n) { return n }).attr("x2", function (n) { return n }).attr("y1", a).attr("y2", 0); t.exit().remove() } } } }) } var s = nv.models.tooltip(), u = null, f = null, t = { left: 0, top: 0 }, e = d3.scale.linear(), c = d3.scale.linear(), i = d3.dispatch("elementMousemove", "elementMouseout", "elementDblclick"), o = !0, r = null, h = navigator.userAgent.indexOf("MSIE") !== -1; return n.dispatch = i, n.tooltip = s, n.margin = function (i) { return arguments.length ? (t.top = typeof i.top != "undefined" ? i.top : t.top, t.left = typeof i.left != "undefined" ? i.left : t.left, n) : t }, n.width = function (t) { return arguments.length ? (u = t, n) : u }, n.height = function (t) { return arguments.length ? (f = t, n) : f }, n.xScale = function (t) { return arguments.length ? (e = t, n) : e }, n.showGuideLine = function (t) { return arguments.length ? (o = t, n) : o }, n.svgContainer = function (t) { return arguments.length ? (r = t, n) : r }, n }; nv.interactiveBisect = function (n, t, i) { "use strict"; var u, e; if (!n instanceof Array) return null; typeof i != "function" && (i = function (n) { return n.x }); var o = d3.bisector(i).left, r = d3.max([0, o(n, t) - 1]), f = i(n[r], r); return (typeof f == "undefined" && (f = r), f === t) ? r : (u = d3.min([r + 1, n.length - 1]), e = i(n[u], u), typeof e == "undefined" && (e = u), Math.abs(e - t) >= Math.abs(f - t) ? r : u) }; nv.nearestValueIndex = function (n, t, i) { "use strict"; var r = Infinity, u = null; return n.forEach(function (n, f) { var e = Math.abs(t - n); e <= r && e < i && (r = e, u = f) }), u };
//# sourceMappingURL=interactiveLayer.min.js.map