var nvd3Charts = function () { function c(n, t, i) { function r(n) { for (var r, u = 1 / (.1 + Math.random()), f = 2 * Math.random() - .5, e = 10 / (.1 + Math.random()), i = 0; i < t; i++) r = (i / t - f) * e, n[i] += u * Math.exp(-r * r) } return arguments.length < 3 && (i = 0), d3.range(n).map(function () { for (var u = [], n = 0; n < t; n++) u[n] = i + i * Math.random(); for (n = 0; n < 5; n++) r(u); return u.map(l) }) } function l(n, t) { return { x: t, y: Math.max(0, n) } } var n = ["#33414E", "#8DCA35", "#00BFDD", "#FF702A", "#DA3610", "#80CDC2", "#A6D969", "#D9EF8B", "#FFFF99", "#F7EC37", "#F46D43", "#E08215", "#D73026", "#A12235", "#8C510A", "#14514B", "#4D9220", "#542688", "#4575B4", "#74ACD1", "#B8E1DE", "#FEE0B6", "#FDB863", "#C51B7D", "#DE77AE", "#EDD3F2"]; d3.scale.myColors = function () { return d3.scale.ordinal().range(n) }; var t = function () { function n() { for (var t = [], i = [], r = [], n = 0; n < 100; n++) t.push({ x: n, y: Math.sin(n / 10) }), i.push({ x: n, y: Math.sin(n / 10) * .25 + .5 }), r.push({ x: n, y: .5 * Math.cos(n / 10) }); return [{ values: t, key: "Sine Wave" }, { values: r, key: "Cosine Wave" }, { values: i, key: "Another sine wave", area: !0 }] } nv.addGraph(function () { var t = nv.models.lineChart().margin({ left: 100 }).useInteractiveGuideline(!0).transitionDuration(350).showLegend(!0).showYAxis(!0).showXAxis(!0).color(d3.scale.myColors().range()), i; return t.xAxis.axisLabel("Time (ms)").tickFormat(d3.format(",r")), t.yAxis.axisLabel("Voltage (v)").tickFormat(d3.format(".02f")), i = n(), d3.select("#chart-1 svg").datum(i).call(t), nv.utils.windowResize(function () { t.update() }), t }) }, i = function () { function n(n, t) { for (var r, u = [], e = ["circle", "cross", "triangle-up", "triangle-down", "diamond", "square"], f = d3.random.normal(), i = 0; i < n; i++) for (u.push({ key: "Group " + i, values: [] }), r = 0; r < t; r++) u[i].values.push({ x: f(), y: f(), size: Math.random(), shape: Math.random() > .95 ? e[r % 6] : "circle" }); return u } nv.addGraph(function () { var t = nv.models.scatterChart().showDistX(!0).showDistY(!0).transitionDuration(350).color(d3.scale.myColors().range()), i; t.tooltipContent(function (n) { return "<h3>" + n + "<\/h3>" }); t.xAxis.tickFormat(d3.format(".02f")); t.yAxis.tickFormat(d3.format(".02f")); t.scatter.onlyCircles(!1); return i = n(4, 40), d3.select("#chart-2 svg").datum(i).call(t), nv.utils.windowResize(t.update), t }) }, r = function () { d3.json("assets/plugins/nvd3/stackedAreaData.json", function (n) { nv.addGraph(function () { var t = nv.models.stackedAreaChart().margin({ top: 30, right: 10, bottom: 20, left: 25 }).x(function (n) { return n[0] }).y(function (n) { return n[1] }).forceY([0, 8e3]).useInteractiveGuideline(!0).color(d3.scale.myColors().range()); return t.options({ showControls: !1, showLegend: !0 }), t.xAxis.tickFormat(function (n) { return d3.time.format("%x")(new Date(n)) }).showMaxMin(!1), t.yAxis.tickFormat(d3.format(",f")), d3.select("#chart-3 svg").datum(n).call(t), nv.utils.windowResize(t.update), t }) }) }, u = function () { function n() { return [{ key: "Cumulative Return", values: [{ label: "A Label", value: -29.765957771107 }, { label: "B Label", value: 0 }, { label: "C Label", value: 32.807804682612 }, { label: "D Label", value: 196.45946739256 }, { label: "E Label", value: .19434030906893 }, { label: "F Label", value: -98.079782601442 }, { label: "G Label", value: -13.925743130903 }, { label: "H Label", value: -5.1387322875705 }] }] } nv.addGraph(function () { var t = nv.models.discreteBarChart().x(function (n) { return n.label }).y(function (n) { return n.value }).staggerLabels(!0).tooltips(!1).showValues(!0).transitionDuration(350).color(d3.scale.myColors().range()); return d3.select("#chart-4 svg").datum(n()).call(t), nv.utils.windowResize(t.update), t }) }, f = function () { d3.json("assets/plugins/nvd3/multiBarHorizontalData.json", function (n) { nv.addGraph(function () { var t = nv.models.multiBarHorizontalChart().x(function (n) { return n.label }).y(function (n) { return n.value }).margin({ top: 30, right: 20, bottom: 50, left: 175 }).showValues(!0).tooltips(!0).transitionDuration(350).showControls(!0).color(d3.scale.myColors().range()); return t.yAxis.tickFormat(d3.format(",.2f")), d3.select("#chart-5 svg").datum(n).call(t), nv.utils.windowResize(t.update), t }) }) }, e = function () { d3.json("assets/plugins/nvd3/linePlusBarData.json", function (n, t) { nv.addGraph(function () { var n = nv.models.linePlusBarChart().margin({ top: 30, right: 60, bottom: 50, left: 70 }).x(function (n, t) { return t }).y(function (n) { return n[1] }).color(d3.scale.myColors().range()); return n.xAxis.tickFormat(function (n) { var i = t[0].values[n] && t[0].values[n][0] || 0; return d3.time.format("%x")(new Date(i)) }), n.y1Axis.tickFormat(d3.format(",f")), n.y2Axis.tickFormat(function (n) { return "$" + d3.format(",f")(n) }), n.bars.forceY([0]), d3.select("#chart-6 svg").datum(t).transition().duration(0).call(n), nv.utils.windowResize(n.update), n }) }) }, o = function () { d3.json("assets/plugins/nvd3/cumulativeLineData.json", function (n) { nv.addGraph(function () { var t = nv.models.cumulativeLineChart().x(function (n) { return n[0] }).y(function (n) { return n[1] / 100 }).color(d3.scale.myColors().range()).useInteractiveGuideline(!0); return t.xAxis.tickValues([10780308e5, 11227824e5, 11675412e5, 12516912e5]).tickFormat(function (n) { return d3.time.format("%x")(new Date(n)) }), t.yAxis.tickFormat(d3.format(",.1%")), d3.select("#chart-7 svg").datum(n).call(t), nv.utils.windowResize(t.update), t }) }) }, s = function () { function n() { return c(3, 128, .1).map(function (n, t) { return { key: "Stream" + t, values: n } }) } nv.addGraph(function () { var t = nv.models.lineWithFocusChart().color(d3.scale.myColors().range()); return t.xAxis.tickFormat(d3.format(",f")), t.yAxis.tickFormat(d3.format(",.2f")), t.y2Axis.tickFormat(d3.format(",.2f")), d3.select("#chart-8 svg").datum(n()).transition().duration(500).call(t), nv.utils.windowResize(t.update), t }) }, h = function () { function n() { return [{ label: "One", value: 29.765957771107 }, { label: "Two", value: 0 }, { label: "Three", value: 32.807804682612 }, { label: "Four", value: 196.45946739256 }, { label: "Five", value: .19434030906893 }, { label: "Six", value: 98.079782601442 }, { label: "Seven", value: 13.925743130903 }, { label: "Eight", value: 5.1387322875705 }] } nv.addGraph(function () { var t = nv.models.pieChart().x(function (n) { return n.label }).y(function (n) { return n.value }).showLabels(!0).color(d3.scale.myColors().range()); return d3.select("#chart-9 svg").datum(n()).transition().duration(350).call(t), t }); nv.addGraph(function () { var t = nv.models.pieChart().x(function (n) { return n.label }).y(function (n) { return n.value }).showLabels(!0).labelThreshold(.05).labelType("percent").donut(!0).donutRatio(.35).color(d3.scale.myColors().range()); return d3.select("#chart-10 svg").datum(n()).transition().duration(350).call(t), t }) }; return { init: function () { t(); i(); r(); u(); f(); e(); o(); s(); h() } } }(); nvd3Charts.init();
//# sourceMappingURL=demo_charts_nvd3.min.js.map