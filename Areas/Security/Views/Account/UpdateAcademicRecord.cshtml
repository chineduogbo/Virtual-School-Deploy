@model Abundance_Nk.Web.Areas.Applicant.ViewModels.PostJambViewModel
@{
    ViewBag.Title = "rofile Update";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<link href="~/Content/sweetalert.css" rel="stylesheet" />
<script src="~/Scripts/jquery-1.11.1.min.js"></script>
<script src="~/Scripts/sweetalert.min.js"></script>
<script type="text/javascript">

    $(document).ready(function () {


        var selectedProgramme = $("#Programme_Id").val();
        if (selectedProgramme == 1) {
            $("#divJambNo").show();
            $("#divFormSetting").show();
        } else if (selectedProgramme == 4) {
            $("#divJambNo").show();
            $("#divFormSetting").show();
        } else {
            $("#divJambNo").hide();
        }


        $("#Programme_Id").change(function () {

            var programme = $("#Programme_Id").val();
            $("#AppliedCourse_Department_Id").empty();

            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetDepartmentByProgrammeId")', // we are calling json method
                dataType: 'json',
                data: { id: programme },
                success: function (departments) {
                    $("#AppliedCourse_Department_Id").append('<option value="' + 0 + '"> -- Select -- </option>');

                    $.each(departments, function (i, department) {
                        $("#AppliedCourse_Department_Id").append('<option value="' + department.Value + '">' + department.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve departments.' + ex);
                }
            });
        });


        $("#Person_State_Id").change(function () {
                $("#Person_LocalGovernment_Id").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetLocalGovernmentsByState")', //we are calling json method
                    dataType: 'json',
                    data: { id: $("#Person_State_Id").val() },
                    success: function (lgas) {
                        $("#Person_LocalGovernment_Id").append('<option value="' + 0 + '">-- Select --</option>');

                        $.each(lgas, function (i, lga) {
                            $("#Person_LocalGovernment_Id").append('<option value="' + lga.Value + '">' + lga.Text + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Failed to retrieve lgas.' + ex);
                    }
                });

                return false;
        });
        $('#continue').on('click', function () {
            let filledMatricNo = $('#Student_MatricNumber').val();
            if (filledMatricNo == null || filledMatricNo == '')
                return;
            $('#displayMatricNo').val(filledMatricNo);
            
            $('#mymodal').modal('show');
        })
        $('#no').on('click', function () {
            $('#mymodal').modal('hide');
            return;
        })
        $('#save').on('click', function () {
            $('#mymodal').modal('hide');
            $('#submit').click();
        })

    });



</script>
<div>
    @if (TempData["Message"] != null)
    {
        @Html.Partial("_Message", TempData["Message"])
    }
</div>
<div class="container">

    <div class="col-md-12">

       

        <div class="container">
            @using (Html.BeginForm("UpdateAcademicRecord", "Account", FormMethod.Post, new { id = "form" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
                @Html.HiddenFor(model => model.Person.Id)
                @Html.HiddenFor(model => model.Student.Id)
                @Html.HiddenFor(model => model.StudentLevel.Id)
                @Html.HiddenFor(model => model.StudentId)
                <h4 class="text-center font-weight-bold mt-5">Student Biodata Form</h4>
                <div class="card">
                    <div class="col-md-12  mb-2">
                        <hr class="bg-primary m-0">
                    </div>

                    <div class="p-4">
                        <div class="row">
                            <div class="col-md-6 form-group">
                                @Html.LabelFor(model => model.Person.LastName, "Surname", new { @class = "control-label" })
                                @Html.TextBoxFor(model => model.Person.LastName, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Person.LastName, null, new { @class = "text-danger" })
                            </div>

                            <div class="col-md-6 form-group">
                                @Html.LabelFor(model => model.Person.FirstName, "First Name", new { @class = "control-label" })
                                @Html.TextBoxFor(model => model.Person.FirstName, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Person.FirstName, null, new { @class = "text-danger" })
                            </div>

                            <div class="col-md-6 form-group">
                                @Html.LabelFor(model => model.Person.OtherName, "Other Name", new { @class = "control-label" })
                                @Html.TextBoxFor(model => model.Person.OtherName, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Person.OtherName, null, new { @class = "text-danger" })
                            </div>

                            <div class="col-md-6 form-group">
                                @Html.LabelFor(model => model.Person.Email, "Personl Email-Address", new { @class = "control-label" })
                                @Html.TextBoxFor(model => model.Person.Email, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Person.Email, null, new { @class = "text-danger" })
                            </div>

                            <div class="col-md-6 form-group">
                                @Html.LabelFor(model => model.Person.InstitutionalEmail, "Institutional Email-Address", new { @class = "control-label" })
                                @Html.TextBoxFor(model => model.Person.InstitutionalEmail, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Person.InstitutionalEmail, null, new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6 form-group">
                                @Html.LabelFor(model => model.Student.MatricNumber, "Confirm your Matriculation No.", new { @class = "control-label" })
                                @Html.TextBoxFor(model => model.Student.MatricNumber, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Student.MatricNumber, null, new { @class = "text-danger" })
                            </div>

                            <div class="col-md-6 form-group">
                                @Html.LabelFor(model => model.Person.ContactAddress, "Contact Address", new { @class = "control-label" })
                                @Html.TextBoxFor(model => model.Person.ContactAddress, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Person.ContactAddress, null, new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6 form-group">
                                @Html.LabelFor(model => model.Person.Sex.Id, "Sex", new { @class = "control-label " })
                                @Html.DropDownListFor(f => f.Person.Sex.Id, (IEnumerable<SelectListItem>)ViewBag.SexId, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Person.Sex.Id)
                            </div>

                            <div class="col-md-6 form-group">
                                @Html.LabelFor(model => model.Person.MobilePhone, "Mobile Phone No.", new { @class = "control-label" })
                                @Html.TextBoxFor(model => model.Person.MobilePhone, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Person.MobilePhone, null, new { @class = "text-danger" })
                            </div>

                            <div class="col-md-6 form-group">
                                @Html.LabelFor(model => model.Person.State.Id, "State of Origin", new { @class = "control-label " })
                                @Html.DropDownListFor(f => f.Person.State.Id, (IEnumerable<SelectListItem>)ViewBag.StateId, new { @class = "form-control", required = "required" })
                                @Html.ValidationMessageFor(model => model.Person.State.Id)
                            </div>

                            <div class="col-md-6 form-group">
                                @Html.LabelFor(model => model.Person.Religion.Id, new { @class = "control-label " })
                                @Html.DropDownListFor(f => f.Person.Religion.Id, (IEnumerable<SelectListItem>)ViewBag.ReligionId, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Person.Religion.Id)
                            </div>
                            <div class="col-md-6 form-group">
                                @Html.LabelFor(model => model.Person.LocalGovernment.Id, "LGA", new { @class = "control-label " })
                                @Html.DropDownListFor(f => f.Person.LocalGovernment.Id, (IEnumerable<SelectListItem>)ViewBag.LgaId, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Person.LocalGovernment.Id)
                            </div>
                            <div class="col-md-6 form-group">
                                @Html.LabelFor(model => model.StudentLevel.Programme.Id, "Programme", new { @class = "control-label custom-text-white" })
                                @Html.DropDownListFor(model => model.StudentLevel.Programme.Id, (IEnumerable<SelectListItem>)ViewBag.ProgrammeId, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.StudentLevel.Programme.Id, null, new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6 form-group">
                                @Html.LabelFor(model => model.StudentLevel.Department.Id, "Department", new { @class = "control-label " })
                                @Html.DropDownListFor(f => f.StudentLevel.Department.Id, (IEnumerable<SelectListItem>)ViewBag.DepartmentId, new { @class = "form-control", required = "required" })
                                @Html.ValidationMessageFor(model => model.StudentLevel.Department.Id)
                            </div>

                            <div class="col-md-6 form-group">
                                @Html.LabelFor(model => model.StudentLevel.Level.Id, "Level", new { @class = "control-label " })
                                @Html.DropDownListFor(f => f.StudentLevel.Level.Id, (IEnumerable<SelectListItem>)ViewBag.LevelId, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.StudentLevel.Level.Id)
                            </div>



                            <div class="col-md-12 text-right">
                                <button class="btn btn-primary pull-right" type="submit" style="visibility:hidden" id="submit">Submit</button>
                                <button class="btn btn-primary pull-right" type="button" id="continue">Submit</button>
                            </div>

                        </div>
                    </div>
                </div>

            }
        </div>
               
        </div>

    </div>
<div class="modal fade" id="mymodal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
             
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div>
                    <h3>Is this your Matriculation No.?</h3>
                    <input id="displayMatricNo"  class="form-control" readonly/>
                </div>
            </div>
            <div class="modal-footer">
               <button type="button" class="btn btn-secondary" id="no">No</button>
                <button type="button" class="btn btn-primary" id="save">Yes</button>

            </div>
        </div>
    </div>
</div>