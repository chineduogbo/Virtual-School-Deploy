@model Abundance_Nk.Web.Areas.Applicant.ViewModels.TranscriptViewModel
@{
    ViewBag.Title = "TranscriptReport";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}
<script src="~/Scripts/jquery-1.11.1.min.js"></script>
<script src="~/Scripts/jquery-2.1.3.js"></script>
<link href="~/Content/bootstrap.css" rel="stylesheet" />
<script src="~/Content/js/bootstrap.js"></script>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/dataTables.js"></script>
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script src="~/Scripts/DataTables-1.10.15/media/js/jquery.js"></script>



@*<link href="~/Scripts/DataTables-1.10.15/media/css/jquery.dataTables.css" rel="stylesheet" />
<script src="~/Scripts/DataTables-1.10.15/extensions/Buttons/js/dataTables.buttons.js"></script>
<script src="~/Scripts/DataTables-1.10.15/extensions/Buttons/js/buttons.colVis.js"></script>
<script src="~/Scripts/DataTables-1.10.15/extensions/Responsive/js/dataTables.responsive.js"></script>
<script src="~/Scripts/DataTables-1.10.15/buttons.flash.min.js"></script>
<script src="~/Scripts/DataTables-1.10.15/buttons.html5.min.js"></script>
<script src="~/Scripts/DataTables-1.10.15/buttons.print.min.js"></script>
<script src="~/Scripts/DataTables-1.10.15/jszip.min.js"></script>
<script src="~/Scripts/DataTables-1.10.15/pdfmake.min.js"></script>
<script src="~/Scripts/DataTables-1.10.15/vfs_fonts.js"></script>*@

@*<script src="~/Scripts/jquery-2.1.3.js"></script>
<link href="~/Content/bootstrap.css" rel="stylesheet" />
<link href="~/Scripts/DataTables-1.10.15/media/css/jquery.dataTables.css" rel="stylesheet" />
<script src="~/Scripts/DataTables-1.10.15/media/js/jquery.dataTables.js"></script>
<link href="~/Scripts/DataTables-1.10.15/extensions/Buttons/css/buttons.dataTables.css" rel="stylesheet" />
<script src="~/Scripts/DataTables-1.10.15/extensions/Buttons/js/dataTables.buttons.js"></script>
<script src="~/Scripts/DataTables-1.10.15/extensions/Buttons/js/buttons.colVis.js"></script>
<script src="~/Scripts/DataTables-1.10.15/extensions/Responsive/js/dataTables.responsive.js"></script>*@


@*<script src="~/Scripts/DataTables-1.10.15/buttons.flash.min.js"></script>
<script src="~/Scripts/DataTables-1.10.15/buttons.html5.min.js"></script>
<script src="~/Scripts/DataTables-1.10.15/buttons.print.min.js"></script>
<script src="~/Scripts/DataTables-1.10.15/jszip.min.js"></script>
<script src="~/Scripts/DataTables-1.10.15/pdfmake.min.js"></script>
<script src="~/Scripts/DataTables-1.10.15/vfs_fonts.js"></script>
<script src="~/Scripts/js/plugins/jquery/jquery.min.js"></script>*@
<script type="text/javascript">
    $.noConflict();
   
    $(document).ready(function () {
       
    //Programme Drop down Selected-change event
        $("#Programme").change(function() {
            $("#Department").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetDepartments", "Report")', // Calling json method
                dataType: 'json',
                data: { id: $("#Programme").val() },
                // Get Selected Country ID.
                success: function(departments) {
                    $("#Department").append('<option value="' + 0 + '">' +
                        '-- Select Department --' + '</option>');
                    $.each(departments, function(i, department) {
                        $("#Department").append('<option value="' + department.Value + '">' +
                            department.Text + '</option>');
                    });
                },
                error: function(ex) {
                    alert('Failed to retrieve departments.' + ex);
                }
            });
            return false;
        });

                //Get departmentOption
        $("#Department").change(function () {
            var departmentId = $("#Department").val();
            var programmeId = $("#Programme").val();
               $("#DepartmentOption").empty();

               if (programmeId > 0 && departmentId > 0 && (departmentId == 97 || departmentId == 91 || departmentId == 101 || departmentId == 100 || departmentId == 29 || departmentId == 102)) {
                               $.ajax({
                type: 'POST',
                url: '@Url.Action("GetDepartmentOptions", "Report")', // Calling json method
                traditional: true,
                data: { id: programmeId, departmentId: departmentId },
                success: function (departmentOptions) {
                    $("#DepartmentOption").append('<option value="' + 0 + '">' +
                        '-- Select Department Option --' + '</option>');
                    $.each(departmentOptions, function (i, option) {
                        
                        $("#DepartmentOption").append('<option value="' + option.Value + '">' +
                            option.Text + '</option>');
                    });
                    $("#optionDiv").show();
                },
                error: function(ex) {
                    alert('Failed to retrieve courses.' + ex);
                }
            });
               }


        })
    })
</script>
<div class="container">
    <div class="col-md-12 card p-5">
        <div class=" text-success">
            <h1><b>Students Transcript Report</b></h1>
        </div>

        <section id="loginForm">
            @using (Html.BeginForm("TranscriptReport", "Report", new { Area = "Admin" }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)

                @*<h5>Please enter your <b>Matriculation Number</b> in the box below to generate your School Fees invoice</h5>*@
                <hr class="no-top-padding" />

                <div class="panel panel-default">
                    <div class="panel-body">
                        <div class="form-group">

                            @Html.LabelFor(model => model.Session.Name, "Session", new { @class = "col-md-4 control-label" })
                            <div class="col-md-8">

                                @Html.DropDownListFor(model => model.Session.Id, (IEnumerable<SelectListItem>)ViewBag.Session, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Session.Id, null, new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.Programme.Name, "Programme", new { @class = "col-md-4 control-label" })
                            <div class="col-md-8">

                                @Html.DropDownListFor(m => m.Programme.Id, (IEnumerable<SelectListItem>)ViewBag.Programme, new { @class = "form-control", @id = "Programme" })
                                @Html.ValidationMessageFor(m => m.Programme.Id, null, new { @class = "text-danger" })
                            </div>
                        </div>
                        @*<div class="form-group">
            @Html.LabelFor(m => m.Semester.Name, "Semester", new { @class = "col-md-4 control-label" })
            <div class="col-md-8">

                @Html.DropDownListFor(m => m.Semester.Id, (IEnumerable<SelectListItem>)ViewBag.Semester, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Semester.Id, null, new { @class = "text-danger" })
            </div>
        </div>*@
                        <div class="form-group">
                            @Html.LabelFor(m => m.Department.Name, "Department", new { @class = "col-md-4 control-label" })
                            <div class="col-md-8">

                                @Html.DropDownListFor(m => m.Department.Id, (IEnumerable<SelectListItem>)ViewBag.Department, new { @class = "form-control", id = "Department" })
                                @Html.ValidationMessageFor(m => m.Department.Id, null, new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group" id="optionDiv" style="display:none">
                            @Html.LabelFor(model => model.DepartmentOption.Name, "Department Option", new { @class = "col-md-4 control-label " })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.DepartmentOption.Id, (IEnumerable<SelectListItem>)ViewBag.DepartmentOption, new { @class = "form-control", @id = "DepartmentOption" })
                                @Html.ValidationMessageFor(model => model.DepartmentOption.Id, null, new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.Level.Name, "Level", new { @class = "col-md-4 control-label" })
                            <div class="col-md-8">

                                @Html.DropDownListFor(model => model.Level.Id, (IEnumerable<SelectListItem>)ViewBag.Level, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Level.Id, null, new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-4 col-md-8">
                                <input type="submit" value="Display" class="btn btn-primary" />
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12">
                        @if (TempData["Message"] != null)
                        {
                            @Html.Partial("_Message", TempData["Message"])
                        }
                    </div>
                </div>
            }
        </section>

    </div>
    </div>
    <div class="col-md-12">
        @if (@Model.StudentLevels != null && @Model.StudentLevels.Count > 0)
        {
            <div class="panel-body">
                <div class="col-md-12">
                        <h3 class="text-center">List of Students</h3>
                    <table class="table table-bordered table-hover table-striped" id="myTable">
                        <thead>
                            <tr>
                                <th>S/N</th>
                                <th>FULL NAME</th>
                                <th>MATRIC NO.</th>
                                <th>ACTION</th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < @Model.StudentLevels.Count; i++)
                            {
                                int sn = i + 1;
                                <tr>
                                    <td>@sn</td>
                                    <td>@Model.StudentLevels[i].Student.FullName</td>
                                    <td>@Model.StudentLevels[i].Student.MatricNumber</td>
                                    <td>@Html.ActionLink("View Transcript", "ViewTranscript", new { sid = @Model.StudentLevels[i].Student.Id.ToString(), area = "admin", controller = "report" }, new { @class = "btn btn-success" })</td>

                                </tr>
                            }
                        </tbody>
                        @*<tfoot>
                            <tr>
                                <th>S/N</th>
                                <th>FULL NAME</th>
                                <th>MATRIC NO.</th>
                                <th>ACTION</th>
                            </tr>
                        </tfoot>*@
                    </table>

                    <br />
                </div>
            </div>
        }
    </div>


