@model Abundance_Nk.Web.Areas.Admin.ViewModels.StudentCourseRegistrationViewModel
@{
    ViewBag.Title = "RegisterCourse";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}
@if (TempData["Message"] != null)
{
    @Html.Partial("_Message", (Abundance_Nk.Model.Model.Message)TempData["Message"])
}
@if (TempData["Action"] != null)
{
    <div class="alert alert-dismissible alert-success">
        <button type="button" class="close" data-dismiss="alert">×</button>
        <p>@TempData["Action"].ToString()</p>
    </div>
}
<script src="~/Scripts/jquery-1.11.1.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {

        function populateCourses() {
            $("#Course").empty();
            var values = new Array();
            //vals = [$("#Department").val(), $("#Level").val(), $("#Semester").val()];
            values[0] = $("#Department").val();
            values[1] = $("#Level").val();
            values[2] = $("#Semester").val();
            values[3] = $('#Programme').val();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetCourses", "StudentCourseRegistration")', // Calling json method
                traditional: true,
                data: {ids :values},
                    // Get Selected Country ID.
                    success: function (courses) {
                      
                        $.each(courses, function (i, course) {
                            $("#Course").append('<option value="' + course.Value + '">' +
                                 course.Text + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Failed to retrieve courses.' + ex);
                    }
                });
            
        }
        //Programme Drop down Selected-change event
        $("#Programme").change(function () {
            if ($("#Department").val() > 0 && $("#Level").val() > 0 && $("#Semester").val() > 0) {
                populateCourses();
            }
            $("#Department").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetDepartments", "StudentCourseRegistration")', // Calling json method
                dataType: 'json',
                data: { id: $("#Programme").val() },
                // Get Selected Country ID.
                success: function (departments) {
                    $("#Department").append('<option value="' + 0 + '">' +
                            '-- Select Department --' + '</option>');
                    $.each(departments, function (i, department) {
                        $("#Department").append('<option value="' + department.Value + '">' +
                             department.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve departments.' + ex);
                }
            });
            return false;
        })
        //Session Drop down Selected change event
        $("#Session").change(function () {
            if ($("#Department").val() > 0 && $("#Level").val() > 0 && $("#Semester").val() > 0)
            {
                populateCourses();
            }

            $("#Semester").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetSemester", "StudentCourseRegistration")', // Calling json method
                dataType: 'json',
                data: { id: $("#Session").val() },
                // Get Selected Country ID.
                success: function (semesters) {
                    $("#Semester").append('<option value="' + 0 + '">' +
                           '-- Select Semester --' + '</option>');
                    $.each(semesters, function (i, semester) {
                        $("#Semester").append('<option value="' + semester.Value + '">' +
                             semester.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve semesters.' + ex);
                }
            });
            return false;
        })
        $("#Department").change(function () {
            if ($("#Department").val() > 0 && $("#Level").val() > 0 && $("#Semester").val() > 0) {
                populateCourses();
            }
        });
        $("#Session").change(function () {
            if ($("#Department").val() > 0 && $("#Level").val() > 0 && $("#Semester").val() > 0) {
                populateCourses();
            }
        });
        $("#Level").change(function () {
            if ($("#Department").val() > 0 && $("#Level").val() > 0 && $("#Semester").val() > 0) {
                populateCourses();
            }
         
        });

        
       

    });
</script>

@using (Html.BeginForm("RegisterCourse", "StudentCourseRegistration", new { area = "Admin" }, FormMethod.Post))
{
   
    <div class="col-md-12">
        <div class="form-group" style="color:black">
            <h4>Register Course For All Students</h4>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Session.Name,"Session", new { @class = "col-sm-2 control-label " })
        <div class="col-sm-10">
            @Html.DropDownListFor(model => model.Session.Id, (IEnumerable<SelectListItem>)ViewBag.Session, new { @class = "form-control" ,@id = "Session"})
            @Html.ValidationMessageFor(model => model.Session.Id, null, new { @class = "text-danger" })
        </div>

    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Semester.Name, "Semester", new { @class = "col-sm-2 control-label " })
        <div class="col-sm-10">
            @Html.DropDownListFor(model => model.Semester.Id, (IEnumerable<SelectListItem>)ViewBag.Semester, new { @class = "form-control" ,@id="Semester"})
            @Html.ValidationMessageFor(model => model.Semester.Id, null, new { @class = "text-danger" })
        </div>

    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Programme.Name, "Programme", new { @class = "col-sm-2 control-label " })
        <div class="col-sm-10">
            @Html.DropDownListFor(model => model.Programme.Id, (IEnumerable<SelectListItem>)ViewBag.Programme, new { @class = "form-control", @id = "Programme" })
            @Html.ValidationMessageFor(model => model.Programme.Id, null, new { @class = "text-danger" })
        </div>

    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Department.Name, "Department", new { @class = "col-sm-2 control-label " })
        <div class="col-sm-10">
            @Html.DropDownListFor(model => model.Department.Id, (IEnumerable<SelectListItem>)ViewBag.Department, new { @class = "form-control", @id = "Department" })
            @Html.ValidationMessageFor(model => model.Department.Id, null, new { @class = "text-danger" })
        </div>

    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Level.Name, "Level", new { @class = "col-sm-2 control-label " })
        <div class="col-sm-10">
            @Html.DropDownListFor(model => model.Level.Id, (IEnumerable<SelectListItem>)ViewBag.Level, new { @class = "form-control", @id = "Level" })
            @Html.ValidationMessageFor(model => model.Level.Id, null, new { @class = "text-danger" })
        </div>

    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Course.Name, "Course", new { @class = "col-sm-2 control-label " })
        <div class="col-sm-10">
            @Html.DropDownListFor(model => model.Course.Id, (IEnumerable<SelectListItem>)ViewBag.Course, new { @class = "form-control", @id = "Course" })
            @Html.ValidationMessageFor(model => model.Course.Id, null, new { @class = "text-danger" })
        </div>

    </div>
    <div class="form-group">
        <div class="col-sm-2"></div>
        <div class="col-sm-10">
            <input class="btn btn-success mr5" type="submit" name="submit" id="submit" value="Register" />

        </div>
    </div>

}


