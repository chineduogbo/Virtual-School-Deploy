@model Abundance_Nk.Web.Areas.Admin.ViewModels.PaymentPaystackViewModel

@{
    ViewBag.Title = "Payment Paystack Commission";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}
<script src="~/Scripts/jquery-2.1.3.js"></script>
<script type="text/javascript">
    var ItemId = 0;
    var activate;
    $(document).ready(function () {

        $('#MyTable').dataTable();
        $('#btnEditCommission').on('click', function () {
            var programmeId = $('#PaymentPaystackCommission_Programme_Id').val();
            var feeTypeId = $('#PaymentPaystackCommission_FeeType_Id').val();
            //var feeId = $('#PaymentPaystackCommission_Fee_Id').val();
            var sessionId = $('#PaymentPaystackCommission_Session_Id').val();
            var activated = false;
            if ($('#PaymentPaystackCommission_Activated').is(':checked')) {
                activated = true;
            }
            var amount = $('#PaymentPaystackCommission_Amount').val();
            var addOn = $('#PaymentPaystackCommission_AddOnFee').val();
            var id = ItemId;
            if (feeTypeId && sessionId && id > 0 && programmeId > 0) {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("EditPaystackCommission","PaymentPaystack")',
                    dataType: 'json',
                    data: { Id: id, feeType: feeTypeId, addOn: addOn, session: sessionId, activated: activated, amount: amount, programmeId: programmeId },
                    beforeSend: function () {
                        $(".Load").show();
                    },
                    complete: function () {
                        $(".Load").hide();
                    },
                    success: function (result) {
                        window.location.reload();
                        $('#createModal').modal('hide');
                        alert(result);

                    },
                    error: function (ex) {
                        alert('Save operation failed.' + ex);
                    }
                });
            } else {
                alert("Kindly Select All parameters to continue");
            }

        });

    });
    function showCreateModal(editId, feeType, session, amount, addOn, programme, activated) {
        $('#createModal').modal('show');
        ItemId = editId;
        activate = activated;
        $('#PaymentPaystackCommission_FeeType_Id').val(feeType);
        //$('#PaymentPaystackCommission_Fee_Id').val(fee);
        $('#PaymentPaystackCommission_Amount').val(amount);
        $('#PaymentPaystackCommission_Session_Id').val(session);
        $('#PaymentPaystackCommission_Programme_Id').val(programme);
        $('#PaymentPaystackCommission_AddOnFee').val(addOn);

        if (activate == 1) {
            $('#PaymentPaystackCommission_Activated').attr('checked', true);
        }
        else {
            $('#PaymentPaystackCommission_Activated').attr('checked', false);
        }
        

    }
    function deleteRecord(commissionId) {
        var agree = confirm("You Are About to Delete the record Permanently");
        if (agree == true) {
            if (commissionId > 0) {
                                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("DeletePaystackCommission","PaymentPaystack")',
                    dataType: 'json',
                    data: { commissionId: commissionId},
                    beforeSend: function () {
                        $(".Load").show();
                    },
                    complete: function () {
                        $(".Load").hide();
                    },
                    success: function (result) {
                        window.location.reload();
                        $('#createModal').modal('hide');
                        alert(result);

                    },
                    error: function (ex) {
                        alert('Delete operation failed.' + ex);
                    }
                });
            }
        }
        else {
            return false;
        }
    }
</script>

<div class="col-md-12">
    <div class="panel panel-custom">
        @if (TempData["Message"] != null)
        {
            @Html.Partial("_Message", (Abundance_Nk.Model.Model.Message) TempData["Message"])
        }

        <div class="panel-body text-justify">
            <h2 style="font-weight: 300; text-align: center">Paystack Payment Commission</h2>
            <hr/>
            <br/>
            @using (Html.BeginForm("CreatePaystackCommission", "PaymentPaystack", new {area = "Admin"}, FormMethod.Get))
            {
                <div class="row" style="margin-bottom: 3px">
                    <div class="col-md-10"></div>
                    <div class="col-md-2" style="padding-bottom: 3px">
                        <button class="btn btn-success mr5" type="submit" name="submit"><i class="fa fa-plus"> Create New </i></button>

                    </div>
                </div>
            }
            <table class="table-responsive table-striped table-condensed" style="width: 100%" id="MyTable">

                <thead>
                <tr>
                    <th>SN</th>
                    <th>Programme</th>
                    <th>FeeType</th>
                    <th>Commission</th>
                    <th>Add On</th>
                    <th>Session</th>
                    <th>EnteredBy</th>
                    <th>Activated</th>
                    <th></th>
                </tr>
                </thead>
                <tbody>
                @for (int i = 0; i < Model.PaymentPaystackCommissions.Count; i++)
                {
                    var sN = i + 1;
                    var id = Model.PaymentPaystackCommissions[i].Id;
                    var addedBy = Model.PaymentPaystackCommissions[i].User != null ? Model.PaymentPaystackCommissions[i].User.Username : null;
                    var active = @Model.PaymentPaystackCommissions[i].Activated == true ? 1 : 0;
                    //var feeAmount = Model.PaymentPaystackCommissions[i].Fee.Name + "__" + Model.PaymentPaystackCommissions[i].Fee.Amount;
                    <tr>
                        <td>@sN</td>
                        <td>@Model.PaymentPaystackCommissions[i].Programme.Name</td>
                        <td>@Model.PaymentPaystackCommissions[i].FeeType.Name</td>
                        <td>@Model.PaymentPaystackCommissions[i].Amount</td>
                        <td>@Model.PaymentPaystackCommissions[i].AddOnFee</td>
                        <td>@Model.PaymentPaystackCommissions[i].Session.Name</td>
                        <td>@addedBy</td>
                        <td>@Model.PaymentPaystackCommissions[i].Activated</td>
                        <td><button type="button" class="btn btn-success" id="editBtn" onclick="showCreateModal(@id,@Model.PaymentPaystackCommissions[i].FeeType.Id,@Model.PaymentPaystackCommissions[i].Session.Id,@Model.PaymentPaystackCommissions[i].Amount,@Model.PaymentPaystackCommissions[i].AddOnFee,@Model.PaymentPaystackCommissions[i].Programme.Id,@active)">Edit</button></td>
                        @*<td><button type="button" class="btn btn-success" id="deleteBtn" onclick="deleteRecord(@id)">Delete</button></td>*@

                    </tr>
                }

                </tbody>

            </table>

        </div>

    </div>
</div>
<div class="modal fade" role="dialog" id="createModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4   class="modal-title">Edit PaymentPayStack Commission</h4>

            </div>
            <div class="modal-body">
                @Html.HiddenFor(m => m.PaymentPaystackCommission.Id)
                <div class="form-group"  id="programmeTextBox2">
                    @Html.LabelFor(model => model.PaymentPaystackCommission.Programme.Id, "Programme:", new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.PaymentPaystackCommission.Programme.Id, (IEnumerable<SelectListItem>)ViewBag.Programme, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PaymentPaystackCommission.Programme.Id)
                </div>
                <div class="form-group" id="programmeTextBox">
                    @Html.LabelFor(model => model.PaymentPaystackCommission.FeeType.Id, "FeeType:", new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.PaymentPaystackCommission.FeeType.Id, (IEnumerable<SelectListItem>)ViewBag.FeeType, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PaymentPaystackCommission.FeeType.Id)
                </div>
                @*<div class="form-group" id="levelTextBox">
                    @Html.LabelFor(model => model.PaymentPaystackCommission.Fee.Id, "Fee:", new {@class = "control-label"})
                    @Html.DropDownListFor(model => model.PaymentPaystackCommission.Fee.Id, (IEnumerable<SelectListItem>) ViewBag.Fee, new {@class = "form-control"})
                    @Html.ValidationMessageFor(model => model.PaymentPaystackCommission.Fee.Id)
                </div>*@
                <div class="form-group">
                    @Html.LabelFor(model => model.PaymentPaystackCommission.Amount, "Commission", new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.PaymentPaystackCommission.Amount, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PaymentPaystackCommission.Amount)
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.PaymentPaystackCommission.AddOnFee, "Add On", new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.PaymentPaystackCommission.AddOnFee, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PaymentPaystackCommission.AddOnFee)
                </div>
                <div class="form-group" id="departmentTextBox">
                    @Html.LabelFor(model => model.PaymentPaystackCommission.Session.Id, "Session:", new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.PaymentPaystackCommission.Session.Id, (IEnumerable<SelectListItem>)ViewBag.Session, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PaymentPaystackCommission.Session.Id)
                </div>
                <div class="form-group"  id="terminalIdTextBox">
                    @Html.LabelFor(model => model.PaymentPaystackCommission.Activated, "Activated", new { @class = "control-label" })
                    @Html.CheckBoxFor(model => model.PaymentPaystackCommission.Activated, new { @checked = true })
                    @Html.ValidationMessageFor(model => model.PaymentPaystackCommission.Activated)
                </div>
              
            </div>
            <div class="modal-footer form-group">
                <span style="display: none" class="Load"><img src="~/Content/Images/bx_loader.gif" /></span>
                <button  type="button" id="btnEditCommission" class="btn btn-success">Save</button>

            </div>
        </div>
    </div>
</div>
