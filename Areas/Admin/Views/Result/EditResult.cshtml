@model Abundance_Nk.Web.Areas.Admin.ViewModels.ResultUploadViewModel
@{
    ViewBag.Title = "Edit Result";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<h2>Edit Result</h2>

<div class="panel panel-default">
    <div class="panel-body">

        <div class="col-md-12">
            <div>
                <p class="text-center"><h3>CORRECT RESULT DETAILS</h3></p>
            </div>

            <div class="row">
                <div>
                    @if (TempData["Message"] != null)
                    {
                        @Html.Partial("_Message", (Abundance_Nk.Model.Model.Message)TempData["Message"])
                    }
                </div>
            </div>

            @using (Html.BeginForm("EditResult", "Result", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)

                <div class="panel panel-default ">
                    <div class="panel-body ">
                        

                        <div class="form-group">
                            @Html.LabelFor(model => model.student.MatricNumber, new { @class = "col-sm-2 control-label " })
                            <div class="col-sm-10">
                                @Html.TextBoxFor(model => model.student.MatricNumber, new { @class = "form-control", @placeholder = "Enter Matric No" })
                                @Html.ValidationMessageFor(model => model.student.MatricNumber, null, new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Select Session and Semester", new { @class = "col-sm-2 control-label " })
                            <div class="col-sm-10">
                                @Html.DropDownListFor(model => model.StudentResult.SessionSemester.Id, (IEnumerable<SelectListItem>)ViewBag.SessionSemesters, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.StudentResult.SessionSemester.Id, null, new { @class = "text-danger" })
                                @Html.HiddenFor(model=> model.StudentResult.SessionSemester.Session.Id)
                                @Html.HiddenFor(model => model.StudentResult.SessionSemester.Semester.Id)
                             </div>
                        </div>

                        <div class="form-group">
                            <div class="col-sm-2"></div>
                            <div class="col-sm-10">
                                <input class="btn btn-success mr5" type="submit" name="submit" id="submit" value="Search" />
                                
                            </div>
                        </div>
                    </div>
                </div>

            }


            @if (Model == null || Model.StudentCourseRegistrationDetails == null || Model.StudentCourseRegistrationDetails.Count == 0) { return; }
            @using (Html.BeginForm("UpdateResult", "Result", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)

                
                <div>
                    <div class="form-group text-bold">
                        @Html.Label("Student Full name", new { @class = "col-sm-2 control-label " })
                        <div class="col-sm-10">
                            @Html.DisplayFor(model => model.StudentCourseRegistrationDetails[0].CourseRegistration.Student.FullName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.StudentResultDetails[0].Student.FullName, null, new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group text-bold">
                        @Html.Label("Student Matric No.", new { @class = "col-sm-2 control-label " })
                        <div class="col-sm-10">
                            @Html.DisplayFor(model => model.StudentCourseRegistrationDetails[0].CourseRegistration.Student.MatricNumber, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.StudentCourseRegistrationDetails[0].CourseRegistration.Student.MatricNumber, null, new { @class = "text-danger" })
                        </div>
                    </div>


                </div>
                
               
              <table class="table table table-bordered table-hover table-striped">

        <thead>
            <tr>
                <th>Code</th>
                <th>Test Score</th>
                <th>Exam Score</th>
                <th>Special Case</th>
            </tr>
        </thead>
        <tbody style="color:black;">
            @for (int i = 0; i < Model.StudentCourseRegistrationDetails.Count; i++)
            {
                <tr>
                    <td>@Html.DisplayFor(model => model.StudentCourseRegistrationDetails[i].Course.Code, new {@class = "form-control"})</td>
                    @*@if (Model.StudentCourseRegistrationDetails[i].SpecialCase != null)
                    {
                        <td>@Html.TextBoxFor(model => model.StudentCourseRegistrationDetails[i].SpecialCase, new { @class = "form-control" })</td>
                        <td>@Html.TextBoxFor(model => model.StudentCourseRegistrationDetails[i].SpecialCase, new { @class = "form-control" })</td>
                    }
                    else
                    {
                        <td>@Html.TextBoxFor(model => model.StudentCourseRegistrationDetails[i].TestScore, new { @class = "form-control" })</td>
                        <td>@Html.TextBoxFor(model => model.StudentCourseRegistrationDetails[i].ExamScore, new { @class = "form-control" })</td>
                    }*@
                    <td>@Html.TextBoxFor(model => model.StudentCourseRegistrationDetails[i].TestScore, new { @class = "form-control" })</td>
                    <td>@Html.TextBoxFor(model => model.StudentCourseRegistrationDetails[i].ExamScore, new {@class = "form-control"})</td>
                    <td>@Html.TextBoxFor(model => model.StudentCourseRegistrationDetails[i].SpecialCase, new { @class = "form-control" })</td>
                    
                        @Html.HiddenFor(model => model.StudentCourseRegistrationDetails[i].Id)
                </tr>
            }

        </tbody>



    </table>

              <div class="form-group">
                <div class="col-sm-2">
                    <input class="btn btn-success mr5" type="submit" name="submit" id="submit" value="Save" />

                </div>
                <div class="col-sm-10">
                    
                </div>
            </div>


            }
        </div>
    </div>

</div>
