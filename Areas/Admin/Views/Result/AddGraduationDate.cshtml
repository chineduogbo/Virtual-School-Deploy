@model Abundance_Nk.Web.Areas.Admin.ViewModels.ResultUploadViewModel
@{
    ViewBag.Title = "Graduation Date";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}
@if (TempData["Message"] != null)
{
    @Html.Partial("_Message", (Abundance_Nk.Model.Model.Message)TempData["Message"])
}


@section Scripts {
    @Scripts.Render("~/bundles/jquery")

    <link href="~/Content/bootstrap-datepicker3.css" rel="stylesheet"/>
    <script src="~/Content/js/bootstrap.js"></script>
    <script src="~/Scripts/bootstrap-datepicker.js"></script>

    <script type="text/javascript">
        $(document).ready(function() {

            $('.datepicker').datepicker();

            $('.datetimepicker12').datepicker({
                inline: true,
                sideBySide: true
            });

            //Programme Drop down Selected-change event
            $("#Programme").change(function() {

                $("#Department").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetDepartments", "Result")', // Calling json method
                    dataType: 'json',
                    data: { id: $("#Programme").val() },
                    success: function(departments) {
                        $("#Department").append('<option value="' + 0 + '">' +
                            '-- Select Department --' + '</option>');
                        $.each(departments, function(i, department) {
                            $("#Department").append('<option value="' + department.Value + '">' +
                                department.Text + '</option>');
                        });
                    },
                    error: function(ex) {
                        alert('Failed to retrieve departments.' + ex);
                    }
                });
                return false;
            });

        });

        function checkAllAction() {
            if ($("#checkAll").is(':checked')) {

                $(".check").prop("checked", true);

            } else {

                $(".check").prop("checked", false);

            }
        }

    </script>
}

@using (Html.BeginForm("AddGraduationDate", "Result", new {area = "Admin"}, FormMethod.Post))
{

    <div class="panel panel-default">
        <div class="panel-heading">
            <h3 class="panel-title"><i class="fa fa-fw fa-book"></i>Manage Student Graduation Date
            </h3>
        </div>
        <div class="panel-body">

            <div class="form-group">
                @Html.LabelFor(model => model.Session.Name, "Session", new {@class = "col-sm-2 control-label "})
                <div class="col-sm-10">
                    @Html.DropDownListFor(model => model.Session.Id, (IEnumerable<SelectListItem>) ViewBag.AllSession, new {@class = "form-control", @id = "Session"})
                    @Html.ValidationMessageFor(model => model.Session.Id, null, new {@class = "text-danger"})
                </div>

            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Programme.Name, "Programme", new {@class = "col-sm-2 control-label "})
                <div class="col-sm-10">
                    @Html.DropDownListFor(model => model.Programme.Id, (IEnumerable<SelectListItem>) ViewBag.Programme, new {@class = "form-control", @id = "Programme"})
                    @Html.ValidationMessageFor(model => model.Programme.Id, null, new {@class = "text-danger"})
                </div>

            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Department.Name, "Department", new {@class = "col-sm-2 control-label "})
                <div class="col-sm-10">
                    @Html.DropDownListFor(model => model.Department.Id, (IEnumerable<SelectListItem>) ViewBag.Department, new {@class = "form-control", @id = "Department"})
                    @Html.ValidationMessageFor(model => model.Department.Id, null, new {@class = "text-danger"})
                </div>

            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Level.Name, "Level", new {@class = "col-sm-2 control-label "})
                <div class="col-sm-10">
                    @Html.DropDownListFor(model => model.Level.Id, (IEnumerable<SelectListItem>) ViewBag.Level, new {@class = "form-control", @id = "Level"})
                    @Html.ValidationMessageFor(model => model.Level.Id, null, new {@class = "text-danger"})
                </div>

            </div>

            <div class="form-group">
                <div class="col-sm-2"></div>
                <div class="col-sm-10">
                    <input class="btn btn-success mr5 " type="submit" name="submit" id="submit" value="View"/>

                </div>
            </div>

        </div>
    </div>
}
        @if (Model == null || Model.StudentLevels == null)
        {
            return;
        }
        @if (Model != null && Model.StudentLevels.Count > 0)
        {
            <div class="row">
                @using (Html.BeginForm("SaveGraduationDate", "Result", FormMethod.Post))
                {

                    <div class="form-group">
                        <div class="col-sm-2 control-label">
                            <b>Date For: </b>
                        </div>
                        <div class="col-sm-4">
                            Graduation: @Html.CheckBoxFor(m => m.IsGraduationDate, new { @class = "check" })
                            Transcript: @Html.CheckBoxFor(m => m.IsTranscriptDate, new { @class = "check" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-sm-2 control-label"><b>Graduation Date:</b>
                        </div>
                        <div class="col-sm-10">
                            @Html.TextBoxFor(m => m.Date, new {@class = "datetimepicker12", placeholder = "Please choose a date..."}) &nbsp;
                            <input class="btn btn-success mr5 " type="submit" name="submit" id="submit" value="Save" />
                        </div>
                    </div>

                <table class="table table-responsive table-striped">
                    <tr>
                        <th>
                            S/N
                        </th>
                        <th>
                            MATRIC NUMBER
                        </th>
                        <th>
                            NAME
                        </th>
                        <th>
                            GRADUATION DATE
                        </th>
                        <th>
                            TRANSCRIPT DATE
                        </th>
                        <th>
                            CHECK <input id="checkAll" type="checkbox" onclick="checkAllAction()" />
                        </th>

                    </tr>
                    @for (int i = 0; i < Model.StudentLevels.Count; i++)
                    {
                        <tr>
                            @Html.HiddenFor(m => m.StudentLevels[i].Student.Id)
                            <td>
                                @(i + 1)
                            </td>
                            <td>
                                @Model.StudentLevels[i].Student.MatricNumber
                            </td>
                            <td>
                                @Model.StudentLevels[i].Student.FullName
                            </td>
                            <td>
                                @Model.StudentLevels[i].GraduationDate
                            </td>
                            <td>
                                @Model.StudentLevels[i].TranscriptDate
                            </td>
                            <td>
                                @Html.CheckBoxFor(m => m.StudentLevels[i].Active, new { @class = "check", type = "checkbox" })
                            </td>
                        </tr>
                    }
                </table>
                }
            </div>
            
        }
