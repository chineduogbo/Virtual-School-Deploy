@model Abundance_Nk.Web.Areas.Admin.ViewModels.ResultUploadViewModel
@{
    ViewBag.Title = "View Class List";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}
@if (TempData["Message"] != null)
{
    @Html.Partial("_Message", (Abundance_Nk.Model.Model.Message)TempData["Message"])
}

<script src="~/Scripts/jquery-1.11.1.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {

        $('#myTable').DataTable({
            dom: 'Bfrtip',
            ordering: true,
            buttons: [
                {
                    extend: 'copy',
                    exportOptions: {
                        columns: ':visible'
                    }


                },
                {
                    extend: 'csv',
                    exportOptions: {
                        columns: ':visible'
                    }

                },
                {
                    extend: 'excel',
                    exportOptions: {
                        columns: ':visible'
                    }


                },
                {
                    extend: 'pdf',
                    exportOptions: {
                        columns: ':visible'
                    }


                },
                {
                    extend: 'print',
                    exportOptions: {
                        columns: ':visible'
                    }


                }, , 'colvis'
            ]
        });

        function populateCourses() {
            $("#Course").empty();
            var values = new Array();
            //vals = [$("#Department").val(), $("#Level").val(), $("#Semester").val()];
            values[0] = $("#Department").val();
            values[1] = $("#Level").val();
            values[2] = $("#Semester").val();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetCourses", "StudentCourseRegistration")', // Calling json method
                traditional: true,
                data: {ids :values},
                    // Get Selected Country ID.
                    success: function (courses) {

                        $.each(courses, function (i, course) {
                            $("#Course").append('<option value="' + course.Value + '">' +
                                 course.Text + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Failed to retrieve courses.' + ex);
                    }
                });

        }
        //Programme Drop down Selected-change event
        $("#Programme").change(function () {
            if ($("#Department").val() > 0 && $("#Level").val() > 0 && $("#Semester").val() > 0) {
                populateCourses();
            }
            $("#Department").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetDepartmentsByOfficer", "Result")', // Calling json method
                dataType: 'json',
                data: { id: $("#Programme").val() },
                // Get Selected Country ID.
                success: function (departments) {
                    $("#Department").append('<option value="' + 0 + '">' +
                            '-- Select Department --' + '</option>');
                    $.each(departments, function (i, department) {
                        $("#Department").append('<option value="' + department.Value + '">' +
                             department.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve departments.' + ex);
                }
            });
            return false;
        })
        //Session Drop down Selected change event
        @*$("#Session").change(function () {
            if ($("#Department").val() > 0 && $("#Level").val() > 0 && $("#Semester").val() > 0)
            {
                populateCourses();
            }

            $("#Semester").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetSemester", "StudentCourseRegistration")', // Calling json method
                dataType: 'json',
                data: { id: $("#Session").val() },
                // Get Selected Country ID.
                success: function (semesters) {
                    $("#Semester").append('<option value="' + 0 + '">' +
                           '-- Select Semester --' + '</option>');
                    $.each(semesters, function (i, semester) {
                        $("#Semester").append('<option value="' + semester.Value + '">' +
                             semester.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve semesters.' + ex);
                }
            });
            return false;
        })*@
        $("#Department").change(function () {
            if ($("#Department").val() > 0 && $("#Level").val() > 0 && $("#Semester").val() > 0) {
                populateCourses();
            }
        });
        $("#Session").change(function () {
            if ($("#Department").val() > 0 && $("#Level").val() > 0 && $("#Semester").val() > 0) {
                populateCourses();
            }
        });
        $("#Level").change(function () {
            if ($("#Department").val() > 0 && $("#Level").val() > 0 && $("#Semester").val() > 0) {
                populateCourses();
            }

        });




    });
</script>

@using (Html.BeginForm("StudentDetailsReport", "Result", new { area = "Admin" }, FormMethod.Post))
{
    <div class="panel panel-default">
        <div class="panel-heading">
            <h3 class="panel-title"><i class="fa fa-fw fa-download"></i>Student details report</h3>
        </div>
        <div class="panel-body">

            <div class="form-group">
                @Html.LabelFor(model => model.Session.Name, "Session", new { @class = "col-sm-2 control-label " })
                <div class="col-sm-10">
                    @Html.DropDownListFor(model => model.Session.Id, (IEnumerable<SelectListItem>)ViewBag.AllSession, new { @class = "form-control", @id = "Session" })
                    @Html.ValidationMessageFor(model => model.Session.Id, null, new { @class = "text-danger" })
                </div>

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Programme.Name, "Programme", new { @class = "col-sm-2 control-label " })
                <div class="col-sm-10">
                    @Html.DropDownListFor(model => model.Programme.Id, (IEnumerable<SelectListItem>)ViewBag.Programme, new { @class = "form-control", @id = "Programme" })
                    @Html.ValidationMessageFor(model => model.Programme.Id, null, new { @class = "text-danger" })
                </div>

            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Department.Name, "Department", new { @class = "col-sm-2 control-label " })
                <div class="col-sm-10">
                    @Html.DropDownListFor(model => model.Department.Id, (IEnumerable<SelectListItem>)ViewBag.Department, new { @class = "form-control", @id = "Department" })
                    @Html.ValidationMessageFor(model => model.Department.Id, null, new { @class = "text-danger" })
                </div>

            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Level.Name, "Level", new { @class = "col-sm-2 control-label " })
                <div class="col-sm-10">
                    @Html.DropDownListFor(model => model.Level.Id, (IEnumerable<SelectListItem>)ViewBag.Level, new { @class = "form-control", @id = "Level" })
                    @Html.ValidationMessageFor(model => model.Level.Id, null, new { @class = "text-danger" })
                </div>

            </div>

            <div class="form-group">
                <div class="col-sm-2"></div>
                <div class="col-sm-10">
                    <input class="btn btn-success mr5 " type="submit" name="submit" id="submit" value="Get Detail Report" />

                </div>
            </div>

        </div>
    </div>

}

@if (Model != null && Model.CourseRegistrations != null && Model.CourseRegistrations.Count > 0)
{
    <div class="col-md-12">

        <table id="myTable" class="table table-bordered table-hover table-striped">
            <thead>
                <tr>
                    <th>Full Name</th>
                    <th>Matric Number</th>
                    <th>Department</th>
                    <th>Level</th>
                    <th>Session</th>
                    <th>Sex</th>
                    <th>State of Origin</th>
                    <th>Local Government Area</th>
                    <th>Phone</th>
                    <th>Email</th>
                </tr>
            </thead>
            <tbody style="color: black;">
                @for (int itemIndex = 0; itemIndex < Model.CourseRegistrations.Count; itemIndex++)
                {
                <tr>
                    <td>@Html.DisplayTextFor(m => m.CourseRegistrations[itemIndex].Student.FullName)</td>
                    <td>@Html.DisplayTextFor(m => m.CourseRegistrations[itemIndex].Student.MatricNumber)</td>
                    <td>@Html.DisplayTextFor(m => m.CourseRegistrations[itemIndex].Department.Name)</td>
                    <td>@Html.DisplayTextFor(m => m.CourseRegistrations[itemIndex].Level.Name)</td>
                    <td>@Html.DisplayTextFor(m => m.CourseRegistrations[itemIndex].Session.Name)</td>
                    <td>@Html.DisplayTextFor(m => m.CourseRegistrations[itemIndex].Student.Sex.Name)</td>
                    <td>@Html.DisplayTextFor(m => m.CourseRegistrations[itemIndex].Student.State.Name)</td>
                    <td>@Html.DisplayTextFor(m => m.CourseRegistrations[itemIndex].Student.LocalGovernment.Name)</td>
                    <td>@Html.DisplayTextFor(m => m.CourseRegistrations[itemIndex].Student.MobilePhone)</td>
                    <td>@Html.DisplayTextFor(m => m.CourseRegistrations[itemIndex].Student.Email)</td>






                </tr>
                }
            </tbody>
        </table>
    </div>
}


