@model Abundance_Nk.Web.Areas.Admin.ViewModels.TranscriptProcessorViewModel
@{
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
    ViewBag.Title = "Transcript Requests";
}

<script src="~/Scripts/DataTables-1.10.15/media/js/jquery.js"></script>

<link href="~/Scripts/DataTables-1.10.15/media/css/jquery.dataTables.css" rel="stylesheet" />
<script src="~/Scripts/DataTables-1.10.15/media/js/jquery.dataTables.js"></script>
<link href="~/Scripts/DataTables-1.10.15/extensions/Buttons/css/buttons.dataTables.css" rel="stylesheet" />
<script src="~/Scripts/DataTables-1.10.15/extensions/Buttons/js/dataTables.buttons.js"></script>
<script src="~/Scripts/DataTables-1.10.15/extensions/Buttons/js/buttons.colVis.js"></script>
<script src="~/Scripts/DataTables-1.10.15/extensions/Responsive/js/dataTables.responsive.js"></script>
<script src="~/Scripts/DataTables-1.10.15/buttons.flash.min.js"></script>
<script src="~/Scripts/DataTables-1.10.15/buttons.html5.min.js"></script>
<script src="~/Scripts/DataTables-1.10.15/buttons.print.min.js"></script>
<script src="~/Scripts/DataTables-1.10.15/jszip.min.js"></script>
<script src="~/Scripts/DataTables-1.10.15/pdfmake.min.js"></script>
<script src="~/Scripts/DataTables-1.10.15/vfs_fonts.js"></script>

<script>
    $(document).ready(function() {

        $("#myTable").DataTable();

    });

    function getnewValue(val) {
        var dropdownChanged = val.id;
        var buttonId = document.getElementById(dropdownChanged).offsetParent.nextElementSibling.childNodes[0].id;
        var buttonUrl = document.getElementById(dropdownChanged).offsetParent.nextElementSibling.childNodes[0].href;

        var ur = buttonUrl + "&stat=" + val.value;
        document.getElementById(buttonId).href = ur;

    }

    $("a").click(function() {
        alert($(this).text);
    });
</script>


<div class="col-sm-12" style="padding: 20px;">

    <h2>Incoming Transcript Requests</h2>

    <div class="row">

        <table class="table table-bordered table-hover table-striped" id="myTable">
            <thead>
                <tr>
                    <th>FULLNAME</th>
                    <th>MATRIC NO</th>
                    <th>DATE REQUESTED</th>
                    <th>DESTINATION</th>
                    <th>DELIVERY SERVICE</th>
                    <th>CLEARANCE STATUS</th>
                    <th>STATUS</th>
                    <th></th>
                </tr>
            </thead>
            <tbody style="color: black;">
                @for (int i = 0; i < Model.transcriptRequests.Count; i++)
                {
                    <tr>
                        <td>@Html.DisplayTextFor(m => m.transcriptRequests[i].Name)</td>
                        <td>@Html.DisplayTextFor(m => m.transcriptRequests[i].student.MatricNumber)</td>
                        <td>@Html.DisplayTextFor(m => m.transcriptRequests[i].DateRequested)</td>
                        <td>@Html.DisplayTextFor(m => m.transcriptRequests[i].DestinationAddress)</td>
                        @if (string.IsNullOrEmpty(Model.transcriptRequests[i].DeliveryService))
                        {
                            <td>-</td>
                        }
                        else
                        {
                            <td>@Html.DisplayTextFor(m => m.transcriptRequests[i].DeliveryService)</td>
                        }
                       
                        <td>@Html.DisplayTextFor(m => m.transcriptRequests[i].transcriptClearanceStatus.TranscriptClearanceStatusName)</td>
                        <td>@Html.DropDownListFor(m => m.transcriptRequests[i].transcriptStatus.TranscriptStatusId, (IEnumerable<SelectListItem>)ViewData["Dispatchstatus" + i], new { @class = "form-control", @onChange = "getnewValue(this)" })</td>
                        <td>@Html.ActionLink("Update", "UpdateStatus", "TranscriptProcessor", new { tid = Model.transcriptRequests[i].Id }, new { @class = "btn btn-default", @id = "url" + i })</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

</div>