


@model Abundance_Nk.Web.Areas.Admin.ViewModels.SupportViewModel



<script type="text/javascript" src="~/Scripts/js/plugins/jquery/jquery.min.js"></script>
<script type="text/javascript" src="~/Scripts/js/plugins/jquery/jquery-ui.min.js"></script>
<script type="text/javascript" src="~/Scripts/js/plugins/bootstrap/bootstrap.min.js"></script>

<script src="~/Scripts/dataTables.js"></script>


<script src="~/Scripts/DataTables-1.10.15/media/js/jquery.dataTables.js"></script>
<script src="~/Scripts/DataTables-1.10.15/extensions/Buttons/js/dataTables.buttons.js"></script>
<script src="~/Scripts/DataTables-1.10.15/extensions/Buttons/js/buttons.colVis.js"></script>
<script src="~/Scripts/DataTables-1.10.15/extensions/Responsive/js/dataTables.responsive.js"></script>


<script src="~/Scripts/DataTables-1.10.15/buttons.flash.min.js"></script>
<script src="~/Scripts/DataTables-1.10.15/buttons.html5.min.js"></script>
<script src="~/Scripts/DataTables-1.10.15/buttons.print.min.js"></script>
<script src="~/Scripts/DataTables-1.10.15/jszip.min.js"></script>
<script src="~/Scripts/DataTables-1.10.15/pdfmake.min.js"></script>
<script src="~/Scripts/DataTables-1.10.15/vfs_fonts.js"></script>

<script src="~/Scripts/DataTables-1.10.15/momentjs/moment.js"></script>

<script src="~/Scripts/DataTables-1.10.15/bootstrap-material-datetimepicker/js/bootstrap-material-datetimepicker.js"></script>

<script src="~/Scripts/bootstrap.js"></script>



@*<link rel="stylesheet" href="//cdn.datatables.net/1.10.16/css/jquery.dataTables.min.css">
    <script src="//cdn.datatables.net/1.10.16/js/jquery.dataTables.min.js"></script>

    <link rel="stylesheet" href="https://cdn.datatables.net/buttons/1.4.1/css/buttons.dataTables.min.css">
    <script type="text/javascript" language="javascript" src="https://cdn.datatables.net/buttons/1.4.1/js/dataTables.buttons.min.js"></script>
    <script type="text/javascript" language="javascript" src="https://cdn.datatables.net/buttons/1.4.1/js/buttons.flash.min.js"></script>
    <script type="text/javascript" language="javascript" src="https://cdn.datatables.net/buttons/1.4.1/js/buttons.html5.min.js"></script>
    <script type="text/javascript" language="javascript" src="https://cdn.datatables.net/buttons/1.4.1/js/buttons.print.min.js"></script>
    @section Scripts {*@

<!--<link href="~/Content/jquery-ui-1.10.3.css" rel="stylesheet" />
<link href="~/Content/sweetalert.css" rel="stylesheet" />


<script src="~/Scripts/bootstrap.js"></script>-->
@*<script src="~/Scripts/file-upload/jquery-ui-1.9.2.min.js"></script>*@


@*<script src="~/Scripts/jquery-2.1.3.min.js"></script>*@
<!--<script src="~/Scripts/sweetalert.min.js"></script>
<script src="~/Scripts/dataTables.js"></script>-->
@*<script src="~/Content/js/bootstrap.js"></script>*@
<!--<script src="~/Scripts/DataTables-1.10.15/extensions/Buttons/js/dataTables.buttons.js"></script>
<script src="~/Scripts/DataTables-1.10.15/extensions/Buttons/js/buttons.colVis.js"></script>
<script src="~/Scripts/DataTables-1.10.15/extensions/Responsive/js/dataTables.responsive.js"></script>
<script src="~/Scripts/DataTables-1.10.15/buttons.flash.min.js"></script>
<script src="~/Scripts/DataTables-1.10.15/buttons.html5.min.js"></script>
<script src="~/Scripts/DataTables-1.10.15/buttons.print.min.js"></script>
<script src="~/Scripts/DataTables-1.10.15/jszip.min.js"></script>
<script src="~/Scripts/DataTables-1.10.15/pdfmake.min.js"></script>
<script src="~/Scripts/DataTables-1.10.15/vfs_fonts.js"></script>-->

<script type="text/javascript">
    $(document).ready(function () {
        $.noConflict();
       

            $('#example').DataTable({
                dom: 'Bfrtip',
                ordering: true,
                retrieve: true,
                buttons: [
                    {
                        extend: 'copy',
                        exportOptions: {
                            columns: ':visible'
                        }
                    },
                    {
                        extend: 'csv',
                        exportOptions: {
                            columns: ':visible'
                        }
                    },
                    {
                        extend: 'excel',
                        exportOptions: {
                            columns: ':visible'
                        }
                    },
                    {
                        extend: 'pdf',
                        exportOptions: {
                            columns: ':visible'
                        }
                    },
                    {
                        extend: 'print',
                        exportOptions: {
                            columns: ':visible'
                        }
                    }, , 'colvis'
                ]
            });

            $("#Programme").change(function () {

            $("#Department").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetDepartments", "Support")', // Calling json method
                dataType: 'json',
                data: { id: $("#Programme").val() },

                success: function (departments) {

                    $.each(departments, function (i, department) {
                        $("#Department").append('<option value="' + department.Value + '">' +
                             department.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve departments.' + ex);
                }
            });
            return false;
            })



            $("#Programmes").change(function () {
            var selectedProgrammeId = $("#Programmes").val();
            $("#Departments").empty();

            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetDepartments", "Support")', // Replace with your action method URL
                dataType: 'json',
                data: { id: selectedProgrammeId },
                success: function (departments) {
                    $.each(departments, function (i, department) {
                        $("#Departments").append('<option value="' + department.Value + '">' + department.Text + '</option>');
                    });
                },
                error: function (ex) {
                    console.log('Failed to retrieve departments:', ex);
                    alert('Failed to retrieve departments.' + ex);
                }
            });
            return false;
        });

        // Function to handle Save button click event






        });
</script>







@using (Html.BeginForm("ManageSupervisorStaffProfile", "Support", new { area = "Admin" }, FormMethod.Post))
{
    <div class="panel panel-default">
        <div class="panel-heading">
            <h3 class="panel-title"><i class="fa fa-fw fa-toggle-left"></i>Manage Supervisor StaffProfile</h3>
        </div>
        <div class="panel-body">



            <div class="form-group">
                @Html.LabelFor(model => model.Programme.Name, "Programme", new { @class = "col-sm-2 control-label " })
                <div class="col-sm-10">
                    @Html.DropDownListFor(model => model.Programme.Id, (IEnumerable<SelectListItem>)ViewBag.Programme, new { @class = "form-control", @id = "Programme", required = "required" })
                    @Html.ValidationMessageFor(model => model.Programme.Id, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Department.Name, "Department", new { @class = "col-sm-2 control-label " })
                <div class="col-sm-10">
                    @Html.DropDownListFor(model => model.Department.Id, (IEnumerable<SelectListItem>)ViewBag.Department, "----Select Department---", new { @class = "form-control", @id = "Department", required = "required" })
                    @Html.ValidationMessageFor(model => model.Department.Id, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Session.Name, "Session", new { @class = "col-sm-2 control-label " })
                <div class="col-sm-10">
                    @Html.DropDownListFor(model => model.Session.Id, (IEnumerable<SelectListItem>)ViewBag.Session, "----Select Session---", new { @class = "form-control", @id = "Session", required = "required" })
                    @Html.ValidationMessageFor(model => model.Session.Id, "", new { @class = "text-danger" })
                </div>
            </div>




            <div class="form-group">
                <div class="col-sm-2"></div>
                <div class="col-sm-10">
                    <input class="btn btn-success mr5 " type="submit" name="submit" id="submit" value="View" />

                </div>



            </div>


        </div>
    </div>

}


<div class="form-group">

    <div class="col-sm-10">
        <button class="btn btn-success" data-toggle="modal" data-target="#myModal">Create Supervisor Profile</button>

    </div>

</div>


<div class="col-12 text-center">
    @{
        string programmeName = Model.Programme != null ? Model.Programme.Name : "N/A";
        string departmentName = Model.Department != null ? Model.Department.Name : "N/A";
    }
    <h2 class="fs-0 mb-0 text-nowrap py-2 py-xl-0 text-center" style="font-weight: bold; font-size: 24px;">
        Supervisor Lists. Programme: @programmeName. Department: @departmentName
    </h2>
</div>



@if (Model != null && Model.SupervisorStaffProfiles != null)
{
    <div class="container">
        <div class="row">

        </div>

        <div class="row">
            <div class="col">
                <div class="card">
                    <div class="card-body">
                        <div class="table-responsive">
                            <table id="example" class="display nowrap table table-bordered" style="width:100%">


                                <thead>
                                    <tr>
                                        <th>
                                            Sn
                                        </th>
                                        <th>
                                            Supervisor Name
                                        </th>
                                        <th>
                                            Active
                                        </th>
                                        <th>
                                            ClrmsNumber
                                        </th>
                                        <th>
                                            Actions
                                        </th>
                                        <th></th>

                                    </tr>
                                </thead>
                                <tbody>
                                    @for (int i = 0; i < Model.SupervisorStaffProfiles.Count; i++)
                                    {
                                        var s = i + 1;

                                        @Html.HiddenFor(model => model.SupervisorStaffProfiles[i].Id)
                                        <tr>
                                            <td>
                                                @s

                                            </td>
                                            <td>
                                                @Model.SupervisorStaffProfiles[i].SupervisorName
                                            </td>
                                            <td>
                                                @Model.SupervisorStaffProfiles[i].Active
                                            </td>
                                            <td>
                                                @Model.SupervisorStaffProfiles[i].CIrmsNumber
                                            </td>

                                            <td>
                                                @Html.ActionLink("Edit", "EditSupervisorStaffProfile", "Support", new { supervisorStaffId = @Model.SupervisorStaffProfiles[i].Id }, null)
                                            </td>
                                            <td>
                                                @Html.ActionLink("Delete", "DeleteSupervisorStaffProfile", "Support", new { supervisorStaffId = @Model.SupervisorStaffProfiles[i].Id }, null)


                                            </td>

                                        </tr>


                                    }
                                </tbody>
                                <!-- Table content -->
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}




<!-- Modal -->
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content" id="myModalContent">
            <div class="modal-header">
                <h4 class="modal-title" id="myModalLabel">Add Supervisor Staff Profile</h4>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            </div>
            <div class="modal-body">
                <form class="form-horizontal" method="post" id="AddSupervisorStaffProfile">

                    <div class="form-group">
                        <label for="SupervisorName">Supervisor Name</label>
                        <input type="text" class="form-control" id="SupervisorName" name="SupervisorName" placeholder="Supervisor Name">
                    </div>
                    <div class="form-group">
                        <label for="ClrmsNumber">ClrmsNumber</label>
                        <input type="text" class="form-control" id="ClrmsNumber" name="ClrmsNumber" placeholder="ClrmsNumber">
                    </div>

                    <div class="form-group">
                        <label for="Session">Session</label>
                        <select class="form-control" id="Sessions" name="Session">
                            <!-- Empty default option -->
                            <option value="">----Select Session---</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label for="Programmes">Programme</label>
                        <select class="form-control" id="Programmes" name="Programmes">
                            <!-- Empty default option -->
                            <option value="">----Select Programme---</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label for="Department">Department</label>
                        <select class="form-control" id="Departments" name="Departments">
                            <!-- The department options will be populated dynamically using JavaScript -->
                        </select>
                    </div>

                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="saveSupervisor()">Save</button>
            </div>
        </div>
    </div>
</div>



<script>
    var programmes = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.ProgrammeList));
    var sessions = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.SessionList));
    var selectProgramme = document.getElementById("Programmes");
    var selectSession = document.getElementById("Sessions")

    // Populate the select element with the programs from the ViewModel
    programmes.forEach(function(programme) {
        var option = document.createElement("option");
        option.value = programme.Id;
        option.textContent = programme.Name;
        selectProgramme.appendChild(option);
    });

    sessions.forEach(function (session) {
        var option = document.createElement("option");
        option.value = session.Id;
        option.textContent = session.Name;
        selectSession.appendChild(option);

    });

    function saveSupervisor() {
        // Get form elements
        var supervisorName = document.getElementById("SupervisorName").value;
        var programmeId = document.getElementById("Programmes").value;
        var departmentId = document.getElementById("Departments").value;
        var sessionId = document.getElementById("Sessions").value;
        var clrmsNumber = document.getElementById("ClrmsNumber").value;

        // Create an object to hold the form data
        //var formData = {
        //    SupervisorName: supervisorName,
        //    ProgrammeId: programmeId,
        //    DepartmentId: departmentId
        //};

        SupervisorStaffProfileDTO = {

            SupervisorName: supervisorName,
            ProgrammeId: programmeId,
            DepartmentId: departmentId,
            SessionId : sessionId,
            CIrmsNumber : clrmsNumber


        }



        // Send the form data using AJAX
        $.ajax({
            url: '@Url.Action("AddSupervisorStaffProfile", "Support")',
            type: 'POST',
            dataType: 'json',
            data: SupervisorStaffProfileDTO,
            success: function (result) {
                if (!result.isError) {
                    swal('INFO', result.message, 'info');
                    hideLoader();
                    window.location.reload(true);

                }
                else {
                    swal('INFO', result.message, 'info');
                    hideLoader();
                }

            },
            error: function (ex) {
                hideLoader();
                swal('INFO', ex, 'error');
            }
        });
        $("#myModal").modal("hide");
    }
</script>

<style>
    /* Add margins to the form elements within the modal with the specified identifier */
    #myModalContent .form-group {
        margin-left: 20px;
        margin-right: 20px;
    }
</style>


