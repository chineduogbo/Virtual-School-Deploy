@model Abundance_Nk.Web.Areas.Admin.ViewModels.HostelViewModel
@{
    ViewBag.Title = "HostelAllocationCriteria";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<script src="~/Scripts/jquery-3.1.1.js"></script>
<script src="~/Scripts/jquery-3.1.1.min.js"></script>

<script type="text/javascript">
    $(document).ready(function () {

        $("#Programme").change(function () {
            $("#Department").empty();

            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetDepartments", "HostelAllocation")', // Calling json method
                dataType: 'json',
                data: { id: $("#Programme").val() },
                success: function (departments) {
                    $("#Department").append('<option value="' + 0 + '"> -- Select -- </option>');
                    $.each(departments, function (i, departments) {
                        $("#Department").append('<option value="' + departments.Value + '">' +
                            departments.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve departments.' + ex);
                }
            });
            return false;
        });
    })
</script>

<div>
    @if (TempData["Message"] != null)
    {
        @Html.Partial("_Message", (Abundance_Nk.Model.Model.Message)TempData["Message"])
    }
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h4 class="panel-title">Hostel Allocation Criteria</h4>
    </div>
    <div class="panel-body">

        @using (Html.BeginForm("ViewHostelAllocationCriteria", "HostelAllocation", new { Area = "Admin" }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            <div class="panel panel-default">
                <div class="panel-body">
                    @Html.ValidationSummary(true)
                     
                    <div class="form-group">
                        @Html.LabelFor(m => m.HostelAllocationCriteria.Level.Name, "Level", new { @class = "col-md-3 control-label" })
                        <div class="col-md-9">
                            @Html.DropDownListFor(m => m.HostelAllocationCriteria.Level.Id, (IEnumerable<SelectListItem>)ViewBag.LevelId, new { @class = "form-control", @required = "required" })
                            @Html.ValidationMessageFor(m => m.HostelAllocationCriteria.Level.Id, null, new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-3 col-md-9">
                            <input type="submit" value="Submit" class="btn btn-success" />
                        </div>
                    </div>
                </div>
            </div>
        }

    </div>

    <br />
    <div class="panel-body">
        <div class="col-md-12">
         

            @if (Model.HostelAllocationCriterias != null && Model.HostelAllocationCriterias.Count > 0)
            {
                <div class="panel panel-danger">
                    <div class="panel-body">

                            <table class="table-bordered table-hover table-striped table-responsive table">
                                <tr>
                                    <th>
                                        Hostel
                                    </th>
                                    <th>
                                        Series/Floor
                                    </th>
                                    <th>
                                        Room
                                    </th>
                                    <th>
                                        Bed Space
                                    </th>
                                    <th>
                                        Edit
                                    </th>
                                    <th>
                                        Delete
                                    </th>
                                </tr>

                                @for (int i = 0; i < Model.HostelAllocationCriterias.Count; i++)
                                {
                                    <tr>

                                        @Html.HiddenFor(model => model.HostelAllocationCriterias[i].Id)
                                        @Html.HiddenFor(model => model.HostelAllocationCriteria.Level.Id)

                                        <td>
                                            @Model.HostelAllocationCriterias[i].Hostel.Name
                                        </td>
                                        <td>
                                            @Model.HostelAllocationCriterias[i].Series.Name
                                        </td>
                                        <td>
                                            @Model.HostelAllocationCriterias[i].Room.Number
                                        </td>
                                        <td>
                                            @Model.HostelAllocationCriterias[i].Corner.Name
                                        </td>
                                        <td>
                                            @Html.ActionLink("Edit", "EditHostelAllocationCriteria", "HostelAllocation", new { Area = "Admin", hid = Model.HostelAllocationCriterias[i].Id }, new { @class = "btn btn-success " })
                                        </td>
                                        <td>
                                            @Html.ActionLink("Delete", "ConfirmDeleteHostelAllocationCriteria", "HostelAllocation", new { Area = "Admin", hid = Model.HostelAllocationCriterias[i].Id }, new { @class = "btn btn-success " })
                                        </td>
                                    </tr>
                                }

                            </table>

                    </div>
                </div>

            }

        </div>
    </div>

</div>
