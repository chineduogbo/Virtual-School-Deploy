@model Abundance_Nk.Web.Areas.Applicant.ViewModels.PostJAMBFormPaymentViewModel

@{
    ViewBag.Title = "Post JAMB Programme";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="~/Scripts/jquery-1.11.1.min.js"></script>
<link href="~/Content/bootstrap.css" rel="stylesheet" />
<link href="~/Content/style.default.css" rel="stylesheet" />
<link href="~/Content/bootstrap-theme.min.css" rel="stylesheet" />

<script type="text/javascript">

    $(document).ready(function() {

        //var items = $('#AppliedCourse_Option_Id option').size();
        //if (items > 0) {
        //    $("#divDepartmentOption").show();
        //}
        //else {
        //    $("#divDepartmentOption").hide();
        //}

        var selectedProgramme = $("#Programme_Id").val();
        if (selectedProgramme == 1) {
            $("#divJambNo").show();
        } else {
            $("#divJambNo").hide();
        }

        $("#Programme_Id").change(function() {

            var programme = $("#Programme_Id").val();
            if (programme == 1) {
                $("#divJambNo").show();
                $("#divDepartmentOption").hide();
            } else if (programme == 2) {
                $("#divJambNo").hide();
                $("#divDepartmentOption").hide();
            } else if (programme == 3) {
                $("#divJambNo").hide();
                $("#divDepartmentOption").show();
            } else if (programme == 4) {
                $("#divJambNo").hide();
                $("#divDepartmentOption").show();
            } else {
                $("#divJambNo").hide();
                $("#divDepartmentOption").hide();
            }

            $("#AppliedCourse_Department_Id").empty();

            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetDepartmentByProgrammeId")', // we are calling json method
                dataType: 'json',
                data: { id: programme },
                success: function(departments) {
                    $("#AppliedCourse_Department_Id").append('<option value="' + 0 + '"> -- Select -- </option>');

                    $.each(departments, function(i, department) {
                        $("#AppliedCourse_Department_Id").append('<option value="' + department.Value + '">' + department.Text + '</option>');
                    });
                },
                error: function(ex) {
                    alert('Failed to retrieve departments.' + ex);
                }
            });
        }); //Load Department Option
        $("#AppliedCourse_Department_Id").change(function() {

            var department = $("#AppliedCourse_Department_Id").val();
            var programme = $("#Programme_Id").val();

            $("#AppliedCourse_Option_Id").empty();

            //if (department == 9 || department == 15 || department == 20) {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetDepartmentOptionByDepartment")', // we are calling json method
                dataType: 'json',
                data: { id: department, programmeid: programme },
                success: function(departmentOptions) {
                    //$("#hfDepartmentOptionExist").val(departmentOptions[0]);

                    if (departmentOptions == "" || departmentOptions == null || departmentOptions == undefined) {
                        $("#divDepartmentOption").hide();
                    } else {
                        $("#AppliedCourse_Option_Id").append('<option value="' + 0 + '"> -- Select -- </option>');
                        $.each(departmentOptions, function(i, Option) {
                            $("#AppliedCourse_Option_Id").append('<option value="' + Option.Value + '">' + Option.Text + '</option>');
                        });
                        if (programme > 2) {
                            $("#divDepartmentOption").show();
                        }

                    }
                },
                error: function(ex) {
                    alert('Failed to retrieve department Options.' + ex);
                }
            });

        }); //alert("Please double-check all entries you have made; you cannot change any of your information once you have generated an invoice.");

    })
</script>

@using (Html.BeginForm("RRRApplicationForms", "Form", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div class="row">
        <div class="col-md-12">
            <div class="panel panel-success-head">
                <div class="panel-heading">
                    <h2>Application Form Invoice</h2>
                    <p><b>Provide your programme and course of choice, then fill other personal details below. </b></p>
                </div>
            </div>

            <div class="panel panel-custom">
                <div class="panel-body">
                    <div class="col-md-1"></div>
                    <div class="col-md-10">
                        <div class="row">
                            <div>
                                @if (TempData["Message"] != null)
                                {
                                    @Html.Partial("_Message", TempData["Message"])
                                }
                            </div>
                        </div>

                        <div class="row">
                            <h3>Choose Programme</h3>
                            <hr style="margin-top: 0" />
                            <div class="col-md-12">

                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Programme.Id, new {@class = "control-label custom-text-white"})
                                            @Html.DropDownListFor(model => model.Programme.Id, (IEnumerable<SelectListItem>) ViewBag.ProgrammeId, new {@class = "form-control"})
                                            @Html.ValidationMessageFor(model => model.Programme.Id, null, new {@class = "text-danger"})
                                        </div>
                                    </div>

                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.AppliedCourse.Department.Id, "Course", new {@class = "control-label custom-text-white"})
                                            @Html.DropDownListFor(model => model.AppliedCourse.Department.Id, (IEnumerable<SelectListItem>) ViewBag.DepartmentId, new {@class = "form-control"})
                                            @Html.ValidationMessageFor(model => model.AppliedCourse.Department.Id, null, new {@class = "text-danger"})
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-6">
                                        <div id="divJambNo" class="form-group" style="display: none">
                                            @Html.LabelFor(model => model.JambRegistrationNumber, new {@class = "control-label custom-text-white"})
                                            @Html.TextBoxFor(model => model.JambRegistrationNumber, new {@class = "form-control"})
                                            @Html.ValidationMessageFor(model => model.JambRegistrationNumber, null, new {@class = "text-danger"})
                                        </div>
                                    </div>

                                    <div class="col-md-6">
                                        <div id="divDepartmentOption" class="form-group" style="display: none">
                                            @Html.LabelFor(model => model.AppliedCourse.Option.Id, "Course Option", new {@class = "control-label custom-text-white"})
                                            @Html.DropDownListFor(model => model.AppliedCourse.Option.Id, (IEnumerable<SelectListItem>) ViewBag.DepartmentOptionId, new {@class = "form-control"})
                                            @Html.ValidationMessageFor(model => model.AppliedCourse.Option.Id, null, new {@class = "text-danger"})
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <br />

                        <div class="row">
                            <h3>Please enter other personal details</h3>
                            <hr style="margin-top: 0" />

                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Person.LastName, new {@class = "control-label custom-text-white"})
                                    @Html.TextBoxFor(model => model.Person.LastName, new {@class = "form-control"})
                                    @Html.ValidationMessageFor(model => model.Person.LastName, null, new {@class = "text-danger"})
                                </div><!-- form-group -->
                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Person.FirstName, new {@class = "control-label custom-text-white"})
                                    @Html.TextBoxFor(model => model.Person.FirstName, new {@class = "form-control"})
                                    @Html.ValidationMessageFor(model => model.Person.FirstName, null, new {@class = "text-danger"})
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Person.OtherName, new {@class = "control-label custom-text-white"})
                                    @Html.TextBoxFor(model => model.Person.OtherName, new {@class = "form-control"})
                                    @Html.ValidationMessageFor(model => model.Person.OtherName, null, new {@class = "text-danger"})
                                </div>
                            </div><!-- form-group -->

                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Person.State.Id, new {@class = "control-label custom-text-white"})
                                    @Html.DropDownListFor(model => model.Person.State.Id, (IEnumerable<SelectListItem>) ViewBag.StateId, new {@class = "form-control"})
                                    @Html.ValidationMessageFor(model => model.Person.State.Id, null, new {@class = "text-danger"})
                                </div>
                            </div><!-- form-group -->
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Person.MobilePhone, new {@class = "control-label custom-text-white"})
                                    @Html.TextBoxFor(model => model.Person.MobilePhone, new {@class = "form-control", @placeholder = "080XXXXXXXX"})
                                    @Html.ValidationMessageFor(model => model.Person.MobilePhone, null, new {@class = "text-danger"})
                                </div>
                            </div><!-- form-group -->

                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Person.Email, new {@class = "control-label custom-text-white"})
                                    @Html.TextBoxFor(model => model.Person.Email, new {@class = "form-control"})
                                    @Html.ValidationMessageFor(model => model.Person.Email, null, new {@class = "text-danger"})
                                </div>
                            </div><!-- form-group -->
                        </div><!-- row -->

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.remitaPayment.RRR, new {@class = "control-label custom-text-white"})
                                    @Html.TextBoxFor(model => model.remitaPayment.RRR, new {@class = "form-control"})
                                    @Html.ValidationMessageFor(model => model.remitaPayment.RRR, null, new {@class = "text-danger"})
                                </div>
                            </div><!-- form-group -->

                            <div class="col-md-6">
                                <div class="form-group">
                                </div>
                            </div><!-- form-group -->
                        </div><!-- row -->
                    </div>
                </div>
                <div class="col-md-1"></div>
            </div>

            <div class="panel-footer">
                <div class="row">
                    <div class="col-md-1"></div>
                    <div class="col-sm-10 ">
                        <div class="form-inline">
                            <div class="form-group">
                                <input class="btn btn-success btn-lg mr5" type="submit" name="submit" id="submit" value="Generate Invoice" />
                            </div>
                        </div>
                    </div>
                    <div class="col-md-1"></div>
                </div>
            </div>
            <!-- panel-footer -->
        </div><!-- panel -->
    </div>
    <!-- panel-body -->
}