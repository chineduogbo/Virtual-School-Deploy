@using Abundance_Nk.Web.Models
@model Abundance_Nk.Web.Areas.Admin.ViewModels.ELearningViewModel

@{
    ViewBag.Title = "E-Learning";
    Layout = "~/Areas/Student/Views/Shared/_Layout.cshtml";
}



<script src="~/Scripts/jquery-1.11.1.min.js"></script>
<script type="text/javascript">
    $(document).ready(function() {

        function populateCourses() {
            $("#Course").empty();
            var values = new Array();
            //vals = [$("#Department").val(), $("#Level").val(), $("#Semester").val()];
            values[0] = $("#Department").val();
            values[1] = $("#Level").val();
            values[2] = $("#Semester").val();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetCourses", "StaffCourseAllocation")', // Calling json method
                traditional: true,
                data: { ids: values },
                // Get Selected Country ID.
                success: function(courses) {

                    $.each(courses, function(i, course) {
                        $("#Course").append('<option value="' + course.Value + '">' +
                            course.Text + '</option>');
                    });
                },
                error: function(ex) {
                    alert('Failed to retrieve courses.' + ex);
                }
            });

        }

        $("#Session").change(function() {
            if ($("#Department").val() > 0 && $("#Level").val() > 0 && $("#Semester").val() > 0) {
                populateCourses();
            }

            $("#Semester").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetSemester", "Elearning")', // Calling json method
                dataType: 'json',
                data: { id: $("#Session").val() },
                // Get Selected Country ID.
                success: function(semesters) {
                    $("#Semester").append('<option value="' + 0 + '">' +
                        '-- Select Semester --' + '</option>');
                    $.each(semesters, function(i, semester) {
                        $("#Semester").append('<option value="' + semester.Value + '">' +
                            semester.Text + '</option>');
                    });
                },
                error: function(ex) {
                    alert('Failed to retrieve semesters.' + ex);
                }
            });
            return false;
        });
        $("#Department").change(function() {
            if ($("#Department").val() > 0 && $("#Level").val() > 0 && $("#Semester").val() > 0) {
                populateCourses();
            }
        });
        $("#Session").change(function() {
            if ($("#Department").val() > 0 && $("#Level").val() > 0 && $("#Semester").val() > 0) {
                populateCourses();
            }
        });
        $("#Level").change(function() {
            if ($("#Department").val() > 0 && $("#Level").val() > 0 && $("#Semester").val() > 0) {
                populateCourses();
            }

        });

    });
</script>

@using (Html.BeginForm("Assignment", "Elearning", new { area = "Student" }, FormMethod.Post))
{
    <div class="panel panel-default">
        @if (TempData["Message"] != null)
        {
            @Html.Partial("_Message", TempData["Message"])
        }

        <div class="panel-heading">
            <h3 class="panel-title">
                <i class="fa fa-fw fa-download"></i>Assignments
            </h3>
        </div>
        <div class="panel-body">

            <div class="form-group">
                @Html.LabelFor(model => model.Session.Name, "Session", new { @class = "col-sm-2 control-label " })
                <div class="col-sm-10">
                    @Html.DropDownListFor(model => model.Session.Id, (IEnumerable<SelectListItem>)ViewBag.Session, new { @class = "form-control", @id = "Session" })
                    @Html.ValidationMessageFor(model => model.Session.Id, null, new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Semester.Name, "Semester", new { @class = "col-sm-2 control-label " })
                <div class="col-sm-10">
                    @Html.DropDownListFor(model => model.Semester.Id, (IEnumerable<SelectListItem>)ViewBag.Semester, new { @class = "form-control", @id = "Semester" })
                    @Html.ValidationMessageFor(model => model.Semester.Id, null, new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Level.Name, "Level", new { @class = "col-sm-2 control-label " })
                <div class="col-sm-10">
                    @Html.DropDownListFor(model => model.Level.Id, (IEnumerable<SelectListItem>)ViewBag.Level, new { @class = "form-control", @id = "Level" })
                    @Html.ValidationMessageFor(model => model.Level.Id, null, new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-sm-2"></div>
                <div class="col-sm-10">
                    <input class="btn btn-primary mr5 " type="submit" name="submit" id="submit" value="View" />
                </div>
            </div>
        </div>
    </div>
}

<br />
@if (Model.ELearningViews != null && Model.ELearningViews.Count() > 0)
{
    <div class="panel panel-danger">
        <div class="panel-body">
            <div class="table-responsive">
                <table class="table-bordered table-hover table-striped  table">
                    <tr>
                        <th>
                            Course Code
                        </th>
                        <th>
                            Course Name
                        </th>
                        <th>
                            Topic
                        </th>
                        <th>
                            Instruction
                        </th>
                        <th>
                            Set Date
                        </th>
                        <th>
                            Due Date
                        </th>
                        <th>
                            Score
                        </th>
                        <th>

                        </th>
                        <th>

                        </th>

                    </tr>

                    @for (int i = 0; i < Model.ELearningViews.Count(); i++)
                    {
                        DateTime currentDateTime = DateTime.UtcNow;
                        <tr>
                            <td>
                                @Model.ELearningViews[i].CourseCode
                            </td>
                            <td>
                                @Model.ELearningViews[i].CourseName
                            </td>
                            <td>
                                @Model.ELearningViews[i].Name
                            </td>
                            <td>
                                @Model.ELearningViews[i].Description
                            </td>
                            <td>
                                @Model.ELearningViews[i].SetDate
                            </td>
                            <td>
                                @Model.ELearningViews[i].DueDate
                            </td>
                            @if (Model.ELearningViews[i].isPublished)
                            {
                                <td>@Model.ELearningViews[i].AssignmentScore</td>
                            }
                            else
                            {
                                <td>No Score Yet</td>
                            }

                            <td>
                                @if (Convert.ToDateTime(Model.ELearningViews[i].DueDate) >= currentDateTime)
                                {
                                    <a href="@Url.Content(Model.ELearningViews[i].Url)" class="btn btn-primary-alt" target="_blank">View</a>
                                }
                                else
                                {
                                    <a href="@Url.Content(Model.ELearningViews[i].Url)" class="btn btn-primary-alt" target="_blank" disabled>View</a>
                                }

                            </td>
                            <td>
                                @if (Convert.ToDateTime(Model.ELearningViews[i].DueDate) >= currentDateTime)
                                {
                                    if (Model.ELearningViews[i].HasSubmitted)
                                    {
                                        @Html.ActionLink("View Submission", "ViewSubmittedAssignment", "Elearning", new { Area = "Student", id = Utility.Encrypt(Model.ELearningViews[i].SubmittedAssignmentId.ToString()) }, new { @class = "btn btn-info" })
                                    }
                                    else
                                    {
                                        @Html.ActionLink("Submit Assignment", "Submit", "Elearning", new { Area = "Student", id = Utility.Encrypt(Model.ELearningViews[i].AssignmentId.ToString()) }, new { @class = "btn btn-success" })
                                    }

                                }
                                else if (Model.ELearningViews[i].HasSubmitted)
                                {
                                    @Html.ActionLink("View Submission", "ViewSubmittedAssignment", "Elearning", new { Area = "Student", id = Utility.Encrypt(Model.ELearningViews[i].SubmittedAssignmentId.ToString()) }, new { @class = "btn btn-info" })
                                }

                            </td>
                        </tr>
                    }
                </table>
            </div>
        </div>
    </div>
}

